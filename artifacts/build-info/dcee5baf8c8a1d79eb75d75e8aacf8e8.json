{
	"id": "dcee5baf8c8a1d79eb75d75e8aacf8e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KipuBankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Banco Kipu (KipuBankV2)\n * @author Antony Arguello\n * @notice Contrato bancario descentralizado que permite depósitos y retiros en ETH y USDC.\n *         Utiliza Chainlink como oráculo de precios y controla límites globales y de capital.\n * @dev Implementa seguridad contra reentradas y permisos de propietario.\n */\ncontract KipuBankV2 is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // -----------------------------------------------------------------------\n    // ░░░ VARIABLES DE ESTADO ░░░\n    // -----------------------------------------------------------------------\n\n    /// @notice Bóveda: mapea usuario => token => cantidad.\n    mapping(address user => mapping(address token => uint256 amount)) public s_vault;\n\n    /// @notice Oráculo de precios (por ejemplo, ETH/USD de Chainlink).\n    AggregatorV3Interface public s_oracle;\n\n    /// @notice Tiempo máximo permitido sin actualización del oráculo (1 hora).\n    uint256 constant ORACLE_HEARTBEAT = 3600;\n\n    /// @notice Factor de conversión entre ETH (wei), precio (1e8) y USDC (1e6).\n    uint256 constant DECIMAL_FACTOR = 1 * 10 ** 20;\n\n    /// @notice Token USDC usado por el contrato.\n    IERC20 public immutable i_usdc;\n\n    /// @notice Límite global de depósitos (en unidades USDC, 6 decimales).\n    uint256 public s_depositLimit;\n\n    /// @notice Total acumulado de depósitos (en USDC-units).\n    uint256 public s_totalDeposits;\n\n    /// @notice Capital máximo permitido en el banco.\n    uint256 public s_bankCapital;\n\n    /// @notice Límite máximo de retiro en ETH.\n    uint256 private constant WITHDRAW_LIMIT = 0.01 ether;\n\n    /// @notice Contadores de operaciones.\n    uint256 public s_withdrawCount;\n    uint256 public s_depositCount;\n\n    // -----------------------------------------------------------------------\n    // ░░░ EVENTOS ░░░\n    // -----------------------------------------------------------------------\n\n    event SuccessfulWithdrawal(address user, uint256 amount);\n    event SuccessfulDeposit(address user, address currency, uint256 amount);\n    event OracleUpdated(address newOracle);\n\n    // -----------------------------------------------------------------------\n    // ░░░ ERRORES PERSONALIZADOS ░░░\n    // -----------------------------------------------------------------------\n\n    error MoneyLimit(uint256 amount, address user, string detail);\n    error InsufficientBalance(uint256 amount, address user, string detail);\n    error GlobalLimit(uint256 amount, string detail);\n    error OracleCompromised();\n    error OracleOutdated();\n    error BankLimitReached(uint256 bankLimit);\n    error WithdrawalFailed();\n\n    // -----------------------------------------------------------------------\n    // ░░░ MODIFICADORES ░░░\n    // -----------------------------------------------------------------------\n\n    /**\n     * @dev Verifica que el monto no exceda el límite global de depósitos.\n     * @param _usdcAmount Monto en unidades USDC.\n     */\n    modifier withinGlobalLimit(uint256 _usdcAmount) {\n        if (_exceedsDepositLimit(_usdcAmount)) {\n            revert GlobalLimit(_usdcAmount, \"Global limit reached\");\n        }\n        _;\n    }\n\n    /**\n     * @dev Verifica que el monto no exceda el capital total permitido del banco.\n     * @param _usdcAmount Monto en unidades USDC.\n     */\n    modifier withinBankCapital(uint256 _usdcAmount) {\n        if (s_totalDeposits + _usdcAmount > s_bankCapital) {\n            revert BankLimitReached(s_bankCapital);\n        }\n        _;\n    }\n\n    /**\n     * @dev Verifica que el monto de retiro sea válido y que el usuario tenga saldo suficiente.\n     * @param _amount Monto a retirar (en wei).\n     */\n    modifier validWithdrawal(uint256 _amount) {\n        if (_amount > WITHDRAW_LIMIT) {\n            revert MoneyLimit(_amount, msg.sender, \"Cannot withdraw more than 0.01 ETH\");\n        } else if (s_vault[msg.sender][address(0)] < _amount) {\n            revert InsufficientBalance(_amount, msg.sender, \"Insufficient balance\");\n        }\n        _;\n    }\n\n    // -----------------------------------------------------------------------\n    // ░░░ CONSTRUCTOR ░░░\n    // -----------------------------------------------------------------------\n\n    /**\n     * @param _bankCapital Límite máximo de capital del banco (en USDC-units).\n     * @param _depositLimitUSDC Límite global de depósitos (en USDC-units).\n     * @param _oracle Dirección del oráculo de Chainlink (ETH/USD).\n     * @param _usdc Dirección del contrato del token USDC.\n     * @param _owner Dirección del propietario del contrato.\n     */\n    constructor(\n        uint256 _bankCapital,\n        uint256 _depositLimitUSDC,\n        address _oracle,\n        address _usdc,\n        address _owner\n    ) Ownable(_owner) {\n        s_oracle = AggregatorV3Interface(_oracle);\n        i_usdc = IERC20(_usdc);\n        s_bankCapital = _bankCapital;\n        s_depositLimit = _depositLimitUSDC;\n    }\n\n    // -----------------------------------------------------------------------\n    // ░░░ FUNCIONES INTERNAS ░░░\n    // -----------------------------------------------------------------------\n\n    /**\n     * @notice Obtiene el precio ETH/USD desde el oráculo Chainlink.\n     * @return ethUSDPrice Precio de ETH en USD con 8 decimales.\n     */\n    function _getETHUSDPrice() internal view returns (uint256 ethUSDPrice) {\n        (, int256 price, , uint256 updatedAt, ) = s_oracle.latestRoundData();\n\n        if (price == 0) revert OracleCompromised();\n        if (block.timestamp - updatedAt > ORACLE_HEARTBEAT) revert OracleOutdated();\n\n        ethUSDPrice = uint256(price);\n    }\n\n    /**\n     * @notice Convierte una cantidad en ETH a su equivalente en USDC.\n     * @param _ethAmount Cantidad en wei.\n     * @return convertedAmount Equivalente en USDC (6 decimales).\n     */\n    function _convertETHtoUSDC(uint256 _ethAmount)\n        internal\n        view\n        returns (uint256 convertedAmount)\n    {\n        convertedAmount = (_ethAmount * _getETHUSDPrice()) / DECIMAL_FACTOR;\n    }\n\n    /**\n     * @notice Verifica si se excede el límite global de depósitos.\n     * @param amountUSDC Monto en unidades USDC.\n     */\n    function _exceedsDepositLimit(uint256 amountUSDC) private view returns (bool) {\n        return (s_totalDeposits + amountUSDC) > s_depositLimit;\n    }\n\n    // -----------------------------------------------------------------------\n    // ░░░ FUNCIONES DE CONSULTA ░░░\n    // -----------------------------------------------------------------------\n\n    /**\n     * @notice Retorna el balance total del contrato en unidades USDC.\n     */\n    function contractBalanceInUSDC() public view returns (uint256 totalBalance) {\n        uint256 ethInUSDC = _convertETHtoUSDC(address(this).balance);\n        uint256 usdcBalance = i_usdc.balanceOf(address(this));\n        totalBalance = ethInUSDC + usdcBalance;\n    }\n\n    /**\n     * @notice Retorna el saldo del usuario en ETH convertido a USDC.\n     */\n    function viewETHBalance(address user) external view returns (uint256) {\n        return _convertETHtoUSDC(s_vault[user][address(0)]);\n    }\n\n    /**\n     * @notice Retorna el saldo del usuario en USDC.\n     */\n    function viewUSDCBalance(address user) external view returns (uint256) {\n        return s_vault[user][address(i_usdc)];\n    }\n\n    // -----------------------------------------------------------------------\n    // ░░░ FUNCIONES DE USUARIO ░░░\n    // -----------------------------------------------------------------------\n\n    /**\n     * @notice Permite al usuario retirar ETH de su bóveda.\n     * @param _withdrawAmount Cantidad a retirar en wei.\n     */\n    function withdrawETH(uint256 _withdrawAmount)\n        external\n        nonReentrant\n        validWithdrawal(_withdrawAmount)\n    {\n        s_vault[msg.sender][address(0)] -= _withdrawAmount;\n        s_withdrawCount++;\n\n        (bool success, ) = payable(msg.sender).call{value: _withdrawAmount}(\"\");\n        require(success, \"Withdrawal failed\");\n\n        emit SuccessfulWithdrawal(msg.sender, _withdrawAmount);\n    }\n\n    /**\n     * @notice Permite depositar ETH en la bóveda personal.\n     */\n    function depositETH()\n        external\n        payable\n        nonReentrant\n        withinGlobalLimit(_convertETHtoUSDC(msg.value))\n        withinBankCapital(_convertETHtoUSDC(msg.value))\n    {\n        require(msg.value > 0, \"Zero deposit\");\n\n        uint256 usdAmount = _convertETHtoUSDC(msg.value);\n        s_depositCount++;\n        s_totalDeposits += usdAmount;\n        s_vault[msg.sender][address(0)] += msg.value;\n\n        emit SuccessfulDeposit(msg.sender, address(0), msg.value);\n    }\n\n    /**\n     * @notice Permite depositar USDC directamente.\n     * @param _usdcAmount Cantidad en unidades USDC (6 decimales).\n     */\n    function depositUSDC(uint256 _usdcAmount)\n        external\n        nonReentrant\n        withinGlobalLimit(_usdcAmount)\n        withinBankCapital(_usdcAmount)\n    {\n        require(_usdcAmount > 0, \"Zero deposit\");\n\n        s_depositCount++;\n        s_totalDeposits += _usdcAmount;\n        s_vault[msg.sender][address(i_usdc)] += _usdcAmount;\n\n        i_usdc.safeTransferFrom(msg.sender, address(this), _usdcAmount);\n\n        emit SuccessfulDeposit(msg.sender, address(i_usdc), _usdcAmount);\n    }\n\n    /**\n     * @notice Permite retirar USDC desde la bóveda personal.\n     * @param _usdcAmount Cantidad en USDC (6 decimales).\n     */\n    function withdrawUSDC(uint256 _usdcAmount) external nonReentrant {\n        if (s_vault[msg.sender][address(i_usdc)] < _usdcAmount) {\n            revert InsufficientBalance(_usdcAmount, msg.sender, \"Insufficient balance\");\n        }\n\n        s_vault[msg.sender][address(i_usdc)] -= _usdcAmount;\n        s_withdrawCount++;\n\n        i_usdc.safeTransfer(msg.sender, _usdcAmount);\n\n        emit SuccessfulWithdrawal(msg.sender, _usdcAmount);\n    }\n\n    // -----------------------------------------------------------------------\n    // ░░░ FUNCIONES ADMINISTRATIVAS ░░░\n    // -----------------------------------------------------------------------\n\n    /**\n     * @notice Permite actualizar el oráculo de precios.\n     * @param _newOracle Nueva dirección del oráculo Chainlink.\n     */\n    function setOracle(address _newOracle) external onlyOwner {\n        s_oracle = AggregatorV3Interface(_newOracle);\n        emit OracleUpdated(_newOracle);\n    }\n\n    /**\n     * @notice Permite al propietario ajustar el capital máximo del banco.\n     * @param _newCapital Límite en unidades USDC.\n     */\n    function setBankCapital(uint256 _newCapital) external onlyOwner {\n        s_bankCapital = _newCapital;\n    }\n\n    /**\n     * @notice Permite al propietario ajustar el límite global de depósitos.\n     * @param _newLimit Nuevo límite en unidades USDC.\n     */\n    function setDepositLimit(uint256 _newLimit) external onlyOwner {\n        s_depositLimit = _newLimit;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 294,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KipuBankV2.sol": {
				"KipuBankV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bankCapital",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_depositLimitUSDC",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bankLimit",
									"type": "uint256"
								}
							],
							"name": "BankLimitReached",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "detail",
									"type": "string"
								}
							],
							"name": "GlobalLimit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "detail",
									"type": "string"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "detail",
									"type": "string"
								}
							],
							"name": "MoneyLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OracleCompromised",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OracleOutdated",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawalFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOracle",
									"type": "address"
								}
							],
							"name": "OracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SuccessfulDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SuccessfulWithdrawal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "contractBalanceInUSDC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_usdcAmount",
									"type": "uint256"
								}
							],
							"name": "depositUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_usdc",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_bankCapital",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_depositLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_oracle",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_totalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "s_vault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_withdrawCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newCapital",
									"type": "uint256"
								}
							],
							"name": "setBankCapital",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newLimit",
									"type": "uint256"
								}
							],
							"name": "setDepositLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOracle",
									"type": "address"
								}
							],
							"name": "setOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "viewETHBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "viewUSDCBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_usdcAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Antony Arguello",
						"details": "Implementa seguridad contra reentradas y permisos de propietario.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_bankCapital": "Límite máximo de capital del banco (en USDC-units).",
									"_depositLimitUSDC": "Límite global de depósitos (en USDC-units).",
									"_oracle": "Dirección del oráculo de Chainlink (ETH/USD).",
									"_owner": "Dirección del propietario del contrato.",
									"_usdc": "Dirección del contrato del token USDC."
								}
							},
							"depositUSDC(uint256)": {
								"params": {
									"_usdcAmount": "Cantidad en unidades USDC (6 decimales)."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setBankCapital(uint256)": {
								"params": {
									"_newCapital": "Límite en unidades USDC."
								}
							},
							"setDepositLimit(uint256)": {
								"params": {
									"_newLimit": "Nuevo límite en unidades USDC."
								}
							},
							"setOracle(address)": {
								"params": {
									"_newOracle": "Nueva dirección del oráculo Chainlink."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawETH(uint256)": {
								"params": {
									"_withdrawAmount": "Cantidad a retirar en wei."
								}
							},
							"withdrawUSDC(uint256)": {
								"params": {
									"_usdcAmount": "Cantidad en USDC (6 decimales)."
								}
							}
						},
						"title": "Banco Kipu (KipuBankV2)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KipuBankV2.sol\":789:11447  contract KipuBankV2 is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/KipuBankV2.sol\":5115:5458  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/KipuBankV2.sol\":5278:5284  _owner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/KipuBankV2.sol\":5329:5336  _oracle */\n  dup3\n    /* \"contracts/KipuBankV2.sol\":5296:5304  s_oracle */\n  0x03\n  0x00\n    /* \"contracts/KipuBankV2.sol\":5296:5337  s_oracle = AggregatorV3Interface(_oracle) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/KipuBankV2.sol\":5363:5368  _usdc */\n  dup2\n    /* \"contracts/KipuBankV2.sol\":5347:5369  i_usdc = IERC20(_usdc) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/KipuBankV2.sol\":5395:5407  _bankCapital */\n  dup5\n    /* \"contracts/KipuBankV2.sol\":5379:5392  s_bankCapital */\n  0x06\n    /* \"contracts/KipuBankV2.sol\":5379:5407  s_bankCapital = _bankCapital */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/KipuBankV2.sol\":5434:5451  _depositLimitUSDC */\n  dup4\n    /* \"contracts/KipuBankV2.sol\":5417:5431  s_depositLimit */\n  0x04\n    /* \"contracts/KipuBankV2.sol\":5417:5451  s_depositLimit = _depositLimitUSDC */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/KipuBankV2.sol\":5115:5458  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/KipuBankV2.sol\":789:11447  contract KipuBankV2 is Ownable, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_21:\n    /* \"#utility.yul\":490:514   */\n  tag_34\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_35:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_22:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_37\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_23:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_24:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_40\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_25:\n    /* \"#utility.yul\":1001:1025   */\n  tag_42\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_43:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_26:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_45\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  0x00\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  0x00\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_48\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1360:1480   */\ntag_47:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_49\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_22\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_50\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_51\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_52\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_53\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2188:2306   */\ntag_27:\n    /* \"#utility.yul\":2275:2299   */\n  tag_55\n    /* \"#utility.yul\":2293:2298   */\n  dup2\n    /* \"#utility.yul\":2275:2299   */\n  tag_24\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2270:2273   */\n  dup3\n    /* \"#utility.yul\":2263:2300   */\n  mstore\n    /* \"#utility.yul\":2188:2306   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2312:2534   */\ntag_10:\n    /* \"#utility.yul\":2405:2409   */\n  0x00\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2432:2441   */\n  dup3\n    /* \"#utility.yul\":2428:2446   */\n  add\n    /* \"#utility.yul\":2420:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2456:2527   */\n  tag_57\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2456:2527   */\n  tag_27\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2312:2534   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/KipuBankV2.sol\":789:11447  contract KipuBankV2 is Ownable, ReentrancyGuard {... */\ntag_15:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/KipuBankV2.sol\":789:11447  contract KipuBankV2 is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa1eaa644\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xf14210a6\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xf14210a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf6326fb3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf688bcfb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc457792\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xff40e1d0\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0xa1eaa644\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbdc8144b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcac2e25f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdb81f99b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdcd725a7\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x7adbf973\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x7adbf973\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8c8bdae9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8eddc8f9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa00cad48\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x16123524\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x52963c2b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6bec1ed0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x78234a3b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/KipuBankV2.sol\":1968:1996  uint256 public s_bankCapital */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":1876:1906  uint256 public s_totalDeposits */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":7152:7416  function contractBalanceInUSDC() public view returns (uint256 totalBalance) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/KipuBankV2.sol\":2155:2185  uint256 public s_withdrawCount */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":10765:10924  function setOracle(address _newOracle) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/KipuBankV2.sol\":7721:7846  function viewUSDCBalance(address user) external view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":11074:11182  function setBankCapital(uint256 _newCapital) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/KipuBankV2.sol\":1777:1806  uint256 public s_depositLimit */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":1143:1223  mapping(address user => mapping(address token => uint256 amount)) public s_vault */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":11339:11445  function setDepositLimit(uint256 _newLimit) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/KipuBankV2.sol\":2191:2220  uint256 public s_depositCount */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      revert(0x00, 0x00)\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":9965:10407  function withdrawUSDC(uint256 _usdcAmount) external nonReentrant {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/KipuBankV2.sol\":7508:7646  function viewETHBalance(address user) external view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":8193:8610  function withdrawETH(uint256 _withdrawAmount)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      revert(0x00, 0x00)\n    tag_97:\n      pop\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/KipuBankV2.sol\":8693:9185  function depositETH()... */\n    tag_19:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/KipuBankV2.sol\":9326:9822  function depositUSDC(uint256 _usdcAmount)... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/KipuBankV2.sol\":1303:1340  AggregatorV3Interface public s_oracle */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":1662:1692  IERC20 public immutable i_usdc */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV2.sol\":1968:1996  uint256 public s_bankCapital */\n    tag_28:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":1876:1906  uint256 public s_totalDeposits */\n    tag_33:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":7152:7416  function contractBalanceInUSDC() public view returns (uint256 totalBalance) {... */\n    tag_37:\n        /* \"contracts/KipuBankV2.sol\":7206:7226  uint256 totalBalance */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7238:7255  uint256 ethInUSDC */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7258:7298  _convertETHtoUSDC(address(this).balance) */\n      tag_118\n        /* \"contracts/KipuBankV2.sol\":7276:7297  address(this).balance */\n      selfbalance\n        /* \"contracts/KipuBankV2.sol\":7258:7275  _convertETHtoUSDC */\n      tag_119\n        /* \"contracts/KipuBankV2.sol\":7258:7298  _convertETHtoUSDC(address(this).balance) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/KipuBankV2.sol\":7238:7298  uint256 ethInUSDC = _convertETHtoUSDC(address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":7308:7327  uint256 usdcBalance */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7330:7336  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":7330:7346  i_usdc.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/KipuBankV2.sol\":7355:7359  this */\n      address\n        /* \"contracts/KipuBankV2.sol\":7330:7361  i_usdc.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/KipuBankV2.sol\":7308:7361  uint256 usdcBalance = i_usdc.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":7398:7409  usdcBalance */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":7386:7395  ethInUSDC */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":7386:7409  ethInUSDC + usdcBalance */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/KipuBankV2.sol\":7371:7409  totalBalance = ethInUSDC + usdcBalance */\n      swap3\n      pop\n        /* \"contracts/KipuBankV2.sol\":7228:7416  {... */\n      pop\n      pop\n        /* \"contracts/KipuBankV2.sol\":7152:7416  function contractBalanceInUSDC() public view returns (uint256 totalBalance) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":2155:2185  uint256 public s_withdrawCount */\n    tag_44:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":10765:10924  function setOracle(address _newOracle) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/KipuBankV2.sol\":10866:10876  _newOracle */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":10833:10841  s_oracle */\n      0x03\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10833:10877  s_oracle = AggregatorV3Interface(_newOracle) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":10892:10917  OracleUpdated(_newOracle) */\n      0x3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394\n        /* \"contracts/KipuBankV2.sol\":10906:10916  _newOracle */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":10892:10917  OracleUpdated(_newOracle) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV2.sol\":10765:10924  function setOracle(address _newOracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":7721:7846  function viewUSDCBalance(address user) external view returns (uint256) {... */\n    tag_54:\n        /* \"contracts/KipuBankV2.sol\":7783:7790  uint256 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7809:7816  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":7809:7822  s_vault[user] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7817:7821  user */\n      dup4\n        /* \"contracts/KipuBankV2.sol\":7809:7822  s_vault[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":7809:7839  s_vault[user][address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7831:7837  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":7809:7839  s_vault[user][address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV2.sol\":7802:7839  return s_vault[user][address(i_usdc)] */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":7721:7846  function viewUSDCBalance(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":11074:11182  function setBankCapital(uint256 _newCapital) external onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/KipuBankV2.sol\":11164:11175  _newCapital */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":11148:11161  s_bankCapital */\n      0x06\n        /* \"contracts/KipuBankV2.sol\":11148:11175  s_bankCapital = _newCapital */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":11074:11182  function setBankCapital(uint256 _newCapital) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":1777:1806  uint256 public s_depositLimit */\n    tag_68:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":1143:1223  mapping(address user => mapping(address token => uint256 amount)) public s_vault */\n    tag_74:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":11339:11445  function setDepositLimit(uint256 _newLimit) external onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/KipuBankV2.sol\":11429:11438  _newLimit */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":11412:11426  s_depositLimit */\n      0x04\n        /* \"contracts/KipuBankV2.sol\":11412:11438  s_depositLimit = _newLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":11339:11445  function setDepositLimit(uint256 _newLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":2191:2220  uint256 public s_depositCount */\n    tag_82:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":9965:10407  function withdrawUSDC(uint256 _usdcAmount) external nonReentrant {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_146\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/KipuBankV2.sol\":10083:10094  _usdcAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":10044:10051  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":10044:10063  s_vault[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10052:10062  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":10044:10063  s_vault[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":10044:10080  s_vault[msg.sender][address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10072:10078  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":10044:10080  s_vault[msg.sender][address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV2.sol\":10044:10094  s_vault[msg.sender][address(i_usdc)] < _usdcAmount */\n      lt\n        /* \"contracts/KipuBankV2.sol\":10040:10196  if (s_vault[msg.sender][address(i_usdc)] < _usdcAmount) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":10137:10148  _usdcAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":10150:10160  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":10117:10185  InsufficientBalance(_usdcAmount, msg.sender, \"Insufficient balance\") */\n      mload(0x40)\n      0x7c4f8b5d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":10040:10196  if (s_vault[msg.sender][address(i_usdc)] < _usdcAmount) {... */\n    tag_149:\n        /* \"contracts/KipuBankV2.sol\":10246:10257  _usdcAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":10206:10213  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":10206:10225  s_vault[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10214:10224  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":10206:10225  s_vault[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":10206:10242  s_vault[msg.sender][address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10234:10240  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":10206:10242  s_vault[msg.sender][address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10206:10257  s_vault[msg.sender][address(i_usdc)] -= _usdcAmount */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":10267:10282  s_withdrawCount */\n      0x07\n      0x00\n        /* \"contracts/KipuBankV2.sol\":10267:10284  s_withdrawCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":10295:10339  i_usdc.safeTransfer(msg.sender, _usdcAmount) */\n      tag_156\n        /* \"contracts/KipuBankV2.sol\":10315:10325  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":10327:10338  _usdcAmount */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":10295:10301  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":10295:10314  i_usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_157\n      swap1\n        /* \"contracts/KipuBankV2.sol\":10295:10339  i_usdc.safeTransfer(msg.sender, _usdcAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/KipuBankV2.sol\":10355:10400  SuccessfulWithdrawal(msg.sender, _usdcAmount) */\n      0x3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d877289\n        /* \"contracts/KipuBankV2.sol\":10376:10386  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":10388:10399  _usdcAmount */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":10355:10400  SuccessfulWithdrawal(msg.sender, _usdcAmount) */\n      mload(0x40)\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_160\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/KipuBankV2.sol\":9965:10407  function withdrawUSDC(uint256 _usdcAmount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":7508:7646  function viewETHBalance(address user) external view returns (uint256) {... */\n    tag_91:\n        /* \"contracts/KipuBankV2.sol\":7569:7576  uint256 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7595:7639  _convertETHtoUSDC(s_vault[user][address(0)]) */\n      tag_163\n        /* \"contracts/KipuBankV2.sol\":7613:7620  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":7613:7626  s_vault[user] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7621:7625  user */\n      dup5\n        /* \"contracts/KipuBankV2.sol\":7613:7626  s_vault[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":7613:7638  s_vault[user][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7635:7636  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":7613:7638  s_vault[user][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV2.sol\":7595:7612  _convertETHtoUSDC */\n      tag_119\n        /* \"contracts/KipuBankV2.sol\":7595:7639  _convertETHtoUSDC(s_vault[user][address(0)]) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/KipuBankV2.sol\":7588:7639  return _convertETHtoUSDC(s_vault[user][address(0)]) */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":7508:7646  function viewETHBalance(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":8193:8610  function withdrawETH(uint256 _withdrawAmount)... */\n    tag_96:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_165\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/KipuBankV2.sol\":8301:8316  _withdrawAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":2095:2105  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/KipuBankV2.sol\":4251:4258  _amount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":4251:4275  _amount > WITHDRAW_LIMIT */\n      gt\n        /* \"contracts/KipuBankV2.sol\":4247:4527  if (_amount > WITHDRAW_LIMIT) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":4309:4316  _amount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":4318:4328  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":4298:4367  MoneyLimit(_amount, msg.sender, \"Cannot withdraw more than 0.01 ETH\") */\n      mload(0x40)\n      0x2183cae300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":4247:4527  if (_amount > WITHDRAW_LIMIT) {... */\n    tag_167:\n        /* \"contracts/KipuBankV2.sol\":4422:4429  _amount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":4388:4395  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":4388:4407  s_vault[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":4396:4406  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":4388:4407  s_vault[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":4388:4419  s_vault[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":4416:4417  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":4388:4419  s_vault[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV2.sol\":4388:4429  s_vault[msg.sender][address(0)] < _amount */\n      lt\n        /* \"contracts/KipuBankV2.sol\":4384:4527  if (s_vault[msg.sender][address(0)] < _amount) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":4472:4479  _amount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":4481:4491  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":4452:4516  InsufficientBalance(_amount, msg.sender, \"Insufficient balance\") */\n      mload(0x40)\n      0x7c4f8b5d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":4384:4527  if (s_vault[msg.sender][address(0)] < _amount) {... */\n    tag_171:\n        /* \"contracts/KipuBankV2.sol\":8367:8382  _withdrawAmount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":8332:8339  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":8332:8351  s_vault[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8340:8350  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":8332:8351  s_vault[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":8332:8363  s_vault[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8360:8361  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8332:8363  s_vault[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8332:8382  s_vault[msg.sender][address(0)] -= _withdrawAmount */\n      dup3\n      dup3\n      sload\n      tag_174\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_174:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":8392:8407  s_withdrawCount */\n      0x07\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8392:8409  s_withdrawCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_175\n      swap1\n      tag_155\n      jump\t// in\n    tag_175:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":8421:8433  bool success */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8447:8457  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":8439:8463  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV2.sol\":8471:8486  _withdrawAmount */\n      dup4\n        /* \"contracts/KipuBankV2.sol\":8439:8491  payable(msg.sender).call{value: _withdrawAmount}(\"\") */\n      mload(0x40)\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_180\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_179)\n    tag_180:\n      0x60\n      swap2\n      pop\n    tag_179:\n      pop\n        /* \"contracts/KipuBankV2.sol\":8420:8491  (bool success, ) = payable(msg.sender).call{value: _withdrawAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":8509:8516  success */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":8501:8538  require(success, \"Withdrawal failed\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/KipuBankV2.sol\":8554:8603  SuccessfulWithdrawal(msg.sender, _withdrawAmount) */\n      0x3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d877289\n        /* \"contracts/KipuBankV2.sol\":8575:8585  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":8587:8602  _withdrawAmount */\n      dup5\n        /* \"contracts/KipuBankV2.sol\":8554:8603  SuccessfulWithdrawal(msg.sender, _withdrawAmount) */\n      mload(0x40)\n      tag_184\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV2.sol\":8322:8610  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_185\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/KipuBankV2.sol\":8193:8610  function withdrawETH(uint256 _withdrawAmount)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":8693:9185  function depositETH()... */\n    tag_102:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/KipuBankV2.sol\":8795:8823  _convertETHtoUSDC(msg.value) */\n      tag_194\n        /* \"contracts/KipuBankV2.sol\":8813:8822  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV2.sol\":8795:8812  _convertETHtoUSDC */\n      tag_119\n        /* \"contracts/KipuBankV2.sol\":8795:8823  _convertETHtoUSDC(msg.value) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/KipuBankV2.sol\":3553:3586  _exceedsDepositLimit(_usdcAmount) */\n      tag_196\n        /* \"contracts/KipuBankV2.sol\":3574:3585  _usdcAmount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":3553:3573  _exceedsDepositLimit */\n      tag_197\n        /* \"contracts/KipuBankV2.sol\":3553:3586  _exceedsDepositLimit(_usdcAmount) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/KipuBankV2.sol\":3549:3668  if (_exceedsDepositLimit(_usdcAmount)) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":3621:3632  _usdcAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":3609:3657  GlobalLimit(_usdcAmount, \"Global limit reached\") */\n      mload(0x40)\n      0xa04dceba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":3549:3668  if (_exceedsDepositLimit(_usdcAmount)) {... */\n    tag_198:\n        /* \"contracts/KipuBankV2.sol\":8851:8879  _convertETHtoUSDC(msg.value) */\n      tag_201\n        /* \"contracts/KipuBankV2.sol\":8869:8878  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV2.sol\":8851:8868  _convertETHtoUSDC */\n      tag_119\n        /* \"contracts/KipuBankV2.sol\":8851:8879  _convertETHtoUSDC(msg.value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/KipuBankV2.sol\":3933:3946  s_bankCapital */\n      sload(0x06)\n        /* \"contracts/KipuBankV2.sol\":3919:3930  _usdcAmount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":3901:3916  s_totalDeposits */\n      sload(0x05)\n        /* \"contracts/KipuBankV2.sol\":3901:3930  s_totalDeposits + _usdcAmount */\n      tag_203\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"contracts/KipuBankV2.sol\":3901:3946  s_totalDeposits + _usdcAmount > s_bankCapital */\n      gt\n        /* \"contracts/KipuBankV2.sol\":3897:4011  if (s_totalDeposits + _usdcAmount > s_bankCapital) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":3986:3999  s_bankCapital */\n      sload(0x06)\n        /* \"contracts/KipuBankV2.sol\":3969:4000  BankLimitReached(s_bankCapital) */\n      mload(0x40)\n      0x430b43df00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":3897:4011  if (s_totalDeposits + _usdcAmount > s_bankCapital) {... */\n    tag_204:\n        /* \"contracts/KipuBankV2.sol\":8915:8916  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8903:8912  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV2.sol\":8903:8916  msg.value > 0 */\n      gt\n        /* \"contracts/KipuBankV2.sol\":8895:8933  require(msg.value > 0, \"Zero deposit\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/KipuBankV2.sol\":8944:8961  uint256 usdAmount */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":8964:8992  _convertETHtoUSDC(msg.value) */\n      tag_210\n        /* \"contracts/KipuBankV2.sol\":8982:8991  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV2.sol\":8964:8981  _convertETHtoUSDC */\n      tag_119\n        /* \"contracts/KipuBankV2.sol\":8964:8992  _convertETHtoUSDC(msg.value) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/KipuBankV2.sol\":8944:8992  uint256 usdAmount = _convertETHtoUSDC(msg.value) */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":9002:9016  s_depositCount */\n      0x08\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9002:9018  s_depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_211\n      swap1\n      tag_155\n      jump\t// in\n    tag_211:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":9047:9056  usdAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":9028:9043  s_totalDeposits */\n      0x05\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9028:9056  s_totalDeposits += usdAmount */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":9101:9110  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV2.sol\":9066:9073  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":9066:9085  s_vault[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9074:9084  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":9066:9085  s_vault[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":9066:9097  s_vault[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9094:9095  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9066:9097  s_vault[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9066:9110  s_vault[msg.sender][address(0)] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_213:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":9126:9178  SuccessfulDeposit(msg.sender, address(0), msg.value) */\n      0xe03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505\n        /* \"contracts/KipuBankV2.sol\":9144:9154  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":9164:9165  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9168:9177  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV2.sol\":9126:9178  SuccessfulDeposit(msg.sender, address(0), msg.value) */\n      mload(0x40)\n      tag_214\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV2.sol\":8885:9185  {... */\n      pop\n        /* \"contracts/KipuBankV2.sol\":3677:3678  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_216\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/KipuBankV2.sol\":8693:9185  function depositETH()... */\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":9326:9822  function depositUSDC(uint256 _usdcAmount)... */\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_218\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/KipuBankV2.sol\":9432:9443  _usdcAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":3553:3586  _exceedsDepositLimit(_usdcAmount) */\n      tag_220\n        /* \"contracts/KipuBankV2.sol\":3574:3585  _usdcAmount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":3553:3573  _exceedsDepositLimit */\n      tag_197\n        /* \"contracts/KipuBankV2.sol\":3553:3586  _exceedsDepositLimit(_usdcAmount) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/KipuBankV2.sol\":3549:3668  if (_exceedsDepositLimit(_usdcAmount)) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":3621:3632  _usdcAmount */\n      dup1\n        /* \"contracts/KipuBankV2.sol\":3609:3657  GlobalLimit(_usdcAmount, \"Global limit reached\") */\n      mload(0x40)\n      0xa04dceba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":3549:3668  if (_exceedsDepositLimit(_usdcAmount)) {... */\n    tag_221:\n        /* \"contracts/KipuBankV2.sol\":9471:9482  _usdcAmount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":3933:3946  s_bankCapital */\n      sload(0x06)\n        /* \"contracts/KipuBankV2.sol\":3919:3930  _usdcAmount */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":3901:3916  s_totalDeposits */\n      sload(0x05)\n        /* \"contracts/KipuBankV2.sol\":3901:3930  s_totalDeposits + _usdcAmount */\n      tag_224\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_224:\n        /* \"contracts/KipuBankV2.sol\":3901:3946  s_totalDeposits + _usdcAmount > s_bankCapital */\n      gt\n        /* \"contracts/KipuBankV2.sol\":3897:4011  if (s_totalDeposits + _usdcAmount > s_bankCapital) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":3986:3999  s_bankCapital */\n      sload(0x06)\n        /* \"contracts/KipuBankV2.sol\":3969:4000  BankLimitReached(s_bankCapital) */\n      mload(0x40)\n      0x430b43df00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":3897:4011  if (s_totalDeposits + _usdcAmount > s_bankCapital) {... */\n    tag_225:\n        /* \"contracts/KipuBankV2.sol\":9520:9521  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9506:9517  _usdcAmount */\n      dup4\n        /* \"contracts/KipuBankV2.sol\":9506:9521  _usdcAmount > 0 */\n      gt\n        /* \"contracts/KipuBankV2.sol\":9498:9538  require(_usdcAmount > 0, \"Zero deposit\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_209\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/KipuBankV2.sol\":9549:9563  s_depositCount */\n      0x08\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9549:9565  s_depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_230\n      swap1\n      tag_155\n      jump\t// in\n    tag_230:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":9594:9605  _usdcAmount */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":9575:9590  s_totalDeposits */\n      0x05\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9575:9605  s_totalDeposits += _usdcAmount */\n      dup3\n      dup3\n      sload\n      tag_231\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_231:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":9655:9666  _usdcAmount */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":9615:9622  s_vault */\n      0x02\n        /* \"contracts/KipuBankV2.sol\":9615:9634  s_vault[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9623:9633  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":9615:9634  s_vault[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV2.sol\":9615:9651  s_vault[msg.sender][address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9643:9649  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":9615:9651  s_vault[msg.sender][address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV2.sol\":9615:9666  s_vault[msg.sender][address(i_usdc)] += _usdcAmount */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_232:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV2.sol\":9677:9740  i_usdc.safeTransferFrom(msg.sender, address(this), _usdcAmount) */\n      tag_233\n        /* \"contracts/KipuBankV2.sol\":9701:9711  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":9721:9725  this */\n      address\n        /* \"contracts/KipuBankV2.sol\":9728:9739  _usdcAmount */\n      dup6\n        /* \"contracts/KipuBankV2.sol\":9677:9683  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":9677:9700  i_usdc.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_234\n      swap1\n        /* \"contracts/KipuBankV2.sol\":9677:9740  i_usdc.safeTransferFrom(msg.sender, address(this), _usdcAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/KipuBankV2.sol\":9756:9815  SuccessfulDeposit(msg.sender, address(i_usdc), _usdcAmount) */\n      0xe03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505\n        /* \"contracts/KipuBankV2.sol\":9774:9784  msg.sender */\n      caller\n        /* \"contracts/KipuBankV2.sol\":9794:9800  i_usdc */\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n        /* \"contracts/KipuBankV2.sol\":9803:9814  _usdcAmount */\n      dup6\n        /* \"contracts/KipuBankV2.sol\":9756:9815  SuccessfulDeposit(msg.sender, address(i_usdc), _usdcAmount) */\n      mload(0x40)\n      tag_235\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV2.sol\":3677:3678  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_236\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/KipuBankV2.sol\":9326:9822  function depositUSDC(uint256 _usdcAmount)... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":1303:1340  AggregatorV3Interface public s_oracle */\n    tag_109:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":1662:1692  IERC20 public immutable i_usdc */\n    tag_114:\n      immutable(\"0xd981c1aa70496adbf331222473f4f790f8f1219995826de705ab70eb68beb770\")\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":6354:6561  function _convertETHtoUSDC(uint256 _ethAmount)... */\n    tag_119:\n        /* \"contracts/KipuBankV2.sol\":6448:6471  uint256 convertedAmount */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":1593:1605  1 * 10 ** 20 */\n      0x056bc75e2d63100000\n        /* \"contracts/KipuBankV2.sol\":6519:6536  _getETHUSDPrice() */\n      tag_238\n        /* \"contracts/KipuBankV2.sol\":6519:6534  _getETHUSDPrice */\n      tag_239\n        /* \"contracts/KipuBankV2.sol\":6519:6536  _getETHUSDPrice() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/KipuBankV2.sol\":6506:6516  _ethAmount */\n      dup4\n        /* \"contracts/KipuBankV2.sol\":6506:6536  _ethAmount * _getETHUSDPrice() */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/KipuBankV2.sol\":6505:6554  (_ethAmount * _getETHUSDPrice()) / DECIMAL_FACTOR */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/KipuBankV2.sol\":6487:6554  convertedAmount = (_ethAmount * _getETHUSDPrice()) / DECIMAL_FACTOR */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":6354:6561  function _convertETHtoUSDC(uint256 _ethAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_258\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":6702:6851  function _exceedsDepositLimit(uint256 amountUSDC) private view returns (bool) {... */\n    tag_197:\n        /* \"contracts/KipuBankV2.sol\":6774:6778  bool */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":6830:6844  s_depositLimit */\n      sload(0x04)\n        /* \"contracts/KipuBankV2.sol\":6816:6826  amountUSDC */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":6798:6813  s_totalDeposits */\n      sload(0x05)\n        /* \"contracts/KipuBankV2.sol\":6798:6826  s_totalDeposits + amountUSDC */\n      tag_262\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_262:\n        /* \"contracts/KipuBankV2.sol\":6797:6844  (s_totalDeposits + amountUSDC) > s_depositLimit */\n      gt\n        /* \"contracts/KipuBankV2.sol\":6790:6844  return (s_totalDeposits + amountUSDC) > s_depositLimit */\n      swap1\n      pop\n        /* \"contracts/KipuBankV2.sol\":6702:6851  function _exceedsDepositLimit(uint256 amountUSDC) private view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_265\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV2.sol\":5820:6153  function _getETHUSDPrice() internal view returns (uint256 ethUSDPrice) {... */\n    tag_239:\n        /* \"contracts/KipuBankV2.sol\":5870:5889  uint256 ethUSDPrice */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":5904:5916  int256 price */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":5920:5937  uint256 updatedAt */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":5943:5951  s_oracle */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV2.sol\":5943:5967  s_oracle.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/KipuBankV2.sol\":5943:5969  s_oracle.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"contracts/KipuBankV2.sol\":5901:5969  (, int256 price, , uint256 updatedAt, ) = s_oracle.latestRoundData() */\n      pop\n      swap4\n      pop\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/KipuBankV2.sol\":5993:5994  0 */\n      0x00\n        /* \"contracts/KipuBankV2.sol\":5984:5989  price */\n      dup3\n        /* \"contracts/KipuBankV2.sol\":5984:5994  price == 0 */\n      sub\n        /* \"contracts/KipuBankV2.sol\":5980:6022  if (price == 0) revert OracleCompromised() */\n      tag_271\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":6003:6022  OracleCompromised() */\n      mload(0x40)\n      0x144c1d9500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":5980:6022  if (price == 0) revert OracleCompromised() */\n    tag_271:\n        /* \"contracts/KipuBankV2.sol\":1466:1470  3600 */\n      0x0e10\n        /* \"contracts/KipuBankV2.sol\":6054:6063  updatedAt */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":6036:6051  block.timestamp */\n      timestamp\n        /* \"contracts/KipuBankV2.sol\":6036:6063  block.timestamp - updatedAt */\n      tag_272\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_272:\n        /* \"contracts/KipuBankV2.sol\":6036:6082  block.timestamp - updatedAt > ORACLE_HEARTBEAT */\n      gt\n        /* \"contracts/KipuBankV2.sol\":6032:6107  if (block.timestamp - updatedAt > ORACLE_HEARTBEAT) revert OracleOutdated() */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/KipuBankV2.sol\":6091:6107  OracleOutdated() */\n      mload(0x40)\n      0x0b3126e600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBankV2.sol\":6032:6107  if (block.timestamp - updatedAt > ORACLE_HEARTBEAT) revert OracleOutdated() */\n    tag_273:\n        /* \"contracts/KipuBankV2.sol\":6140:6145  price */\n      dup2\n        /* \"contracts/KipuBankV2.sol\":6118:6146  ethUSDPrice = uint256(price) */\n      swap3\n      pop\n        /* \"contracts/KipuBankV2.sol\":5891:6153  {... */\n      pop\n      pop\n        /* \"contracts/KipuBankV2.sol\":5820:6153  function _getETHUSDPrice() internal view returns (uint256 ethUSDPrice) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_278)\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_281:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_282:\n        /* \"#utility.yul\":177:201   */\n      tag_328\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_281\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_30:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_330\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_282\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_284:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_286:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_287:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_336\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_286\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_288:\n        /* \"#utility.yul\":1076:1100   */\n      tag_338\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_287\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_339:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_289:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_341\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_288\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_49:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_344\n      tag_284\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1352:1471   */\n    tag_343:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_345\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_289\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_290:\n        /* \"#utility.yul\":1698:1722   */\n      tag_347\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_287\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_60:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_349\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_290\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_291:\n        /* \"#utility.yul\":2036:2060   */\n      tag_351\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_281\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      0x00\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_352:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_292:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_354\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_291\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_64:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_357\n      tag_284\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2312:2431   */\n    tag_356:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_358\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_292\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3045   */\n    tag_73:\n        /* \"#utility.yul\":2639:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      0x00\n        /* \"#utility.yul\":2696:2698   */\n      0x40\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2675:2682   */\n      dup6\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2783   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":2702:2781   */\n      tag_361\n      tag_284\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2664:2783   */\n    tag_360:\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2847:2900   */\n      tag_362\n        /* \"#utility.yul\":2892:2899   */\n      dup6\n        /* \"#utility.yul\":2883:2889   */\n      dup3\n        /* \"#utility.yul\":2872:2881   */\n      dup7\n        /* \"#utility.yul\":2868:2890   */\n      add\n        /* \"#utility.yul\":2847:2900   */\n      tag_289\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2837:2900   */\n      swap3\n      pop\n        /* \"#utility.yul\":2793:2910   */\n      pop\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2975:3028   */\n      tag_363\n        /* \"#utility.yul\":3020:3027   */\n      dup6\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup7\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_289\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2920:3038   */\n      pop\n        /* \"#utility.yul\":2571:3045   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3111   */\n    tag_293:\n        /* \"#utility.yul\":3079:3082   */\n      0x00\n        /* \"#utility.yul\":3100:3105   */\n      dup2\n        /* \"#utility.yul\":3093:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3259   */\n    tag_294:\n        /* \"#utility.yul\":3167:3176   */\n      0x00\n        /* \"#utility.yul\":3200:3253   */\n      tag_366\n        /* \"#utility.yul\":3218:3252   */\n      tag_367\n        /* \"#utility.yul\":3227:3251   */\n      tag_368\n        /* \"#utility.yul\":3245:3250   */\n      dup5\n        /* \"#utility.yul\":3227:3251   */\n      tag_286\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3218:3252   */\n      tag_293\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3200:3253   */\n      tag_286\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3187:3253   */\n      swap1\n      pop\n        /* \"#utility.yul\":3117:3259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3391   */\n    tag_295:\n        /* \"#utility.yul\":3315:3324   */\n      0x00\n        /* \"#utility.yul\":3348:3385   */\n      tag_370\n        /* \"#utility.yul\":3379:3384   */\n      dup3\n        /* \"#utility.yul\":3348:3385   */\n      tag_294\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3335:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3265:3391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3397:3551   */\n    tag_296:\n        /* \"#utility.yul\":3475:3484   */\n      0x00\n        /* \"#utility.yul\":3508:3545   */\n      tag_372\n        /* \"#utility.yul\":3539:3544   */\n      dup3\n        /* \"#utility.yul\":3508:3545   */\n      tag_295\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3495:3545   */\n      swap1\n      pop\n        /* \"#utility.yul\":3397:3551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3557:3744   */\n    tag_297:\n        /* \"#utility.yul\":3672:3737   */\n      tag_374\n        /* \"#utility.yul\":3731:3736   */\n      dup2\n        /* \"#utility.yul\":3672:3737   */\n      tag_296\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3667:3670   */\n      dup3\n        /* \"#utility.yul\":3660:3738   */\n      mstore\n        /* \"#utility.yul\":3557:3744   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3750:4028   */\n    tag_111:\n        /* \"#utility.yul\":3871:3875   */\n      0x00\n        /* \"#utility.yul\":3909:3911   */\n      0x20\n        /* \"#utility.yul\":3898:3907   */\n      dup3\n        /* \"#utility.yul\":3894:3912   */\n      add\n        /* \"#utility.yul\":3886:3912   */\n      swap1\n      pop\n        /* \"#utility.yul\":3922:4021   */\n      tag_376\n        /* \"#utility.yul\":4018:4019   */\n      0x00\n        /* \"#utility.yul\":4007:4016   */\n      dup4\n        /* \"#utility.yul\":4003:4020   */\n      add\n        /* \"#utility.yul\":3994:4000   */\n      dup5\n        /* \"#utility.yul\":3922:4021   */\n      tag_297\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3750:4028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4034:4174   */\n    tag_298:\n        /* \"#utility.yul\":4098:4107   */\n      0x00\n        /* \"#utility.yul\":4131:4168   */\n      tag_378\n        /* \"#utility.yul\":4162:4167   */\n      dup3\n        /* \"#utility.yul\":4131:4168   */\n      tag_295\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4118:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4339   */\n    tag_299:\n        /* \"#utility.yul\":4281:4332   */\n      tag_380\n        /* \"#utility.yul\":4326:4331   */\n      dup2\n        /* \"#utility.yul\":4281:4332   */\n      tag_298\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4276:4279   */\n      dup3\n        /* \"#utility.yul\":4269:4333   */\n      mstore\n        /* \"#utility.yul\":4180:4339   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4345:4595   */\n    tag_116:\n        /* \"#utility.yul\":4452:4456   */\n      0x00\n        /* \"#utility.yul\":4490:4492   */\n      0x20\n        /* \"#utility.yul\":4479:4488   */\n      dup3\n        /* \"#utility.yul\":4475:4493   */\n      add\n        /* \"#utility.yul\":4467:4493   */\n      swap1\n      pop\n        /* \"#utility.yul\":4503:4588   */\n      tag_382\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4574:4583   */\n      dup4\n        /* \"#utility.yul\":4570:4587   */\n      add\n        /* \"#utility.yul\":4561:4567   */\n      dup5\n        /* \"#utility.yul\":4503:4588   */\n      tag_299\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4345:4595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4744   */\n    tag_300:\n        /* \"#utility.yul\":4658:4663   */\n      0x00\n        /* \"#utility.yul\":4689:4695   */\n      dup2\n        /* \"#utility.yul\":4683:4696   */\n      mload\n        /* \"#utility.yul\":4674:4696   */\n      swap1\n      pop\n        /* \"#utility.yul\":4705:4738   */\n      tag_384\n        /* \"#utility.yul\":4732:4737   */\n      dup2\n        /* \"#utility.yul\":4705:4738   */\n      tag_291\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4601:4744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4750:5101   */\n    tag_124:\n        /* \"#utility.yul\":4820:4826   */\n      0x00\n        /* \"#utility.yul\":4869:4871   */\n      0x20\n        /* \"#utility.yul\":4857:4866   */\n      dup3\n        /* \"#utility.yul\":4848:4855   */\n      dup5\n        /* \"#utility.yul\":4844:4867   */\n      sub\n        /* \"#utility.yul\":4840:4872   */\n      slt\n        /* \"#utility.yul\":4837:4956   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":4875:4954   */\n      tag_387\n      tag_284\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4837:4956   */\n    tag_386:\n        /* \"#utility.yul\":4995:4996   */\n      0x00\n        /* \"#utility.yul\":5020:5084   */\n      tag_388\n        /* \"#utility.yul\":5076:5083   */\n      dup5\n        /* \"#utility.yul\":5067:5073   */\n      dup3\n        /* \"#utility.yul\":5056:5065   */\n      dup6\n        /* \"#utility.yul\":5052:5074   */\n      add\n        /* \"#utility.yul\":5020:5084   */\n      tag_300\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5010:5084   */\n      swap2\n      pop\n        /* \"#utility.yul\":4966:5094   */\n      pop\n        /* \"#utility.yul\":4750:5101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5107:5287   */\n    tag_301:\n        /* \"#utility.yul\":5155:5232   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5152:5153   */\n      0x00\n        /* \"#utility.yul\":5145:5233   */\n      mstore\n        /* \"#utility.yul\":5252:5256   */\n      0x11\n        /* \"#utility.yul\":5249:5250   */\n      0x04\n        /* \"#utility.yul\":5242:5257   */\n      mstore\n        /* \"#utility.yul\":5276:5280   */\n      0x24\n        /* \"#utility.yul\":5273:5274   */\n      0x00\n        /* \"#utility.yul\":5266:5281   */\n      revert\n        /* \"#utility.yul\":5293:5484   */\n    tag_126:\n        /* \"#utility.yul\":5333:5336   */\n      0x00\n        /* \"#utility.yul\":5352:5372   */\n      tag_391\n        /* \"#utility.yul\":5370:5371   */\n      dup3\n        /* \"#utility.yul\":5352:5372   */\n      tag_281\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5347:5372   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5406   */\n      tag_392\n        /* \"#utility.yul\":5404:5405   */\n      dup4\n        /* \"#utility.yul\":5386:5406   */\n      tag_281\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5381:5406   */\n      swap3\n      pop\n        /* \"#utility.yul\":5429:5430   */\n      dup3\n        /* \"#utility.yul\":5426:5427   */\n      dup3\n        /* \"#utility.yul\":5422:5431   */\n      add\n        /* \"#utility.yul\":5415:5431   */\n      swap1\n      pop\n        /* \"#utility.yul\":5450:5453   */\n      dup1\n        /* \"#utility.yul\":5447:5448   */\n      dup3\n        /* \"#utility.yul\":5444:5454   */\n      gt\n        /* \"#utility.yul\":5441:5477   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":5457:5475   */\n      tag_394\n      tag_301\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5441:5477   */\n    tag_393:\n        /* \"#utility.yul\":5293:5484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5490:5659   */\n    tag_302:\n        /* \"#utility.yul\":5574:5585   */\n      0x00\n        /* \"#utility.yul\":5608:5614   */\n      dup3\n        /* \"#utility.yul\":5603:5606   */\n      dup3\n        /* \"#utility.yul\":5596:5615   */\n      mstore\n        /* \"#utility.yul\":5648:5652   */\n      0x20\n        /* \"#utility.yul\":5643:5646   */\n      dup3\n        /* \"#utility.yul\":5639:5653   */\n      add\n        /* \"#utility.yul\":5624:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5490:5659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5665:5835   */\n    tag_303:\n        /* \"#utility.yul\":5805:5827   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":5801:5802   */\n      0x00\n        /* \"#utility.yul\":5793:5799   */\n      dup3\n        /* \"#utility.yul\":5789:5803   */\n      add\n        /* \"#utility.yul\":5782:5828   */\n      mstore\n        /* \"#utility.yul\":5665:5835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5841:6207   */\n    tag_304:\n        /* \"#utility.yul\":5983:5986   */\n      0x00\n        /* \"#utility.yul\":6004:6071   */\n      tag_398\n        /* \"#utility.yul\":6068:6070   */\n      0x14\n        /* \"#utility.yul\":6063:6066   */\n      dup4\n        /* \"#utility.yul\":6004:6071   */\n      tag_302\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5997:6071   */\n      swap2\n      pop\n        /* \"#utility.yul\":6080:6173   */\n      tag_399\n        /* \"#utility.yul\":6169:6172   */\n      dup3\n        /* \"#utility.yul\":6080:6173   */\n      tag_303\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6198:6200   */\n      0x20\n        /* \"#utility.yul\":6193:6196   */\n      dup3\n        /* \"#utility.yul\":6189:6201   */\n      add\n        /* \"#utility.yul\":6182:6201   */\n      swap1\n      pop\n        /* \"#utility.yul\":5841:6207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6213:6852   */\n    tag_151:\n        /* \"#utility.yul\":6435:6439   */\n      0x00\n        /* \"#utility.yul\":6473:6475   */\n      0x60\n        /* \"#utility.yul\":6462:6471   */\n      dup3\n        /* \"#utility.yul\":6458:6476   */\n      add\n        /* \"#utility.yul\":6450:6476   */\n      swap1\n      pop\n        /* \"#utility.yul\":6486:6557   */\n      tag_401\n        /* \"#utility.yul\":6554:6555   */\n      0x00\n        /* \"#utility.yul\":6543:6552   */\n      dup4\n        /* \"#utility.yul\":6539:6556   */\n      add\n        /* \"#utility.yul\":6530:6536   */\n      dup6\n        /* \"#utility.yul\":6486:6557   */\n      tag_282\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6567:6639   */\n      tag_402\n        /* \"#utility.yul\":6635:6637   */\n      0x20\n        /* \"#utility.yul\":6624:6633   */\n      dup4\n        /* \"#utility.yul\":6620:6638   */\n      add\n        /* \"#utility.yul\":6611:6617   */\n      dup5\n        /* \"#utility.yul\":6567:6639   */\n      tag_290\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":6686:6695   */\n      dup2\n        /* \"#utility.yul\":6680:6684   */\n      dup2\n        /* \"#utility.yul\":6676:6696   */\n      sub\n        /* \"#utility.yul\":6671:6673   */\n      0x40\n        /* \"#utility.yul\":6660:6669   */\n      dup4\n        /* \"#utility.yul\":6656:6674   */\n      add\n        /* \"#utility.yul\":6649:6697   */\n      mstore\n        /* \"#utility.yul\":6714:6845   */\n      tag_403\n        /* \"#utility.yul\":6840:6844   */\n      dup2\n        /* \"#utility.yul\":6714:6845   */\n      tag_304\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6706:6845   */\n      swap1\n      pop\n        /* \"#utility.yul\":6213:6852   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6858:7052   */\n    tag_153:\n        /* \"#utility.yul\":6898:6902   */\n      0x00\n        /* \"#utility.yul\":6918:6938   */\n      tag_405\n        /* \"#utility.yul\":6936:6937   */\n      dup3\n        /* \"#utility.yul\":6918:6938   */\n      tag_281\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6913:6938   */\n      swap2\n      pop\n        /* \"#utility.yul\":6952:6972   */\n      tag_406\n        /* \"#utility.yul\":6970:6971   */\n      dup4\n        /* \"#utility.yul\":6952:6972   */\n      tag_281\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6947:6972   */\n      swap3\n      pop\n        /* \"#utility.yul\":6996:6997   */\n      dup3\n        /* \"#utility.yul\":6993:6994   */\n      dup3\n        /* \"#utility.yul\":6989:6998   */\n      sub\n        /* \"#utility.yul\":6981:6998   */\n      swap1\n      pop\n        /* \"#utility.yul\":7020:7021   */\n      dup2\n        /* \"#utility.yul\":7014:7018   */\n      dup2\n        /* \"#utility.yul\":7011:7022   */\n      gt\n        /* \"#utility.yul\":7008:7045   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7025:7043   */\n      tag_408\n      tag_301\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7008:7045   */\n    tag_407:\n        /* \"#utility.yul\":6858:7052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7058:7291   */\n    tag_155:\n        /* \"#utility.yul\":7097:7100   */\n      0x00\n        /* \"#utility.yul\":7120:7144   */\n      tag_410\n        /* \"#utility.yul\":7138:7143   */\n      dup3\n        /* \"#utility.yul\":7120:7144   */\n      tag_281\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7111:7144   */\n      swap2\n      pop\n        /* \"#utility.yul\":7166:7232   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7159:7164   */\n      dup3\n        /* \"#utility.yul\":7156:7233   */\n      sub\n        /* \"#utility.yul\":7153:7256   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":7236:7254   */\n      tag_412\n      tag_301\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7153:7256   */\n    tag_411:\n        /* \"#utility.yul\":7283:7284   */\n      0x01\n        /* \"#utility.yul\":7276:7281   */\n      dup3\n        /* \"#utility.yul\":7272:7285   */\n      add\n        /* \"#utility.yul\":7265:7285   */\n      swap1\n      pop\n        /* \"#utility.yul\":7058:7291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7297:7629   */\n    tag_159:\n        /* \"#utility.yul\":7418:7422   */\n      0x00\n        /* \"#utility.yul\":7456:7458   */\n      0x40\n        /* \"#utility.yul\":7445:7454   */\n      dup3\n        /* \"#utility.yul\":7441:7459   */\n      add\n        /* \"#utility.yul\":7433:7459   */\n      swap1\n      pop\n        /* \"#utility.yul\":7469:7540   */\n      tag_414\n        /* \"#utility.yul\":7537:7538   */\n      0x00\n        /* \"#utility.yul\":7526:7535   */\n      dup4\n        /* \"#utility.yul\":7522:7539   */\n      add\n        /* \"#utility.yul\":7513:7519   */\n      dup6\n        /* \"#utility.yul\":7469:7540   */\n      tag_290\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7550:7622   */\n      tag_415\n        /* \"#utility.yul\":7618:7620   */\n      0x20\n        /* \"#utility.yul\":7607:7616   */\n      dup4\n        /* \"#utility.yul\":7603:7621   */\n      add\n        /* \"#utility.yul\":7594:7600   */\n      dup5\n        /* \"#utility.yul\":7550:7622   */\n      tag_282\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7297:7629   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7635:7856   */\n    tag_305:\n        /* \"#utility.yul\":7775:7809   */\n      0x43616e6e6f74207769746864726177206d6f7265207468616e20302e30312045\n        /* \"#utility.yul\":7771:7772   */\n      0x00\n        /* \"#utility.yul\":7763:7769   */\n      dup3\n        /* \"#utility.yul\":7759:7773   */\n      add\n        /* \"#utility.yul\":7752:7810   */\n      mstore\n        /* \"#utility.yul\":7844:7848   */\n      0x5448000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7839:7841   */\n      0x20\n        /* \"#utility.yul\":7831:7837   */\n      dup3\n        /* \"#utility.yul\":7827:7842   */\n      add\n        /* \"#utility.yul\":7820:7849   */\n      mstore\n        /* \"#utility.yul\":7635:7856   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7862:8228   */\n    tag_306:\n        /* \"#utility.yul\":8004:8007   */\n      0x00\n        /* \"#utility.yul\":8025:8092   */\n      tag_418\n        /* \"#utility.yul\":8089:8091   */\n      0x22\n        /* \"#utility.yul\":8084:8087   */\n      dup4\n        /* \"#utility.yul\":8025:8092   */\n      tag_302\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8018:8092   */\n      swap2\n      pop\n        /* \"#utility.yul\":8101:8194   */\n      tag_419\n        /* \"#utility.yul\":8190:8193   */\n      dup3\n        /* \"#utility.yul\":8101:8194   */\n      tag_305\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8219:8221   */\n      0x40\n        /* \"#utility.yul\":8214:8217   */\n      dup3\n        /* \"#utility.yul\":8210:8222   */\n      add\n        /* \"#utility.yul\":8203:8222   */\n      swap1\n      pop\n        /* \"#utility.yul\":7862:8228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8234:8873   */\n    tag_169:\n        /* \"#utility.yul\":8456:8460   */\n      0x00\n        /* \"#utility.yul\":8494:8496   */\n      0x60\n        /* \"#utility.yul\":8483:8492   */\n      dup3\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8471:8497   */\n      swap1\n      pop\n        /* \"#utility.yul\":8507:8578   */\n      tag_421\n        /* \"#utility.yul\":8575:8576   */\n      0x00\n        /* \"#utility.yul\":8564:8573   */\n      dup4\n        /* \"#utility.yul\":8560:8577   */\n      add\n        /* \"#utility.yul\":8551:8557   */\n      dup6\n        /* \"#utility.yul\":8507:8578   */\n      tag_282\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8588:8660   */\n      tag_422\n        /* \"#utility.yul\":8656:8658   */\n      0x20\n        /* \"#utility.yul\":8645:8654   */\n      dup4\n        /* \"#utility.yul\":8641:8659   */\n      add\n        /* \"#utility.yul\":8632:8638   */\n      dup5\n        /* \"#utility.yul\":8588:8660   */\n      tag_290\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8707:8716   */\n      dup2\n        /* \"#utility.yul\":8701:8705   */\n      dup2\n        /* \"#utility.yul\":8697:8717   */\n      sub\n        /* \"#utility.yul\":8692:8694   */\n      0x40\n        /* \"#utility.yul\":8681:8690   */\n      dup4\n        /* \"#utility.yul\":8677:8695   */\n      add\n        /* \"#utility.yul\":8670:8718   */\n      mstore\n        /* \"#utility.yul\":8735:8866   */\n      tag_423\n        /* \"#utility.yul\":8861:8865   */\n      dup2\n        /* \"#utility.yul\":8735:8866   */\n      tag_306\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8727:8866   */\n      swap1\n      pop\n        /* \"#utility.yul\":8234:8873   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8879:9026   */\n    tag_307:\n        /* \"#utility.yul\":8980:8991   */\n      0x00\n        /* \"#utility.yul\":9017:9020   */\n      dup2\n        /* \"#utility.yul\":9002:9020   */\n      swap1\n      pop\n        /* \"#utility.yul\":8879:9026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9032:9146   */\n    tag_308:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9152:9550   */\n    tag_309:\n        /* \"#utility.yul\":9311:9314   */\n      0x00\n        /* \"#utility.yul\":9332:9415   */\n      tag_427\n        /* \"#utility.yul\":9413:9414   */\n      0x00\n        /* \"#utility.yul\":9408:9411   */\n      dup4\n        /* \"#utility.yul\":9332:9415   */\n      tag_307\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9325:9415   */\n      swap2\n      pop\n        /* \"#utility.yul\":9424:9517   */\n      tag_428\n        /* \"#utility.yul\":9513:9516   */\n      dup3\n        /* \"#utility.yul\":9424:9517   */\n      tag_308\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9542:9543   */\n      0x00\n        /* \"#utility.yul\":9537:9540   */\n      dup3\n        /* \"#utility.yul\":9533:9544   */\n      add\n        /* \"#utility.yul\":9526:9544   */\n      swap1\n      pop\n        /* \"#utility.yul\":9152:9550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9556:9935   */\n    tag_177:\n        /* \"#utility.yul\":9740:9743   */\n      0x00\n        /* \"#utility.yul\":9762:9909   */\n      tag_430\n        /* \"#utility.yul\":9905:9908   */\n      dup3\n        /* \"#utility.yul\":9762:9909   */\n      tag_309\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9755:9909   */\n      swap2\n      pop\n        /* \"#utility.yul\":9926:9929   */\n      dup2\n        /* \"#utility.yul\":9919:9929   */\n      swap1\n      pop\n        /* \"#utility.yul\":9556:9935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9941:10108   */\n    tag_310:\n        /* \"#utility.yul\":10081:10100   */\n      0x5769746864726177616c206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":10077:10078   */\n      0x00\n        /* \"#utility.yul\":10069:10075   */\n      dup3\n        /* \"#utility.yul\":10065:10079   */\n      add\n        /* \"#utility.yul\":10058:10101   */\n      mstore\n        /* \"#utility.yul\":9941:10108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10114:10480   */\n    tag_311:\n        /* \"#utility.yul\":10256:10259   */\n      0x00\n        /* \"#utility.yul\":10277:10344   */\n      tag_433\n        /* \"#utility.yul\":10341:10343   */\n      0x11\n        /* \"#utility.yul\":10336:10339   */\n      dup4\n        /* \"#utility.yul\":10277:10344   */\n      tag_302\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10270:10344   */\n      swap2\n      pop\n        /* \"#utility.yul\":10353:10446   */\n      tag_434\n        /* \"#utility.yul\":10442:10445   */\n      dup3\n        /* \"#utility.yul\":10353:10446   */\n      tag_310\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10471:10473   */\n      0x20\n        /* \"#utility.yul\":10466:10469   */\n      dup3\n        /* \"#utility.yul\":10462:10474   */\n      add\n        /* \"#utility.yul\":10455:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10114:10480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10486:10905   */\n    tag_183:\n        /* \"#utility.yul\":10652:10656   */\n      0x00\n        /* \"#utility.yul\":10690:10692   */\n      0x20\n        /* \"#utility.yul\":10679:10688   */\n      dup3\n        /* \"#utility.yul\":10675:10693   */\n      add\n        /* \"#utility.yul\":10667:10693   */\n      swap1\n      pop\n        /* \"#utility.yul\":10739:10748   */\n      dup2\n        /* \"#utility.yul\":10733:10737   */\n      dup2\n        /* \"#utility.yul\":10729:10749   */\n      sub\n        /* \"#utility.yul\":10725:10726   */\n      0x00\n        /* \"#utility.yul\":10714:10723   */\n      dup4\n        /* \"#utility.yul\":10710:10727   */\n      add\n        /* \"#utility.yul\":10703:10750   */\n      mstore\n        /* \"#utility.yul\":10767:10898   */\n      tag_436\n        /* \"#utility.yul\":10893:10897   */\n      dup2\n        /* \"#utility.yul\":10767:10898   */\n      tag_311\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10759:10898   */\n      swap1\n      pop\n        /* \"#utility.yul\":10486:10905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10911:11081   */\n    tag_312:\n        /* \"#utility.yul\":11051:11073   */\n      0x476c6f62616c206c696d69742072656163686564000000000000000000000000\n        /* \"#utility.yul\":11047:11048   */\n      0x00\n        /* \"#utility.yul\":11039:11045   */\n      dup3\n        /* \"#utility.yul\":11035:11049   */\n      add\n        /* \"#utility.yul\":11028:11074   */\n      mstore\n        /* \"#utility.yul\":10911:11081   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11087:11453   */\n    tag_313:\n        /* \"#utility.yul\":11229:11232   */\n      0x00\n        /* \"#utility.yul\":11250:11317   */\n      tag_439\n        /* \"#utility.yul\":11314:11316   */\n      0x14\n        /* \"#utility.yul\":11309:11312   */\n      dup4\n        /* \"#utility.yul\":11250:11317   */\n      tag_302\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":11243:11317   */\n      swap2\n      pop\n        /* \"#utility.yul\":11326:11419   */\n      tag_440\n        /* \"#utility.yul\":11415:11418   */\n      dup3\n        /* \"#utility.yul\":11326:11419   */\n      tag_312\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11444:11446   */\n      0x20\n        /* \"#utility.yul\":11439:11442   */\n      dup3\n        /* \"#utility.yul\":11435:11447   */\n      add\n        /* \"#utility.yul\":11428:11447   */\n      swap1\n      pop\n        /* \"#utility.yul\":11087:11453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11459:11988   */\n    tag_200:\n        /* \"#utility.yul\":11653:11657   */\n      0x00\n        /* \"#utility.yul\":11691:11693   */\n      0x40\n        /* \"#utility.yul\":11680:11689   */\n      dup3\n        /* \"#utility.yul\":11676:11694   */\n      add\n        /* \"#utility.yul\":11668:11694   */\n      swap1\n      pop\n        /* \"#utility.yul\":11704:11775   */\n      tag_442\n        /* \"#utility.yul\":11772:11773   */\n      0x00\n        /* \"#utility.yul\":11761:11770   */\n      dup4\n        /* \"#utility.yul\":11757:11774   */\n      add\n        /* \"#utility.yul\":11748:11754   */\n      dup5\n        /* \"#utility.yul\":11704:11775   */\n      tag_282\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11822:11831   */\n      dup2\n        /* \"#utility.yul\":11816:11820   */\n      dup2\n        /* \"#utility.yul\":11812:11832   */\n      sub\n        /* \"#utility.yul\":11807:11809   */\n      0x20\n        /* \"#utility.yul\":11796:11805   */\n      dup4\n        /* \"#utility.yul\":11792:11810   */\n      add\n        /* \"#utility.yul\":11785:11833   */\n      mstore\n        /* \"#utility.yul\":11850:11981   */\n      tag_443\n        /* \"#utility.yul\":11976:11980   */\n      dup2\n        /* \"#utility.yul\":11850:11981   */\n      tag_313\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11842:11981   */\n      swap1\n      pop\n        /* \"#utility.yul\":11459:11988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11994:12156   */\n    tag_314:\n        /* \"#utility.yul\":12134:12148   */\n      0x5a65726f206465706f7369740000000000000000000000000000000000000000\n        /* \"#utility.yul\":12130:12131   */\n      0x00\n        /* \"#utility.yul\":12122:12128   */\n      dup3\n        /* \"#utility.yul\":12118:12132   */\n      add\n        /* \"#utility.yul\":12111:12149   */\n      mstore\n        /* \"#utility.yul\":11994:12156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12162:12528   */\n    tag_315:\n        /* \"#utility.yul\":12304:12307   */\n      0x00\n        /* \"#utility.yul\":12325:12392   */\n      tag_446\n        /* \"#utility.yul\":12389:12391   */\n      0x0c\n        /* \"#utility.yul\":12384:12387   */\n      dup4\n        /* \"#utility.yul\":12325:12392   */\n      tag_302\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":12318:12392   */\n      swap2\n      pop\n        /* \"#utility.yul\":12401:12494   */\n      tag_447\n        /* \"#utility.yul\":12490:12493   */\n      dup3\n        /* \"#utility.yul\":12401:12494   */\n      tag_314\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12519:12521   */\n      0x20\n        /* \"#utility.yul\":12514:12517   */\n      dup3\n        /* \"#utility.yul\":12510:12522   */\n      add\n        /* \"#utility.yul\":12503:12522   */\n      swap1\n      pop\n        /* \"#utility.yul\":12162:12528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12534:12953   */\n    tag_209:\n        /* \"#utility.yul\":12700:12704   */\n      0x00\n        /* \"#utility.yul\":12738:12740   */\n      0x20\n        /* \"#utility.yul\":12727:12736   */\n      dup3\n        /* \"#utility.yul\":12723:12741   */\n      add\n        /* \"#utility.yul\":12715:12741   */\n      swap1\n      pop\n        /* \"#utility.yul\":12787:12796   */\n      dup2\n        /* \"#utility.yul\":12781:12785   */\n      dup2\n        /* \"#utility.yul\":12777:12797   */\n      sub\n        /* \"#utility.yul\":12773:12774   */\n      0x00\n        /* \"#utility.yul\":12762:12771   */\n      dup4\n        /* \"#utility.yul\":12758:12775   */\n      add\n        /* \"#utility.yul\":12751:12798   */\n      mstore\n        /* \"#utility.yul\":12815:12946   */\n      tag_449\n        /* \"#utility.yul\":12941:12945   */\n      dup2\n        /* \"#utility.yul\":12815:12946   */\n      tag_315\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":12807:12946   */\n      swap1\n      pop\n        /* \"#utility.yul\":12534:12953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12959:13401   */\n    tag_215:\n        /* \"#utility.yul\":13108:13112   */\n      0x00\n        /* \"#utility.yul\":13146:13148   */\n      0x60\n        /* \"#utility.yul\":13135:13144   */\n      dup3\n        /* \"#utility.yul\":13131:13149   */\n      add\n        /* \"#utility.yul\":13123:13149   */\n      swap1\n      pop\n        /* \"#utility.yul\":13159:13230   */\n      tag_451\n        /* \"#utility.yul\":13227:13228   */\n      0x00\n        /* \"#utility.yul\":13216:13225   */\n      dup4\n        /* \"#utility.yul\":13212:13229   */\n      add\n        /* \"#utility.yul\":13203:13209   */\n      dup7\n        /* \"#utility.yul\":13159:13230   */\n      tag_290\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":13240:13312   */\n      tag_452\n        /* \"#utility.yul\":13308:13310   */\n      0x20\n        /* \"#utility.yul\":13297:13306   */\n      dup4\n        /* \"#utility.yul\":13293:13311   */\n      add\n        /* \"#utility.yul\":13284:13290   */\n      dup6\n        /* \"#utility.yul\":13240:13312   */\n      tag_290\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13322:13394   */\n      tag_453\n        /* \"#utility.yul\":13390:13392   */\n      0x40\n        /* \"#utility.yul\":13379:13388   */\n      dup4\n        /* \"#utility.yul\":13375:13393   */\n      add\n        /* \"#utility.yul\":13366:13372   */\n      dup5\n        /* \"#utility.yul\":13322:13394   */\n      tag_282\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12959:13401   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13407:13817   */\n    tag_241:\n        /* \"#utility.yul\":13447:13454   */\n      0x00\n        /* \"#utility.yul\":13470:13490   */\n      tag_455\n        /* \"#utility.yul\":13488:13489   */\n      dup3\n        /* \"#utility.yul\":13470:13490   */\n      tag_281\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":13465:13490   */\n      swap2\n      pop\n        /* \"#utility.yul\":13504:13524   */\n      tag_456\n        /* \"#utility.yul\":13522:13523   */\n      dup4\n        /* \"#utility.yul\":13504:13524   */\n      tag_281\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13499:13524   */\n      swap3\n      pop\n        /* \"#utility.yul\":13559:13560   */\n      dup3\n        /* \"#utility.yul\":13556:13557   */\n      dup3\n        /* \"#utility.yul\":13552:13561   */\n      mul\n        /* \"#utility.yul\":13581:13611   */\n      tag_457\n        /* \"#utility.yul\":13599:13610   */\n      dup2\n        /* \"#utility.yul\":13581:13611   */\n      tag_281\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13570:13611   */\n      swap2\n      pop\n        /* \"#utility.yul\":13760:13761   */\n      dup3\n        /* \"#utility.yul\":13751:13758   */\n      dup3\n        /* \"#utility.yul\":13747:13762   */\n      div\n        /* \"#utility.yul\":13744:13745   */\n      dup5\n        /* \"#utility.yul\":13741:13763   */\n      eq\n        /* \"#utility.yul\":13721:13722   */\n      dup4\n        /* \"#utility.yul\":13714:13723   */\n      iszero\n        /* \"#utility.yul\":13694:13777   */\n      or\n        /* \"#utility.yul\":13671:13810   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":13790:13808   */\n      tag_459\n      tag_301\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13671:13810   */\n    tag_458:\n        /* \"#utility.yul\":13455:13817   */\n      pop\n        /* \"#utility.yul\":13407:13817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13823:14003   */\n    tag_316:\n        /* \"#utility.yul\":13871:13948   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13868:13869   */\n      0x00\n        /* \"#utility.yul\":13861:13949   */\n      mstore\n        /* \"#utility.yul\":13968:13972   */\n      0x12\n        /* \"#utility.yul\":13965:13966   */\n      0x04\n        /* \"#utility.yul\":13958:13973   */\n      mstore\n        /* \"#utility.yul\":13992:13996   */\n      0x24\n        /* \"#utility.yul\":13989:13990   */\n      0x00\n        /* \"#utility.yul\":13982:13997   */\n      revert\n        /* \"#utility.yul\":14009:14194   */\n    tag_243:\n        /* \"#utility.yul\":14049:14050   */\n      0x00\n        /* \"#utility.yul\":14066:14086   */\n      tag_462\n        /* \"#utility.yul\":14084:14085   */\n      dup3\n        /* \"#utility.yul\":14066:14086   */\n      tag_281\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14061:14086   */\n      swap2\n      pop\n        /* \"#utility.yul\":14100:14120   */\n      tag_463\n        /* \"#utility.yul\":14118:14119   */\n      dup4\n        /* \"#utility.yul\":14100:14120   */\n      tag_281\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14095:14120   */\n      swap3\n      pop\n        /* \"#utility.yul\":14139:14140   */\n      dup3\n        /* \"#utility.yul\":14129:14164   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":14144:14162   */\n      tag_465\n      tag_316\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14129:14164   */\n    tag_464:\n        /* \"#utility.yul\":14186:14187   */\n      dup3\n        /* \"#utility.yul\":14183:14184   */\n      dup3\n        /* \"#utility.yul\":14179:14188   */\n      div\n        /* \"#utility.yul\":14174:14188   */\n      swap1\n      pop\n        /* \"#utility.yul\":14009:14194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14200:14381   */\n    tag_317:\n        /* \"#utility.yul\":14340:14373   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14336:14337   */\n      0x00\n        /* \"#utility.yul\":14328:14334   */\n      dup3\n        /* \"#utility.yul\":14324:14338   */\n      add\n        /* \"#utility.yul\":14317:14374   */\n      mstore\n        /* \"#utility.yul\":14200:14381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14387:14753   */\n    tag_318:\n        /* \"#utility.yul\":14529:14532   */\n      0x00\n        /* \"#utility.yul\":14550:14617   */\n      tag_468\n        /* \"#utility.yul\":14614:14616   */\n      0x1f\n        /* \"#utility.yul\":14609:14612   */\n      dup4\n        /* \"#utility.yul\":14550:14617   */\n      tag_302\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":14543:14617   */\n      swap2\n      pop\n        /* \"#utility.yul\":14626:14719   */\n      tag_469\n        /* \"#utility.yul\":14715:14718   */\n      dup3\n        /* \"#utility.yul\":14626:14719   */\n      tag_317\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":14744:14746   */\n      0x20\n        /* \"#utility.yul\":14739:14742   */\n      dup3\n        /* \"#utility.yul\":14735:14747   */\n      add\n        /* \"#utility.yul\":14728:14747   */\n      swap1\n      pop\n        /* \"#utility.yul\":14387:14753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14759:15178   */\n    tag_255:\n        /* \"#utility.yul\":14925:14929   */\n      0x00\n        /* \"#utility.yul\":14963:14965   */\n      0x20\n        /* \"#utility.yul\":14952:14961   */\n      dup3\n        /* \"#utility.yul\":14948:14966   */\n      add\n        /* \"#utility.yul\":14940:14966   */\n      swap1\n      pop\n        /* \"#utility.yul\":15012:15021   */\n      dup2\n        /* \"#utility.yul\":15006:15010   */\n      dup2\n        /* \"#utility.yul\":15002:15022   */\n      sub\n        /* \"#utility.yul\":14998:14999   */\n      0x00\n        /* \"#utility.yul\":14987:14996   */\n      dup4\n        /* \"#utility.yul\":14983:15000   */\n      add\n        /* \"#utility.yul\":14976:15023   */\n      mstore\n        /* \"#utility.yul\":15040:15171   */\n      tag_471\n        /* \"#utility.yul\":15166:15170   */\n      dup2\n        /* \"#utility.yul\":15040:15171   */\n      tag_318\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15032:15171   */\n      swap1\n      pop\n        /* \"#utility.yul\":14759:15178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15184:15289   */\n    tag_319:\n        /* \"#utility.yul\":15220:15227   */\n      0x00\n        /* \"#utility.yul\":15260:15282   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":15253:15258   */\n      dup3\n        /* \"#utility.yul\":15249:15283   */\n      and\n        /* \"#utility.yul\":15238:15283   */\n      swap1\n      pop\n        /* \"#utility.yul\":15184:15289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15295:15415   */\n    tag_320:\n        /* \"#utility.yul\":15367:15390   */\n      tag_474\n        /* \"#utility.yul\":15384:15389   */\n      dup2\n        /* \"#utility.yul\":15367:15390   */\n      tag_319\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15360:15365   */\n      dup2\n        /* \"#utility.yul\":15357:15391   */\n      eq\n        /* \"#utility.yul\":15347:15409   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":15405:15406   */\n      0x00\n        /* \"#utility.yul\":15402:15403   */\n      0x00\n        /* \"#utility.yul\":15395:15407   */\n      revert\n        /* \"#utility.yul\":15347:15409   */\n    tag_475:\n        /* \"#utility.yul\":15295:15415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15421:15562   */\n    tag_321:\n        /* \"#utility.yul\":15477:15482   */\n      0x00\n        /* \"#utility.yul\":15508:15514   */\n      dup2\n        /* \"#utility.yul\":15502:15515   */\n      mload\n        /* \"#utility.yul\":15493:15515   */\n      swap1\n      pop\n        /* \"#utility.yul\":15524:15556   */\n      tag_477\n        /* \"#utility.yul\":15550:15555   */\n      dup2\n        /* \"#utility.yul\":15524:15556   */\n      tag_320\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15421:15562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15568:15644   */\n    tag_322:\n        /* \"#utility.yul\":15604:15611   */\n      0x00\n        /* \"#utility.yul\":15633:15638   */\n      dup2\n        /* \"#utility.yul\":15622:15638   */\n      swap1\n      pop\n        /* \"#utility.yul\":15568:15644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15650:15770   */\n    tag_323:\n        /* \"#utility.yul\":15722:15745   */\n      tag_480\n        /* \"#utility.yul\":15739:15744   */\n      dup2\n        /* \"#utility.yul\":15722:15745   */\n      tag_322\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":15715:15720   */\n      dup2\n        /* \"#utility.yul\":15712:15746   */\n      eq\n        /* \"#utility.yul\":15702:15764   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":15760:15761   */\n      0x00\n        /* \"#utility.yul\":15757:15758   */\n      0x00\n        /* \"#utility.yul\":15750:15762   */\n      revert\n        /* \"#utility.yul\":15702:15764   */\n    tag_481:\n        /* \"#utility.yul\":15650:15770   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15776:15917   */\n    tag_324:\n        /* \"#utility.yul\":15832:15837   */\n      0x00\n        /* \"#utility.yul\":15863:15869   */\n      dup2\n        /* \"#utility.yul\":15857:15870   */\n      mload\n        /* \"#utility.yul\":15848:15870   */\n      swap1\n      pop\n        /* \"#utility.yul\":15879:15911   */\n      tag_483\n        /* \"#utility.yul\":15905:15910   */\n      dup2\n        /* \"#utility.yul\":15879:15911   */\n      tag_323\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15776:15917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15923:16894   */\n    tag_270:\n        /* \"#utility.yul\":16026:16032   */\n      0x00\n        /* \"#utility.yul\":16034:16040   */\n      0x00\n        /* \"#utility.yul\":16042:16048   */\n      0x00\n        /* \"#utility.yul\":16050:16056   */\n      0x00\n        /* \"#utility.yul\":16058:16064   */\n      0x00\n        /* \"#utility.yul\":16107:16110   */\n      0xa0\n        /* \"#utility.yul\":16095:16104   */\n      dup7\n        /* \"#utility.yul\":16086:16093   */\n      dup9\n        /* \"#utility.yul\":16082:16105   */\n      sub\n        /* \"#utility.yul\":16078:16111   */\n      slt\n        /* \"#utility.yul\":16075:16195   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":16114:16193   */\n      tag_486\n      tag_284\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16075:16195   */\n    tag_485:\n        /* \"#utility.yul\":16234:16235   */\n      0x00\n        /* \"#utility.yul\":16259:16322   */\n      tag_487\n        /* \"#utility.yul\":16314:16321   */\n      dup9\n        /* \"#utility.yul\":16305:16311   */\n      dup3\n        /* \"#utility.yul\":16294:16303   */\n      dup10\n        /* \"#utility.yul\":16290:16312   */\n      add\n        /* \"#utility.yul\":16259:16322   */\n      tag_321\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16249:16322   */\n      swap6\n      pop\n        /* \"#utility.yul\":16205:16332   */\n      pop\n        /* \"#utility.yul\":16371:16373   */\n      0x20\n        /* \"#utility.yul\":16397:16460   */\n      tag_488\n        /* \"#utility.yul\":16452:16459   */\n      dup9\n        /* \"#utility.yul\":16443:16449   */\n      dup3\n        /* \"#utility.yul\":16432:16441   */\n      dup10\n        /* \"#utility.yul\":16428:16450   */\n      add\n        /* \"#utility.yul\":16397:16460   */\n      tag_324\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":16387:16460   */\n      swap5\n      pop\n        /* \"#utility.yul\":16342:16470   */\n      pop\n        /* \"#utility.yul\":16509:16511   */\n      0x40\n        /* \"#utility.yul\":16535:16599   */\n      tag_489\n        /* \"#utility.yul\":16591:16598   */\n      dup9\n        /* \"#utility.yul\":16582:16588   */\n      dup3\n        /* \"#utility.yul\":16571:16580   */\n      dup10\n        /* \"#utility.yul\":16567:16589   */\n      add\n        /* \"#utility.yul\":16535:16599   */\n      tag_300\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16525:16599   */\n      swap4\n      pop\n        /* \"#utility.yul\":16480:16609   */\n      pop\n        /* \"#utility.yul\":16648:16650   */\n      0x60\n        /* \"#utility.yul\":16674:16738   */\n      tag_490\n        /* \"#utility.yul\":16730:16737   */\n      dup9\n        /* \"#utility.yul\":16721:16727   */\n      dup3\n        /* \"#utility.yul\":16710:16719   */\n      dup10\n        /* \"#utility.yul\":16706:16728   */\n      add\n        /* \"#utility.yul\":16674:16738   */\n      tag_300\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16664:16738   */\n      swap3\n      pop\n        /* \"#utility.yul\":16619:16748   */\n      pop\n        /* \"#utility.yul\":16787:16790   */\n      0x80\n        /* \"#utility.yul\":16814:16877   */\n      tag_491\n        /* \"#utility.yul\":16869:16876   */\n      dup9\n        /* \"#utility.yul\":16860:16866   */\n      dup3\n        /* \"#utility.yul\":16849:16858   */\n      dup10\n        /* \"#utility.yul\":16845:16867   */\n      add\n        /* \"#utility.yul\":16814:16877   */\n      tag_321\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":16804:16877   */\n      swap2\n      pop\n        /* \"#utility.yul\":16758:16887   */\n      pop\n        /* \"#utility.yul\":15923:16894   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dd68a378efbd5b40385c2790ad532137a67607c7083100fc38fea5f37c7f974b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 325,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_addresst_address_fromMemory": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2537:11",
										"nodeType": "YulBlock",
										"src": "0:2537:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "608:80:11",
													"nodeType": "YulBlock",
													"src": "608:80:11",
													"statements": [
														{
															"nativeSrc": "618:22:11",
															"nodeType": "YulAssignment",
															"src": "618:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:11"
																},
																"nativeSrc": "627:13:11",
																"nodeType": "YulFunctionCall",
																"src": "627:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:11"
																},
																"nativeSrc": "649:33:11",
																"nodeType": "YulFunctionCall",
																"src": "649:33:11"
															},
															"nativeSrc": "649:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:11",
														"nodeType": "YulTypedName",
														"src": "586:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:11",
														"nodeType": "YulTypedName",
														"src": "594:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:11",
														"nodeType": "YulTypedName",
														"src": "602:5:11",
														"type": ""
													}
												],
												"src": "545:143:11"
											},
											{
												"body": {
													"nativeSrc": "739:81:11",
													"nodeType": "YulBlock",
													"src": "739:81:11",
													"statements": [
														{
															"nativeSrc": "749:65:11",
															"nodeType": "YulAssignment",
															"src": "749:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:11",
																		"nodeType": "YulLiteral",
																		"src": "771:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:11"
																},
																"nativeSrc": "760:54:11",
																"nodeType": "YulFunctionCall",
																"src": "760:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:11",
														"nodeType": "YulTypedName",
														"src": "721:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:11",
														"nodeType": "YulTypedName",
														"src": "731:7:11",
														"type": ""
													}
												],
												"src": "694:126:11"
											},
											{
												"body": {
													"nativeSrc": "871:51:11",
													"nodeType": "YulBlock",
													"src": "871:51:11",
													"statements": [
														{
															"nativeSrc": "881:35:11",
															"nodeType": "YulAssignment",
															"src": "881:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:11"
																},
																"nativeSrc": "892:24:11",
																"nodeType": "YulFunctionCall",
																"src": "892:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:11",
														"nodeType": "YulTypedName",
														"src": "853:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:11",
														"nodeType": "YulTypedName",
														"src": "863:7:11",
														"type": ""
													}
												],
												"src": "826:96:11"
											},
											{
												"body": {
													"nativeSrc": "971:79:11",
													"nodeType": "YulBlock",
													"src": "971:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:11",
																"nodeType": "YulBlock",
																"src": "1028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:11"
																			},
																			"nativeSrc": "1030:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:11"
																		},
																		"nativeSrc": "1030:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:11"
																				},
																				"nativeSrc": "1001:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:11"
																		},
																		"nativeSrc": "991:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:11"
																},
																"nativeSrc": "984:43:11",
																"nodeType": "YulFunctionCall",
																"src": "984:43:11"
															},
															"nativeSrc": "981:63:11",
															"nodeType": "YulIf",
															"src": "981:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:11",
														"nodeType": "YulTypedName",
														"src": "964:5:11",
														"type": ""
													}
												],
												"src": "928:122:11"
											},
											{
												"body": {
													"nativeSrc": "1119:80:11",
													"nodeType": "YulBlock",
													"src": "1119:80:11",
													"statements": [
														{
															"nativeSrc": "1129:22:11",
															"nodeType": "YulAssignment",
															"src": "1129:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:11"
																},
																"nativeSrc": "1138:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:11"
																},
																"nativeSrc": "1160:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:11"
															},
															"nativeSrc": "1160:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:11",
														"nodeType": "YulTypedName",
														"src": "1097:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:11",
														"nodeType": "YulTypedName",
														"src": "1105:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:11",
														"nodeType": "YulTypedName",
														"src": "1113:5:11",
														"type": ""
													}
												],
												"src": "1056:143:11"
											},
											{
												"body": {
													"nativeSrc": "1350:832:11",
													"nodeType": "YulBlock",
													"src": "1350:832:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:83:11",
																"nodeType": "YulBlock",
																"src": "1397:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1399:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:11"
																			},
																			"nativeSrc": "1399:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:11"
																		},
																		"nativeSrc": "1399:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1380:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1367:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:11"
																		},
																		"nativeSrc": "1367:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1363:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:11"
																},
																"nativeSrc": "1363:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1363:33:11"
															},
															"nativeSrc": "1360:120:11",
															"nodeType": "YulIf",
															"src": "1360:120:11"
														},
														{
															"nativeSrc": "1490:128:11",
															"nodeType": "YulBlock",
															"src": "1490:128:11",
															"statements": [
																{
																	"nativeSrc": "1505:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1519:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1509:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1534:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1534:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1591:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:11"
																				},
																				"nativeSrc": "1576:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1544:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:11"
																		},
																		"nativeSrc": "1544:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1534:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1628:129:11",
															"nodeType": "YulBlock",
															"src": "1628:129:11",
															"statements": [
																{
																	"nativeSrc": "1643:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1657:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1647:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1673:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1673:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1719:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1730:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1715:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:11"
																				},
																				"nativeSrc": "1715:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1739:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1683:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:11"
																		},
																		"nativeSrc": "1683:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1673:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1767:129:11",
															"nodeType": "YulBlock",
															"src": "1767:129:11",
															"statements": [
																{
																	"nativeSrc": "1782:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1796:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1786:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1812:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1812:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1858:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1869:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1854:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:11"
																				},
																				"nativeSrc": "1854:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1878:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1822:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:11"
																		},
																		"nativeSrc": "1822:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1812:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1906:129:11",
															"nodeType": "YulBlock",
															"src": "1906:129:11",
															"statements": [
																{
																	"nativeSrc": "1921:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1935:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1925:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1951:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1951:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1997:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2008:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1993:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:11"
																				},
																				"nativeSrc": "1993:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2017:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1961:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:11"
																		},
																		"nativeSrc": "1961:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1951:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2045:130:11",
															"nodeType": "YulBlock",
															"src": "2045:130:11",
															"statements": [
																{
																	"nativeSrc": "2060:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2074:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2064:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2091:74:11",
																	"nodeType": "YulAssignment",
																	"src": "2091:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:11"
																				},
																				"nativeSrc": "2133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2101:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:11"
																		},
																		"nativeSrc": "2101:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2091:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_addresst_address_fromMemory",
												"nativeSrc": "1205:977:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:11",
														"nodeType": "YulTypedName",
														"src": "1288:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1299:7:11",
														"nodeType": "YulTypedName",
														"src": "1299:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1311:6:11",
														"nodeType": "YulTypedName",
														"src": "1311:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1319:6:11",
														"nodeType": "YulTypedName",
														"src": "1319:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1327:6:11",
														"nodeType": "YulTypedName",
														"src": "1327:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1335:6:11",
														"nodeType": "YulTypedName",
														"src": "1335:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1343:6:11",
														"nodeType": "YulTypedName",
														"src": "1343:6:11",
														"type": ""
													}
												],
												"src": "1205:977:11"
											},
											{
												"body": {
													"nativeSrc": "2253:53:11",
													"nodeType": "YulBlock",
													"src": "2253:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2270:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2293:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2293:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2275:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2275:17:11"
																		},
																		"nativeSrc": "2275:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2263:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:11"
																},
																"nativeSrc": "2263:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2263:37:11"
															},
															"nativeSrc": "2263:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2263:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2188:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2241:5:11",
														"nodeType": "YulTypedName",
														"src": "2241:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2248:3:11",
														"nodeType": "YulTypedName",
														"src": "2248:3:11",
														"type": ""
													}
												],
												"src": "2188:118:11"
											},
											{
												"body": {
													"nativeSrc": "2410:124:11",
													"nodeType": "YulBlock",
													"src": "2410:124:11",
													"statements": [
														{
															"nativeSrc": "2420:26:11",
															"nodeType": "YulAssignment",
															"src": "2420:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2432:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2432:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2443:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2443:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2428:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:11"
																},
																"nativeSrc": "2428:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2428:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2420:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2500:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2500:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:11"
																		},
																		"nativeSrc": "2509:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2456:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2456:43:11"
																},
																"nativeSrc": "2456:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2456:71:11"
															},
															"nativeSrc": "2456:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2456:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2312:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2382:9:11",
														"nodeType": "YulTypedName",
														"src": "2382:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2394:6:11",
														"nodeType": "YulTypedName",
														"src": "2394:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2405:4:11",
														"nodeType": "YulTypedName",
														"src": "2405:4:11",
														"type": ""
													}
												],
												"src": "2312:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b5060405161228538038061228583398181016040528101906100319190610297565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061031d565b60405180910390fd5b6100b18161014560201b60201c565b50600180819055508260035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505084600681905550836004819055505050505050610336565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f819050919050565b61021c8161020a565b8114610226575f5ffd5b50565b5f8151905061023781610213565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102668261023d565b9050919050565b6102768161025c565b8114610280575f5ffd5b50565b5f815190506102918161026d565b92915050565b5f5f5f5f5f60a086880312156102b0576102af610206565b5b5f6102bd88828901610229565b95505060206102ce88828901610229565b94505060406102df88828901610283565b93505060606102f088828901610283565b925050608061030188828901610283565b9150509295509295909350565b6103178161025c565b82525050565b5f6020820190506103305f83018461030e565b92915050565b608051611eff6103865f395f81816104af015281816106360152818161075601528181610835015281816108c001528181611068015281816110dd0152818161114501526111b00152611eff5ff3fe608060405260043610610129575f3560e01c8063a1eaa644116100aa578063f14210a61161006e578063f14210a6146103bd578063f2fde38b146103e5578063f6326fb31461040d578063f688bcfb14610417578063fc4577921461043f578063ff40e1d01461046957610129565b8063a1eaa644146102cb578063bdc8144b14610307578063cac2e25f1461032f578063db81f99b14610359578063dcd725a71461038157610129565b80637adbf973116100f15780637adbf973146101eb5780638c8bdae9146102135780638da5cb5b1461024f5780638eddc8f914610279578063a00cad48146102a157610129565b8063161235241461012d57806352963c2b146101575780636bec1ed014610181578063715018a6146101ab57806378234a3b146101c1575b5f5ffd5b348015610138575f5ffd5b50610141610493565b60405161014e9190611696565b60405180910390f35b348015610162575f5ffd5b5061016b610499565b6040516101789190611696565b60405180910390f35b34801561018c575f5ffd5b5061019561049f565b6040516101a29190611696565b60405180910390f35b3480156101b6575f5ffd5b506101bf61055a565b005b3480156101cc575f5ffd5b506101d561056d565b6040516101e29190611696565b60405180910390f35b3480156101f6575f5ffd5b50610211600480360381019061020c919061170d565b610573565b005b34801561021e575f5ffd5b506102396004803603810190610234919061170d565b6105f5565b6040516102469190611696565b60405180910390f35b34801561025a575f5ffd5b50610263610696565b6040516102709190611747565b60405180910390f35b348015610284575f5ffd5b5061029f600480360381019061029a919061178a565b6106bd565b005b3480156102ac575f5ffd5b506102b56106cf565b6040516102c29190611696565b60405180910390f35b3480156102d6575f5ffd5b506102f160048036038101906102ec91906117b5565b6106d5565b6040516102fe9190611696565b60405180910390f35b348015610312575f5ffd5b5061032d6004803603810190610328919061178a565b6106f5565b005b34801561033a575f5ffd5b50610343610707565b6040516103509190611696565b60405180910390f35b348015610364575f5ffd5b5061037f600480360381019061037a919061178a565b61070d565b005b34801561038c575f5ffd5b506103a760048036038101906103a2919061170d565b610948565b6040516103b49190611696565b60405180910390f35b3480156103c8575f5ffd5b506103e360048036038101906103de919061178a565b6109d1565b005b3480156103f0575f5ffd5b5061040b6004803603810190610406919061170d565b610c7a565b005b610415610cfe565b005b348015610422575f5ffd5b5061043d6004803603810190610438919061178a565b610f0b565b005b34801561044a575f5ffd5b50610453611189565b604051610460919061184e565b60405180910390f35b348015610474575f5ffd5b5061047d6111ae565b60405161048a9190611887565b60405180910390f35b60065481565b60055481565b5f5f6104aa476111d2565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105069190611747565b602060405180830381865afa158015610521573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054591906118b4565b90508082610553919061190c565b9250505090565b610562611201565b61056b5f611288565b565b60075481565b61057b611201565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394816040516105ea9190611747565b60405180910390a150565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106c5611201565b8060068190555050565b60045481565b6002602052815f5260405f20602052805f5260405f205f91509150505481565b6106fd611201565b8060048190555050565b60085481565b610715611349565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107f45780336040517f7c4f8b5d0000000000000000000000000000000000000000000000000000000081526004016107eb929190611999565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461089b91906119d3565b9250508190555060075f8154809291906108b490611a06565b919050555061090433827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113989092919063ffffffff16565b7f3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d8772893382604051610935929190611a4d565b60405180910390a1610945611417565b50565b5f6109ca60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546111d2565b9050919050565b6109d9611349565b80662386f26fc10000811115610a285780336040517f2183cae3000000000000000000000000000000000000000000000000000000008152600401610a1f929190611ae4565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610ae75780336040517f7c4f8b5d000000000000000000000000000000000000000000000000000000008152600401610ade929190611999565b60405180910390fd5b8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b6e91906119d3565b9250508190555060075f815480929190610b8790611a06565b91905055505f3373ffffffffffffffffffffffffffffffffffffffff1683604051610bb190611b4b565b5f6040518083038185875af1925050503d805f8114610beb576040519150601f19603f3d011682016040523d82523d5f602084013e610bf0565b606091505b5050905080610c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2b90611ba9565b60405180910390fd5b7f3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d8772893384604051610c65929190611a4d565b60405180910390a15050610c77611417565b50565b610c82611201565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ce99190611747565b60405180910390fd5b610cfb81611288565b50565b610d06611349565b610d0f346111d2565b610d1881611420565b15610d5a57806040517fa04dceba000000000000000000000000000000000000000000000000000000008152600401610d519190611c11565b60405180910390fd5b610d63346111d2565b60065481600554610d74919061190c565b1115610db9576006546040517f430b43df000000000000000000000000000000000000000000000000000000008152600401610db09190611696565b60405180910390fd5b5f3411610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290611c87565b60405180910390fd5b5f610e05346111d2565b905060085f815480929190610e1990611a06565b91905055508060055f828254610e2f919061190c565b925050819055503460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ebd919061190c565b925050819055507ee03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505335f34604051610ef693929190611ca5565b60405180910390a1505050610f09611417565b565b610f13611349565b80610f1d81611420565b15610f5f57806040517fa04dceba000000000000000000000000000000000000000000000000000000008152600401610f569190611c11565b60405180910390fd5b8160065481600554610f71919061190c565b1115610fb6576006546040517f430b43df000000000000000000000000000000000000000000000000000000008152600401610fad9190611696565b60405180910390fd5b5f8311610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef90611c87565b60405180910390fd5b60085f81548092919061100a90611a06565b91905055508260055f828254611020919061190c565b925050819055508260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110ce919061190c565b925050819055506111223330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661143a909392919063ffffffff16565b7ee03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505337f00000000000000000000000000000000000000000000000000000000000000008560405161117493929190611ca5565b60405180910390a15050611186611417565b50565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f68056bc75e2d631000006111e56114bc565b836111f09190611cda565b6111fa9190611d48565b9050919050565b6112096115dc565b73ffffffffffffffffffffffffffffffffffffffff16611227610696565b73ffffffffffffffffffffffffffffffffffffffff16146112865761124a6115dc565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161127d9190611747565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60026001540361138e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138590611dc2565b60405180910390fd5b6002600181905550565b611412838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016113cb929190611a4d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506115e3565b505050565b60018081905550565b5f60045482600554611432919061190c565b119050919050565b6114b6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161146f93929190611ca5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506115e3565b50505050565b5f5f5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611529573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154d9190611e52565b509350509250505f820361158d576040517f144c1d9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e10814261159c91906119d3565b11156115d4576040517f0b3126e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b819250505090565b5f33905090565b5f5f60205f8451602086015f885af180611602576040513d5f823e3d81fd5b3d92505f519150505f821461161b576001811415611636565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561167857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161166f9190611747565b60405180910390fd5b50505050565b5f819050919050565b6116908161167e565b82525050565b5f6020820190506116a95f830184611687565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116dc826116b3565b9050919050565b6116ec816116d2565b81146116f6575f5ffd5b50565b5f81359050611707816116e3565b92915050565b5f60208284031215611722576117216116af565b5b5f61172f848285016116f9565b91505092915050565b611741816116d2565b82525050565b5f60208201905061175a5f830184611738565b92915050565b6117698161167e565b8114611773575f5ffd5b50565b5f8135905061178481611760565b92915050565b5f6020828403121561179f5761179e6116af565b5b5f6117ac84828501611776565b91505092915050565b5f5f604083850312156117cb576117ca6116af565b5b5f6117d8858286016116f9565b92505060206117e9858286016116f9565b9150509250929050565b5f819050919050565b5f61181661181161180c846116b3565b6117f3565b6116b3565b9050919050565b5f611827826117fc565b9050919050565b5f6118388261181d565b9050919050565b6118488161182e565b82525050565b5f6020820190506118615f83018461183f565b92915050565b5f6118718261181d565b9050919050565b61188181611867565b82525050565b5f60208201905061189a5f830184611878565b92915050565b5f815190506118ae81611760565b92915050565b5f602082840312156118c9576118c86116af565b5b5f6118d6848285016118a0565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119168261167e565b91506119218361167e565b9250828201905080821115611939576119386118df565b5b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61198360148361193f565b915061198e8261194f565b602082019050919050565b5f6060820190506119ac5f830185611687565b6119b96020830184611738565b81810360408301526119ca81611977565b90509392505050565b5f6119dd8261167e565b91506119e88361167e565b9250828203905081811115611a00576119ff6118df565b5b92915050565b5f611a108261167e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a4257611a416118df565b5b600182019050919050565b5f604082019050611a605f830185611738565b611a6d6020830184611687565b9392505050565b7f43616e6e6f74207769746864726177206d6f7265207468616e20302e303120455f8201527f5448000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ace60228361193f565b9150611ad982611a74565b604082019050919050565b5f606082019050611af75f830185611687565b611b046020830184611738565b8181036040830152611b1581611ac2565b90509392505050565b5f81905092915050565b50565b5f611b365f83611b1e565b9150611b4182611b28565b5f82019050919050565b5f611b5582611b2b565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f611b9360118361193f565b9150611b9e82611b5f565b602082019050919050565b5f6020820190508181035f830152611bc081611b87565b9050919050565b7f476c6f62616c206c696d697420726561636865640000000000000000000000005f82015250565b5f611bfb60148361193f565b9150611c0682611bc7565b602082019050919050565b5f604082019050611c245f830184611687565b8181036020830152611c3581611bef565b905092915050565b7f5a65726f206465706f73697400000000000000000000000000000000000000005f82015250565b5f611c71600c8361193f565b9150611c7c82611c3d565b602082019050919050565b5f6020820190508181035f830152611c9e81611c65565b9050919050565b5f606082019050611cb85f830186611738565b611cc56020830185611738565b611cd26040830184611687565b949350505050565b5f611ce48261167e565b9150611cef8361167e565b9250828202611cfd8161167e565b91508282048414831517611d1457611d136118df565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d528261167e565b9150611d5d8361167e565b925082611d6d57611d6c611d1b565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611dac601f8361193f565b9150611db782611d78565b602082019050919050565b5f6020820190508181035f830152611dd981611da0565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611dfe81611de0565b8114611e08575f5ffd5b50565b5f81519050611e1981611df5565b92915050565b5f819050919050565b611e3181611e1f565b8114611e3b575f5ffd5b50565b5f81519050611e4c81611e28565b92915050565b5f5f5f5f5f60a08688031215611e6b57611e6a6116af565b5b5f611e7888828901611e0b565b9550506020611e8988828901611e3e565b9450506040611e9a888289016118a0565b9350506060611eab888289016118a0565b9250506080611ebc88828901611e0b565b915050929550929590935056fea2646970667358221220dd68a378efbd5b40385c2790ad532137a67607c7083100fc38fea5f37c7f974b64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2285 CODESIZE SUB DUP1 PUSH2 0x2285 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x336 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C DUP2 PUSH2 0x20A JUMP JUMPDEST DUP2 EQ PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x237 DUP2 PUSH2 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x266 DUP3 PUSH2 0x23D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x25C JUMP JUMPDEST DUP2 EQ PUSH2 0x280 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x291 DUP2 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x206 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BD DUP9 DUP3 DUP10 ADD PUSH2 0x229 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2CE DUP9 DUP3 DUP10 ADD PUSH2 0x229 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2DF DUP9 DUP3 DUP10 ADD PUSH2 0x283 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2F0 DUP9 DUP3 DUP10 ADD PUSH2 0x283 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x301 DUP9 DUP3 DUP10 ADD PUSH2 0x283 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x317 DUP2 PUSH2 0x25C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x330 PUSH0 DUP4 ADD DUP5 PUSH2 0x30E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1EFF PUSH2 0x386 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x4AF ADD MSTORE DUP2 DUP2 PUSH2 0x636 ADD MSTORE DUP2 DUP2 PUSH2 0x756 ADD MSTORE DUP2 DUP2 PUSH2 0x835 ADD MSTORE DUP2 DUP2 PUSH2 0x8C0 ADD MSTORE DUP2 DUP2 PUSH2 0x1068 ADD MSTORE DUP2 DUP2 PUSH2 0x10DD ADD MSTORE DUP2 DUP2 PUSH2 0x1145 ADD MSTORE PUSH2 0x11B0 ADD MSTORE PUSH2 0x1EFF PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1EAA644 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xF688BCFB EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xFC457792 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xFF40E1D0 EQ PUSH2 0x469 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0xA1EAA644 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xBDC8144B EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xCAC2E25F EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDB81F99B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xDCD725A7 EQ PUSH2 0x381 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x7ADBF973 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8C8BDAE9 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8EDDC8F9 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xA00CAD48 EQ PUSH2 0x2A1 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x16123524 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x52963C2B EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6BEC1ED0 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x78234A3B EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x343 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x453 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x47D PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AA SELFBALANCE PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x56B PUSH0 PUSH2 0x1288 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x57B PUSH2 0x1201 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x1201 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x1201 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7F4 JUMPI DUP1 CALLER PUSH1 0x40 MLOAD PUSH32 0x7C4F8B5D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EB SWAP3 SWAP2 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x8B4 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x904 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1398 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x3F8F630C8B146486A33AFC98F55BD1FDD5D4717DEAB161C649B6FE758D877289 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x935 SWAP3 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x945 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x9CA PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D9 PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH7 0x2386F26FC10000 DUP2 GT ISZERO PUSH2 0xA28 JUMPI DUP1 CALLER PUSH1 0x40 MLOAD PUSH32 0x2183CAE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP3 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAE7 JUMPI DUP1 CALLER PUSH1 0x40 MLOAD PUSH32 0x7C4F8B5D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADE SWAP3 SWAP2 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB87 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xBB1 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2B SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3F8F630C8B146486A33AFC98F55BD1FDD5D4717DEAB161C649B6FE758D877289 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0xC65 SWAP3 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xC77 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC82 PUSH2 0x1201 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0x1288 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD06 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xD0F CALLVALUE PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0x1420 JUMP JUMPDEST ISZERO PUSH2 0xD5A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xA04DCEBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD63 CALLVALUE PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0x5 SLOAD PUSH2 0xD74 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST GT ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x430B43DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE05 CALLVALUE PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE19 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH31 0xE03F32AE5DCDD1E3D7D441BE59E1650006AEB02C24FAA7EF36785183D5C505 CALLER PUSH0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xEF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0xF09 PUSH2 0x1417 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF13 PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH2 0xF1D DUP2 PUSH2 0x1420 JUMP JUMPDEST ISZERO PUSH2 0xF5F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xA04DCEBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 SLOAD DUP2 PUSH1 0x5 SLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x430B43DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x100A SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP3 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1122 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x143A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH31 0xE03F32AE5DCDD1E3D7D441BE59E1650006AEB02C24FAA7EF36785183D5C505 CALLER PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x1186 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 PUSH2 0x11E5 PUSH2 0x14BC JUMP JUMPDEST DUP4 PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1209 PUSH2 0x15DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1227 PUSH2 0x696 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1286 JUMPI PUSH2 0x124A PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1385 SWAP1 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1412 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13CB SWAP3 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x15E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP3 PUSH1 0x5 SLOAD PUSH2 0x1432 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x146F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x15E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154D SWAP2 SWAP1 PUSH2 0x1E52 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SUB PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x144C1D9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 TIMESTAMP PUSH2 0x159C SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST GT ISZERO PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3126E600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1602 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x161B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1636 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1678 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1690 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16DC DUP3 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x16D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1707 DUP2 PUSH2 0x16E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172F DUP5 DUP3 DUP6 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1741 DUP2 PUSH2 0x16D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175A PUSH0 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1769 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x1773 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1784 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH2 0x179E PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17AC DUP5 DUP3 DUP6 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D8 DUP6 DUP3 DUP7 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E9 DUP6 DUP3 DUP7 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1816 PUSH2 0x1811 PUSH2 0x180C DUP5 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1827 DUP3 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1838 DUP3 PUSH2 0x181D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1848 DUP2 PUSH2 0x182E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1861 PUSH0 DUP4 ADD DUP5 PUSH2 0x183F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1871 DUP3 PUSH2 0x181D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x1867 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18AE DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C9 JUMPI PUSH2 0x18C8 PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D6 DUP5 DUP3 DUP6 ADD PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1916 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x1921 DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1983 PUSH1 0x14 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x198E DUP3 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x19B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19CA DUP2 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19DD DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x19E8 DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x19FF PUSH2 0x18DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A10 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A42 JUMPI PUSH2 0x1A41 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A60 PUSH0 DUP4 ADD DUP6 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1A6D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207769746864726177206D6F7265207468616E20302E30312045 PUSH0 DUP3 ADD MSTORE PUSH32 0x5448000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACE PUSH1 0x22 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD9 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x1B04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B15 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1B36 PUSH0 DUP4 PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B41 DUP3 PUSH2 0x1B28 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B55 DUP3 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B93 PUSH1 0x11 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9E DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BC0 DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476C6F62616C206C696D69742072656163686564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFB PUSH1 0x14 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C06 DUP3 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C24 PUSH0 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C35 DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A65726F206465706F7369740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C71 PUSH1 0xC DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7C DUP3 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9E DUP2 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CB8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1CC5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1CD2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE4 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEF DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1CFD DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D52 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5D DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D6D JUMPI PUSH2 0x1D6C PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAC PUSH1 0x1F DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD9 DUP2 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFE DUP2 PUSH2 0x1DE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E08 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E19 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E31 DUP2 PUSH2 0x1E1F JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E4C DUP2 PUSH2 0x1E28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E78 DUP9 DUP3 DUP10 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E89 DUP9 DUP3 DUP10 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E9A DUP9 DUP3 DUP10 ADD PUSH2 0x18A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1EAB DUP9 DUP3 DUP10 ADD PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1EBC DUP9 DUP3 DUP10 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH9 0xA378EFBD5B40385C27 SWAP1 0xAD MSTORE8 0x21 CALLDATACOPY 0xA6 PUSH23 0x7C7083100FC38FEA5F37C7F974B64736F6C634300081E STOP CALLER ",
							"sourceMap": "789:10658:10:-:0;;;5115:343;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5278:6;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:5;1821:7;:22;;;;5329:7:10::1;5296:8;;:41;;;;;;;;;;;;;;;;;;5363:5;5347:22;;;;;;;;::::0;::::1;5395:12;5379:13;:28;;;;5434:17;5417:14;:34;;;;5115:343:::0;;;;;789:10658;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:118::-;2275:24;2293:5;2275:24;:::i;:::-;2270:3;2263:37;2188:118;;:::o;2312:222::-;2405:4;2443:2;2432:9;2428:18;2420:26;;2456:71;2524:1;2513:9;2509:17;2500:6;2456:71;:::i;:::-;2312:222;;;;:::o;789:10658:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_848": {
									"entryPoint": 5603,
									"id": 848,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 4609,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_convertETHtoUSDC_1217": {
									"entryPoint": 4562,
									"id": 1217,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_exceedsDepositLimit_1233": {
									"entryPoint": 5152,
									"id": 1233,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getETHUSDPrice_1198": {
									"entryPoint": 5308,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_902": {
									"entryPoint": 5596,
									"id": 902,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_336": {
									"entryPoint": 5143,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_328": {
									"entryPoint": 4937,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 4744,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@contractBalanceInUSDC_1266": {
									"entryPoint": 1183,
									"id": 1266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositETH_1420": {
									"entryPoint": 3326,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositUSDC_1483": {
									"entryPoint": 3851,
									"id": 1483,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@i_usdc_979": {
									"entryPoint": 4526,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": 1686,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_144": {
									"entryPoint": 1370,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_bankCapital_988": {
									"entryPoint": 1171,
									"id": 988,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_depositCount_997": {
									"entryPoint": 1799,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_depositLimit_982": {
									"entryPoint": 1743,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_oracle_963": {
									"entryPoint": 4489,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_totalDeposits_985": {
									"entryPoint": 1177,
									"id": 985,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_vault_959": {
									"entryPoint": 1749,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_withdrawCount_995": {
									"entryPoint": 1389,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_498": {
									"entryPoint": 5178,
									"id": 498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_471": {
									"entryPoint": 5016,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBankCapital_1573": {
									"entryPoint": 1725,
									"id": 1573,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDepositLimit_1586": {
									"entryPoint": 1781,
									"id": 1586,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOracle_1560": {
									"entryPoint": 1395,
									"id": 1560,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 3194,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@viewETHBalance_1286": {
									"entryPoint": 2376,
									"id": 1286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@viewUSDCBalance_1304": {
									"entryPoint": 1525,
									"id": 1304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdrawETH_1355": {
									"entryPoint": 2513,
									"id": 1355,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawUSDC_1541": {
									"entryPoint": 1805,
									"id": 1541,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$426_to_t_address_fromStack": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$426__to_t_address__fromStack_reversed": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$426_to_t_address": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f": {
									"entryPoint": 7229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16897:11",
										"nodeType": "YulBlock",
										"src": "0:16897:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:11",
													"nodeType": "YulBlock",
													"src": "52:32:11",
													"statements": [
														{
															"nativeSrc": "62:16:11",
															"nodeType": "YulAssignment",
															"src": "62:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:11",
																"nodeType": "YulIdentifier",
																"src": "73:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:77:11"
											},
											{
												"body": {
													"nativeSrc": "155:53:11",
													"nodeType": "YulBlock",
													"src": "155:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:11"
																		},
																		"nativeSrc": "177:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:11"
																},
																"nativeSrc": "165:37:11",
																"nodeType": "YulFunctionCall",
																"src": "165:37:11"
															},
															"nativeSrc": "165:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:11",
														"nodeType": "YulTypedName",
														"src": "143:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:11",
														"nodeType": "YulTypedName",
														"src": "150:3:11",
														"type": ""
													}
												],
												"src": "90:118:11"
											},
											{
												"body": {
													"nativeSrc": "312:124:11",
													"nodeType": "YulBlock",
													"src": "312:124:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:11",
																				"nodeType": "YulLiteral",
																				"src": "426:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:11"
																		},
																		"nativeSrc": "411:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:11"
																},
																"nativeSrc": "358:71:11",
																"nodeType": "YulFunctionCall",
																"src": "358:71:11"
															},
															"nativeSrc": "358:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:11",
														"nodeType": "YulTypedName",
														"src": "284:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:11",
														"nodeType": "YulTypedName",
														"src": "296:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:11",
														"nodeType": "YulTypedName",
														"src": "307:4:11",
														"type": ""
													}
												],
												"src": "214:222:11"
											},
											{
												"body": {
													"nativeSrc": "482:35:11",
													"nodeType": "YulBlock",
													"src": "482:35:11",
													"statements": [
														{
															"nativeSrc": "492:19:11",
															"nodeType": "YulAssignment",
															"src": "492:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:11",
																		"nodeType": "YulLiteral",
																		"src": "508:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:11"
																},
																"nativeSrc": "502:9:11",
																"nodeType": "YulFunctionCall",
																"src": "502:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:11",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													}
												],
												"src": "442:75:11"
											},
											{
												"body": {
													"nativeSrc": "612:28:11",
													"nodeType": "YulBlock",
													"src": "612:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:11",
																		"nodeType": "YulLiteral",
																		"src": "629:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:11",
																		"nodeType": "YulLiteral",
																		"src": "632:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:11"
																},
																"nativeSrc": "622:12:11",
																"nodeType": "YulFunctionCall",
																"src": "622:12:11"
															},
															"nativeSrc": "622:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:11"
											},
											{
												"body": {
													"nativeSrc": "735:28:11",
													"nodeType": "YulBlock",
													"src": "735:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:11",
																		"nodeType": "YulLiteral",
																		"src": "752:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:11",
																		"nodeType": "YulLiteral",
																		"src": "755:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:11"
																},
																"nativeSrc": "745:12:11",
																"nodeType": "YulFunctionCall",
																"src": "745:12:11"
															},
															"nativeSrc": "745:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:11"
											},
											{
												"body": {
													"nativeSrc": "814:81:11",
													"nodeType": "YulBlock",
													"src": "814:81:11",
													"statements": [
														{
															"nativeSrc": "824:65:11",
															"nodeType": "YulAssignment",
															"src": "824:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:11",
																		"nodeType": "YulLiteral",
																		"src": "846:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:11"
																},
																"nativeSrc": "835:54:11",
																"nodeType": "YulFunctionCall",
																"src": "835:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:11",
														"nodeType": "YulTypedName",
														"src": "796:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:11",
														"nodeType": "YulTypedName",
														"src": "806:7:11",
														"type": ""
													}
												],
												"src": "769:126:11"
											},
											{
												"body": {
													"nativeSrc": "946:51:11",
													"nodeType": "YulBlock",
													"src": "946:51:11",
													"statements": [
														{
															"nativeSrc": "956:35:11",
															"nodeType": "YulAssignment",
															"src": "956:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:11"
																},
																"nativeSrc": "967:24:11",
																"nodeType": "YulFunctionCall",
																"src": "967:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:11",
														"nodeType": "YulTypedName",
														"src": "928:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:11",
														"nodeType": "YulTypedName",
														"src": "938:7:11",
														"type": ""
													}
												],
												"src": "901:96:11"
											},
											{
												"body": {
													"nativeSrc": "1046:79:11",
													"nodeType": "YulBlock",
													"src": "1046:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:11",
																"nodeType": "YulBlock",
																"src": "1103:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:11"
																			},
																			"nativeSrc": "1105:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:11"
																		},
																		"nativeSrc": "1105:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:11"
																				},
																				"nativeSrc": "1076:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:11"
																		},
																		"nativeSrc": "1066:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:11"
																},
																"nativeSrc": "1059:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:11"
															},
															"nativeSrc": "1056:63:11",
															"nodeType": "YulIf",
															"src": "1056:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:11",
														"nodeType": "YulTypedName",
														"src": "1039:5:11",
														"type": ""
													}
												],
												"src": "1003:122:11"
											},
											{
												"body": {
													"nativeSrc": "1183:87:11",
													"nodeType": "YulBlock",
													"src": "1183:87:11",
													"statements": [
														{
															"nativeSrc": "1193:29:11",
															"nodeType": "YulAssignment",
															"src": "1193:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:11"
																},
																"nativeSrc": "1202:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:11"
																},
																"nativeSrc": "1231:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:11"
															},
															"nativeSrc": "1231:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:11",
														"nodeType": "YulTypedName",
														"src": "1161:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:11",
														"nodeType": "YulTypedName",
														"src": "1169:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:11",
														"nodeType": "YulTypedName",
														"src": "1177:5:11",
														"type": ""
													}
												],
												"src": "1131:139:11"
											},
											{
												"body": {
													"nativeSrc": "1342:263:11",
													"nodeType": "YulBlock",
													"src": "1342:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:11",
																"nodeType": "YulBlock",
																"src": "1388:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:11"
																			},
																			"nativeSrc": "1390:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:11"
																		},
																		"nativeSrc": "1390:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:11"
																		},
																		"nativeSrc": "1359:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:11"
																},
																"nativeSrc": "1355:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:11"
															},
															"nativeSrc": "1352:119:11",
															"nodeType": "YulIf",
															"src": "1352:119:11"
														},
														{
															"nativeSrc": "1481:117:11",
															"nodeType": "YulBlock",
															"src": "1481:117:11",
															"statements": [
																{
																	"nativeSrc": "1496:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:11"
																				},
																				"nativeSrc": "1556:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:11"
																		},
																		"nativeSrc": "1535:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:11",
														"nodeType": "YulTypedName",
														"src": "1312:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:11",
														"nodeType": "YulTypedName",
														"src": "1323:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:11",
														"nodeType": "YulTypedName",
														"src": "1335:6:11",
														"type": ""
													}
												],
												"src": "1276:329:11"
											},
											{
												"body": {
													"nativeSrc": "1676:53:11",
													"nodeType": "YulBlock",
													"src": "1676:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:11"
																		},
																		"nativeSrc": "1698:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:11"
																},
																"nativeSrc": "1686:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:11"
															},
															"nativeSrc": "1686:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:11",
														"nodeType": "YulTypedName",
														"src": "1664:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:11",
														"nodeType": "YulTypedName",
														"src": "1671:3:11",
														"type": ""
													}
												],
												"src": "1611:118:11"
											},
											{
												"body": {
													"nativeSrc": "1833:124:11",
													"nodeType": "YulBlock",
													"src": "1833:124:11",
													"statements": [
														{
															"nativeSrc": "1843:26:11",
															"nodeType": "YulAssignment",
															"src": "1843:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:11"
																},
																"nativeSrc": "1851:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:11"
																		},
																		"nativeSrc": "1932:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:11"
																},
																"nativeSrc": "1879:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:11"
															},
															"nativeSrc": "1879:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:11",
														"nodeType": "YulTypedName",
														"src": "1805:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:11",
														"nodeType": "YulTypedName",
														"src": "1817:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:11",
														"nodeType": "YulTypedName",
														"src": "1828:4:11",
														"type": ""
													}
												],
												"src": "1735:222:11"
											},
											{
												"body": {
													"nativeSrc": "2006:79:11",
													"nodeType": "YulBlock",
													"src": "2006:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2063:16:11",
																"nodeType": "YulBlock",
																"src": "2063:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2072:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2075:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2065:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:11"
																			},
																			"nativeSrc": "2065:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:11"
																		},
																		"nativeSrc": "2065:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2036:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:11"
																				},
																				"nativeSrc": "2036:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2026:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:11"
																		},
																		"nativeSrc": "2026:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2019:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:11"
																},
																"nativeSrc": "2019:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2019:43:11"
															},
															"nativeSrc": "2016:63:11",
															"nodeType": "YulIf",
															"src": "2016:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1963:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:11",
														"nodeType": "YulTypedName",
														"src": "1999:5:11",
														"type": ""
													}
												],
												"src": "1963:122:11"
											},
											{
												"body": {
													"nativeSrc": "2143:87:11",
													"nodeType": "YulBlock",
													"src": "2143:87:11",
													"statements": [
														{
															"nativeSrc": "2153:29:11",
															"nodeType": "YulAssignment",
															"src": "2153:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2162:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:11"
																},
																"nativeSrc": "2162:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2162:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2153:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2218:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2191:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:11"
																},
																"nativeSrc": "2191:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2191:33:11"
															},
															"nativeSrc": "2191:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2091:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2121:6:11",
														"nodeType": "YulTypedName",
														"src": "2121:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2129:3:11",
														"nodeType": "YulTypedName",
														"src": "2129:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2137:5:11",
														"nodeType": "YulTypedName",
														"src": "2137:5:11",
														"type": ""
													}
												],
												"src": "2091:139:11"
											},
											{
												"body": {
													"nativeSrc": "2302:263:11",
													"nodeType": "YulBlock",
													"src": "2302:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2348:83:11",
																"nodeType": "YulBlock",
																"src": "2348:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2350:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:11"
																			},
																			"nativeSrc": "2350:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:11"
																		},
																		"nativeSrc": "2350:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2323:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2319:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:11"
																		},
																		"nativeSrc": "2319:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2315:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:11"
																},
																"nativeSrc": "2315:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2315:32:11"
															},
															"nativeSrc": "2312:119:11",
															"nodeType": "YulIf",
															"src": "2312:119:11"
														},
														{
															"nativeSrc": "2441:117:11",
															"nodeType": "YulBlock",
															"src": "2441:117:11",
															"statements": [
																{
																	"nativeSrc": "2456:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2470:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2460:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2485:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2485:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2520:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2531:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2516:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:11"
																				},
																				"nativeSrc": "2516:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2540:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2495:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:11"
																		},
																		"nativeSrc": "2495:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2485:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2236:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2272:9:11",
														"nodeType": "YulTypedName",
														"src": "2272:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2283:7:11",
														"nodeType": "YulTypedName",
														"src": "2283:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2295:6:11",
														"nodeType": "YulTypedName",
														"src": "2295:6:11",
														"type": ""
													}
												],
												"src": "2236:329:11"
											},
											{
												"body": {
													"nativeSrc": "2654:391:11",
													"nodeType": "YulBlock",
													"src": "2654:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2700:83:11",
																"nodeType": "YulBlock",
																"src": "2700:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2702:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2702:77:11"
																			},
																			"nativeSrc": "2702:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2702:79:11"
																		},
																		"nativeSrc": "2702:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2675:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2684:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2671:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:11"
																		},
																		"nativeSrc": "2671:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2667:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:11"
																},
																"nativeSrc": "2667:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2667:32:11"
															},
															"nativeSrc": "2664:119:11",
															"nodeType": "YulIf",
															"src": "2664:119:11"
														},
														{
															"nativeSrc": "2793:117:11",
															"nodeType": "YulBlock",
															"src": "2793:117:11",
															"statements": [
																{
																	"nativeSrc": "2808:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2808:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2822:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2812:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2812:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2837:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2837:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2872:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2883:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2883:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2868:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2868:3:11"
																				},
																				"nativeSrc": "2868:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2892:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2892:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2847:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2847:20:11"
																		},
																		"nativeSrc": "2847:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2847:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2837:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2837:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2920:118:11",
															"nodeType": "YulBlock",
															"src": "2920:118:11",
															"statements": [
																{
																	"nativeSrc": "2935:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2935:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2949:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2939:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2939:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:11"
																				},
																				"nativeSrc": "2996:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2975:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:11"
																		},
																		"nativeSrc": "2975:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2965:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2571:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2616:9:11",
														"nodeType": "YulTypedName",
														"src": "2616:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2627:7:11",
														"nodeType": "YulTypedName",
														"src": "2627:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2639:6:11",
														"nodeType": "YulTypedName",
														"src": "2639:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2647:6:11",
														"nodeType": "YulTypedName",
														"src": "2647:6:11",
														"type": ""
													}
												],
												"src": "2571:474:11"
											},
											{
												"body": {
													"nativeSrc": "3083:28:11",
													"nodeType": "YulBlock",
													"src": "3083:28:11",
													"statements": [
														{
															"nativeSrc": "3093:12:11",
															"nodeType": "YulAssignment",
															"src": "3093:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3100:5:11",
																"nodeType": "YulIdentifier",
																"src": "3100:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3093:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3051:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3069:5:11",
														"nodeType": "YulTypedName",
														"src": "3069:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3079:3:11",
														"nodeType": "YulTypedName",
														"src": "3079:3:11",
														"type": ""
													}
												],
												"src": "3051:60:11"
											},
											{
												"body": {
													"nativeSrc": "3177:82:11",
													"nodeType": "YulBlock",
													"src": "3177:82:11",
													"statements": [
														{
															"nativeSrc": "3187:66:11",
															"nodeType": "YulAssignment",
															"src": "3187:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3245:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3245:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3227:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3227:17:11"
																				},
																				"nativeSrc": "3227:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3227:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3218:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3218:8:11"
																		},
																		"nativeSrc": "3218:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3218:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3200:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3200:17:11"
																},
																"nativeSrc": "3200:53:11",
																"nodeType": "YulFunctionCall",
																"src": "3200:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3187:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3187:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3117:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3157:5:11",
														"nodeType": "YulTypedName",
														"src": "3157:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3167:9:11",
														"nodeType": "YulTypedName",
														"src": "3167:9:11",
														"type": ""
													}
												],
												"src": "3117:142:11"
											},
											{
												"body": {
													"nativeSrc": "3325:66:11",
													"nodeType": "YulBlock",
													"src": "3325:66:11",
													"statements": [
														{
															"nativeSrc": "3335:50:11",
															"nodeType": "YulAssignment",
															"src": "3335:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3379:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3379:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3348:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3348:30:11"
																},
																"nativeSrc": "3348:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3348:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3335:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3335:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3265:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3305:5:11",
														"nodeType": "YulTypedName",
														"src": "3305:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3315:9:11",
														"nodeType": "YulTypedName",
														"src": "3315:9:11",
														"type": ""
													}
												],
												"src": "3265:126:11"
											},
											{
												"body": {
													"nativeSrc": "3485:66:11",
													"nodeType": "YulBlock",
													"src": "3485:66:11",
													"statements": [
														{
															"nativeSrc": "3495:50:11",
															"nodeType": "YulAssignment",
															"src": "3495:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3539:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3539:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3508:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3508:30:11"
																},
																"nativeSrc": "3508:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3508:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3495:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3495:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "3397:154:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3465:5:11",
														"nodeType": "YulTypedName",
														"src": "3465:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3475:9:11",
														"nodeType": "YulTypedName",
														"src": "3475:9:11",
														"type": ""
													}
												],
												"src": "3397:154:11"
											},
											{
												"body": {
													"nativeSrc": "3650:94:11",
													"nodeType": "YulBlock",
													"src": "3650:94:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3667:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3667:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3731:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3731:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "3672:58:11",
																			"nodeType": "YulIdentifier",
																			"src": "3672:58:11"
																		},
																		"nativeSrc": "3672:65:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3672:65:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:11"
																},
																"nativeSrc": "3660:78:11",
																"nodeType": "YulFunctionCall",
																"src": "3660:78:11"
															},
															"nativeSrc": "3660:78:11",
															"nodeType": "YulExpressionStatement",
															"src": "3660:78:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "3557:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3638:5:11",
														"nodeType": "YulTypedName",
														"src": "3638:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3645:3:11",
														"nodeType": "YulTypedName",
														"src": "3645:3:11",
														"type": ""
													}
												],
												"src": "3557:187:11"
											},
											{
												"body": {
													"nativeSrc": "3876:152:11",
													"nodeType": "YulBlock",
													"src": "3876:152:11",
													"statements": [
														{
															"nativeSrc": "3886:26:11",
															"nodeType": "YulAssignment",
															"src": "3886:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3898:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3898:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3909:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3909:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3894:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3894:3:11"
																},
																"nativeSrc": "3894:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3894:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3886:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3886:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3994:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3994:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4007:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4007:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4018:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4018:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4003:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:11"
																		},
																		"nativeSrc": "4003:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4003:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "3922:71:11",
																	"nodeType": "YulIdentifier",
																	"src": "3922:71:11"
																},
																"nativeSrc": "3922:99:11",
																"nodeType": "YulFunctionCall",
																"src": "3922:99:11"
															},
															"nativeSrc": "3922:99:11",
															"nodeType": "YulExpressionStatement",
															"src": "3922:99:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "3750:278:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3848:9:11",
														"nodeType": "YulTypedName",
														"src": "3848:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3860:6:11",
														"nodeType": "YulTypedName",
														"src": "3860:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3871:4:11",
														"nodeType": "YulTypedName",
														"src": "3871:4:11",
														"type": ""
													}
												],
												"src": "3750:278:11"
											},
											{
												"body": {
													"nativeSrc": "4108:66:11",
													"nodeType": "YulBlock",
													"src": "4108:66:11",
													"statements": [
														{
															"nativeSrc": "4118:50:11",
															"nodeType": "YulAssignment",
															"src": "4118:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4162:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4162:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4131:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "4131:30:11"
																},
																"nativeSrc": "4131:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4131:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4118:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4118:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$426_to_t_address",
												"nativeSrc": "4034:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4088:5:11",
														"nodeType": "YulTypedName",
														"src": "4088:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4098:9:11",
														"nodeType": "YulTypedName",
														"src": "4098:9:11",
														"type": ""
													}
												],
												"src": "4034:140:11"
											},
											{
												"body": {
													"nativeSrc": "4259:80:11",
													"nodeType": "YulBlock",
													"src": "4259:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4276:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4276:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4326:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4326:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$426_to_t_address",
																			"nativeSrc": "4281:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "4281:44:11"
																		},
																		"nativeSrc": "4281:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4281:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4269:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:11"
																},
																"nativeSrc": "4269:64:11",
																"nodeType": "YulFunctionCall",
																"src": "4269:64:11"
															},
															"nativeSrc": "4269:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "4269:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$426_to_t_address_fromStack",
												"nativeSrc": "4180:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4247:5:11",
														"nodeType": "YulTypedName",
														"src": "4247:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4254:3:11",
														"nodeType": "YulTypedName",
														"src": "4254:3:11",
														"type": ""
													}
												],
												"src": "4180:159:11"
											},
											{
												"body": {
													"nativeSrc": "4457:138:11",
													"nodeType": "YulBlock",
													"src": "4457:138:11",
													"statements": [
														{
															"nativeSrc": "4467:26:11",
															"nodeType": "YulAssignment",
															"src": "4467:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4479:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:11"
																},
																"nativeSrc": "4475:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4475:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4467:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4561:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4561:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4574:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4574:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4585:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4585:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4570:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4570:3:11"
																		},
																		"nativeSrc": "4570:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4570:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$426_to_t_address_fromStack",
																	"nativeSrc": "4503:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "4503:57:11"
																},
																"nativeSrc": "4503:85:11",
																"nodeType": "YulFunctionCall",
																"src": "4503:85:11"
															},
															"nativeSrc": "4503:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "4503:85:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$426__to_t_address__fromStack_reversed",
												"nativeSrc": "4345:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4429:9:11",
														"nodeType": "YulTypedName",
														"src": "4429:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4441:6:11",
														"nodeType": "YulTypedName",
														"src": "4441:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4452:4:11",
														"nodeType": "YulTypedName",
														"src": "4452:4:11",
														"type": ""
													}
												],
												"src": "4345:250:11"
											},
											{
												"body": {
													"nativeSrc": "4664:80:11",
													"nodeType": "YulBlock",
													"src": "4664:80:11",
													"statements": [
														{
															"nativeSrc": "4674:22:11",
															"nodeType": "YulAssignment",
															"src": "4674:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4689:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4689:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4683:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4683:5:11"
																},
																"nativeSrc": "4683:13:11",
																"nodeType": "YulFunctionCall",
																"src": "4683:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4674:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4674:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4732:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4732:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4705:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "4705:26:11"
																},
																"nativeSrc": "4705:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4705:33:11"
															},
															"nativeSrc": "4705:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4705:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4601:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4642:6:11",
														"nodeType": "YulTypedName",
														"src": "4642:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4650:3:11",
														"nodeType": "YulTypedName",
														"src": "4650:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4658:5:11",
														"nodeType": "YulTypedName",
														"src": "4658:5:11",
														"type": ""
													}
												],
												"src": "4601:143:11"
											},
											{
												"body": {
													"nativeSrc": "4827:274:11",
													"nodeType": "YulBlock",
													"src": "4827:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4873:83:11",
																"nodeType": "YulBlock",
																"src": "4873:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4875:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4875:77:11"
																			},
																			"nativeSrc": "4875:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4875:79:11"
																		},
																		"nativeSrc": "4875:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4875:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4848:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4848:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4857:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4857:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4844:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4844:3:11"
																		},
																		"nativeSrc": "4844:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4844:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4869:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4869:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4840:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4840:3:11"
																},
																"nativeSrc": "4840:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4840:32:11"
															},
															"nativeSrc": "4837:119:11",
															"nodeType": "YulIf",
															"src": "4837:119:11"
														},
														{
															"nativeSrc": "4966:128:11",
															"nodeType": "YulBlock",
															"src": "4966:128:11",
															"statements": [
																{
																	"nativeSrc": "4981:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4981:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4995:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4995:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4985:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4985:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5010:74:11",
																	"nodeType": "YulAssignment",
																	"src": "5010:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5056:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5056:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5067:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5067:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5052:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5052:3:11"
																				},
																				"nativeSrc": "5052:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5052:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5076:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5076:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5020:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "5020:31:11"
																		},
																		"nativeSrc": "5020:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5020:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5010:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5010:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4750:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4797:9:11",
														"nodeType": "YulTypedName",
														"src": "4797:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4808:7:11",
														"nodeType": "YulTypedName",
														"src": "4808:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4820:6:11",
														"nodeType": "YulTypedName",
														"src": "4820:6:11",
														"type": ""
													}
												],
												"src": "4750:351:11"
											},
											{
												"body": {
													"nativeSrc": "5135:152:11",
													"nodeType": "YulBlock",
													"src": "5135:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5152:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5152:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5155:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5155:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5145:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5145:6:11"
																},
																"nativeSrc": "5145:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5145:88:11"
															},
															"nativeSrc": "5145:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5145:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5249:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5249:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5252:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5252:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:11"
																},
																"nativeSrc": "5242:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5242:15:11"
															},
															"nativeSrc": "5242:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5242:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5273:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5273:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5276:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5276:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5266:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:11"
																},
																"nativeSrc": "5266:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5266:15:11"
															},
															"nativeSrc": "5266:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5266:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5107:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5107:180:11"
											},
											{
												"body": {
													"nativeSrc": "5337:147:11",
													"nodeType": "YulBlock",
													"src": "5337:147:11",
													"statements": [
														{
															"nativeSrc": "5347:25:11",
															"nodeType": "YulAssignment",
															"src": "5347:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5370:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5370:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5352:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5352:17:11"
																},
																"nativeSrc": "5352:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5352:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5347:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5347:1:11"
																}
															]
														},
														{
															"nativeSrc": "5381:25:11",
															"nodeType": "YulAssignment",
															"src": "5381:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5404:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5404:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5386:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5386:17:11"
																},
																"nativeSrc": "5386:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5386:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5381:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5381:1:11"
																}
															]
														},
														{
															"nativeSrc": "5415:16:11",
															"nodeType": "YulAssignment",
															"src": "5415:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5426:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5426:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5429:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5429:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5422:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5422:3:11"
																},
																"nativeSrc": "5422:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5422:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5415:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5455:22:11",
																"nodeType": "YulBlock",
																"src": "5455:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5457:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5457:16:11"
																			},
																			"nativeSrc": "5457:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5457:18:11"
																		},
																		"nativeSrc": "5457:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5457:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5447:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5447:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5450:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5450:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5444:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5444:2:11"
																},
																"nativeSrc": "5444:10:11",
																"nodeType": "YulFunctionCall",
																"src": "5444:10:11"
															},
															"nativeSrc": "5441:36:11",
															"nodeType": "YulIf",
															"src": "5441:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5293:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5324:1:11",
														"nodeType": "YulTypedName",
														"src": "5324:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5327:1:11",
														"nodeType": "YulTypedName",
														"src": "5327:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5333:3:11",
														"nodeType": "YulTypedName",
														"src": "5333:3:11",
														"type": ""
													}
												],
												"src": "5293:191:11"
											},
											{
												"body": {
													"nativeSrc": "5586:73:11",
													"nodeType": "YulBlock",
													"src": "5586:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5603:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5603:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5608:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5608:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5596:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5596:6:11"
																},
																"nativeSrc": "5596:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5596:19:11"
															},
															"nativeSrc": "5596:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "5596:19:11"
														},
														{
															"nativeSrc": "5624:29:11",
															"nodeType": "YulAssignment",
															"src": "5624:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5643:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5643:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5648:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5648:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5639:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5639:3:11"
																},
																"nativeSrc": "5639:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5639:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5624:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "5624:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5490:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5558:3:11",
														"nodeType": "YulTypedName",
														"src": "5558:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5563:6:11",
														"nodeType": "YulTypedName",
														"src": "5563:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5574:11:11",
														"nodeType": "YulTypedName",
														"src": "5574:11:11",
														"type": ""
													}
												],
												"src": "5490:169:11"
											},
											{
												"body": {
													"nativeSrc": "5771:64:11",
													"nodeType": "YulBlock",
													"src": "5771:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5793:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5793:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5801:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5801:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:11"
																		},
																		"nativeSrc": "5789:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5805:22:11",
																		"nodeType": "YulLiteral",
																		"src": "5805:22:11",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5782:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5782:6:11"
																},
																"nativeSrc": "5782:46:11",
																"nodeType": "YulFunctionCall",
																"src": "5782:46:11"
															},
															"nativeSrc": "5782:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "5782:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "5665:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5763:6:11",
														"nodeType": "YulTypedName",
														"src": "5763:6:11",
														"type": ""
													}
												],
												"src": "5665:170:11"
											},
											{
												"body": {
													"nativeSrc": "5987:220:11",
													"nodeType": "YulBlock",
													"src": "5987:220:11",
													"statements": [
														{
															"nativeSrc": "5997:74:11",
															"nodeType": "YulAssignment",
															"src": "5997:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6063:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6063:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6068:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6004:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6004:58:11"
																},
																"nativeSrc": "6004:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6004:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5997:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6169:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6169:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "6080:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6080:88:11"
																},
																"nativeSrc": "6080:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6080:93:11"
															},
															"nativeSrc": "6080:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6080:93:11"
														},
														{
															"nativeSrc": "6182:19:11",
															"nodeType": "YulAssignment",
															"src": "6182:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6193:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6193:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6198:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6189:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6189:3:11"
																},
																"nativeSrc": "6189:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6189:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6182:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6182:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5841:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5975:3:11",
														"nodeType": "YulTypedName",
														"src": "5975:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5983:3:11",
														"nodeType": "YulTypedName",
														"src": "5983:3:11",
														"type": ""
													}
												],
												"src": "5841:366:11"
											},
											{
												"body": {
													"nativeSrc": "6440:412:11",
													"nodeType": "YulBlock",
													"src": "6440:412:11",
													"statements": [
														{
															"nativeSrc": "6450:26:11",
															"nodeType": "YulAssignment",
															"src": "6450:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6462:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6462:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6473:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6458:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:11"
																},
																"nativeSrc": "6458:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6458:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6450:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6450:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6530:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6543:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6543:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6554:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6554:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6539:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6539:3:11"
																		},
																		"nativeSrc": "6539:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6539:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6486:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6486:43:11"
																},
																"nativeSrc": "6486:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6486:71:11"
															},
															"nativeSrc": "6486:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6486:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6611:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6611:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6624:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6624:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6635:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6635:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6620:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:11"
																		},
																		"nativeSrc": "6620:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6567:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6567:43:11"
																},
																"nativeSrc": "6567:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6567:72:11"
															},
															"nativeSrc": "6567:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6567:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6660:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6671:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6656:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:11"
																		},
																		"nativeSrc": "6656:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6680:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6680:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6686:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6686:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6676:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6676:3:11"
																		},
																		"nativeSrc": "6676:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6676:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6649:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:11"
																},
																"nativeSrc": "6649:48:11",
																"nodeType": "YulFunctionCall",
																"src": "6649:48:11"
															},
															"nativeSrc": "6649:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "6649:48:11"
														},
														{
															"nativeSrc": "6706:139:11",
															"nodeType": "YulAssignment",
															"src": "6706:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6840:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6840:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6714:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6714:124:11"
																},
																"nativeSrc": "6714:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6714:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6706:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6213:639:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6404:9:11",
														"nodeType": "YulTypedName",
														"src": "6404:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6416:6:11",
														"nodeType": "YulTypedName",
														"src": "6416:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6424:6:11",
														"nodeType": "YulTypedName",
														"src": "6424:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6435:4:11",
														"nodeType": "YulTypedName",
														"src": "6435:4:11",
														"type": ""
													}
												],
												"src": "6213:639:11"
											},
											{
												"body": {
													"nativeSrc": "6903:149:11",
													"nodeType": "YulBlock",
													"src": "6903:149:11",
													"statements": [
														{
															"nativeSrc": "6913:25:11",
															"nodeType": "YulAssignment",
															"src": "6913:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6936:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6936:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6918:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6918:17:11"
																},
																"nativeSrc": "6918:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6918:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6913:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "6913:1:11"
																}
															]
														},
														{
															"nativeSrc": "6947:25:11",
															"nodeType": "YulAssignment",
															"src": "6947:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6970:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6970:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6952:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6952:17:11"
																},
																"nativeSrc": "6952:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6952:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6947:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "6947:1:11"
																}
															]
														},
														{
															"nativeSrc": "6981:17:11",
															"nodeType": "YulAssignment",
															"src": "6981:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6993:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6993:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6996:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6996:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6989:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:11"
																},
																"nativeSrc": "6989:9:11",
																"nodeType": "YulFunctionCall",
																"src": "6989:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6981:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6981:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7023:22:11",
																"nodeType": "YulBlock",
																"src": "7023:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7025:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7025:16:11"
																			},
																			"nativeSrc": "7025:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7025:18:11"
																		},
																		"nativeSrc": "7025:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7025:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7014:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7014:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7020:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7020:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7011:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7011:2:11"
																},
																"nativeSrc": "7011:11:11",
																"nodeType": "YulFunctionCall",
																"src": "7011:11:11"
															},
															"nativeSrc": "7008:37:11",
															"nodeType": "YulIf",
															"src": "7008:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6858:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6889:1:11",
														"nodeType": "YulTypedName",
														"src": "6889:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6892:1:11",
														"nodeType": "YulTypedName",
														"src": "6892:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6898:4:11",
														"nodeType": "YulTypedName",
														"src": "6898:4:11",
														"type": ""
													}
												],
												"src": "6858:194:11"
											},
											{
												"body": {
													"nativeSrc": "7101:190:11",
													"nodeType": "YulBlock",
													"src": "7101:190:11",
													"statements": [
														{
															"nativeSrc": "7111:33:11",
															"nodeType": "YulAssignment",
															"src": "7111:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7138:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7138:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7120:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7120:17:11"
																},
																"nativeSrc": "7120:24:11",
																"nodeType": "YulFunctionCall",
																"src": "7120:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7111:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7111:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7234:22:11",
																"nodeType": "YulBlock",
																"src": "7234:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7236:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7236:16:11"
																			},
																			"nativeSrc": "7236:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7236:18:11"
																		},
																		"nativeSrc": "7236:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7236:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7159:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7159:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7166:66:11",
																		"nodeType": "YulLiteral",
																		"src": "7166:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7156:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7156:2:11"
																},
																"nativeSrc": "7156:77:11",
																"nodeType": "YulFunctionCall",
																"src": "7156:77:11"
															},
															"nativeSrc": "7153:103:11",
															"nodeType": "YulIf",
															"src": "7153:103:11"
														},
														{
															"nativeSrc": "7265:20:11",
															"nodeType": "YulAssignment",
															"src": "7265:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7276:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7276:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7283:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7283:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7272:3:11"
																},
																"nativeSrc": "7272:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7272:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7265:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7265:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7058:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7087:5:11",
														"nodeType": "YulTypedName",
														"src": "7087:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7097:3:11",
														"nodeType": "YulTypedName",
														"src": "7097:3:11",
														"type": ""
													}
												],
												"src": "7058:233:11"
											},
											{
												"body": {
													"nativeSrc": "7423:206:11",
													"nodeType": "YulBlock",
													"src": "7423:206:11",
													"statements": [
														{
															"nativeSrc": "7433:26:11",
															"nodeType": "YulAssignment",
															"src": "7433:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7445:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7456:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7441:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7441:3:11"
																},
																"nativeSrc": "7441:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7441:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7433:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7433:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7513:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7513:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7526:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7526:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7537:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7537:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7522:3:11"
																		},
																		"nativeSrc": "7522:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7522:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7469:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7469:43:11"
																},
																"nativeSrc": "7469:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7469:71:11"
															},
															"nativeSrc": "7469:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7469:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7594:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7594:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7607:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7607:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7618:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7603:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:11"
																		},
																		"nativeSrc": "7603:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7603:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7550:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7550:43:11"
																},
																"nativeSrc": "7550:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7550:72:11"
															},
															"nativeSrc": "7550:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7550:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7297:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7387:9:11",
														"nodeType": "YulTypedName",
														"src": "7387:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7399:6:11",
														"nodeType": "YulTypedName",
														"src": "7399:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7407:6:11",
														"nodeType": "YulTypedName",
														"src": "7407:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7418:4:11",
														"nodeType": "YulTypedName",
														"src": "7418:4:11",
														"type": ""
													}
												],
												"src": "7297:332:11"
											},
											{
												"body": {
													"nativeSrc": "7741:115:11",
													"nodeType": "YulBlock",
													"src": "7741:115:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7763:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7763:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7771:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7771:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7759:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7759:3:11"
																		},
																		"nativeSrc": "7759:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7759:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20302e30312045",
																		"kind": "string",
																		"nativeSrc": "7775:34:11",
																		"nodeType": "YulLiteral",
																		"src": "7775:34:11",
																		"type": "",
																		"value": "Cannot withdraw more than 0.01 E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7752:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7752:6:11"
																},
																"nativeSrc": "7752:58:11",
																"nodeType": "YulFunctionCall",
																"src": "7752:58:11"
															},
															"nativeSrc": "7752:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "7752:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7831:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7831:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7839:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7839:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7827:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7827:3:11"
																		},
																		"nativeSrc": "7827:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7827:15:11"
																	},
																	{
																		"hexValue": "5448",
																		"kind": "string",
																		"nativeSrc": "7844:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7844:4:11",
																		"type": "",
																		"value": "TH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7820:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:11"
																},
																"nativeSrc": "7820:29:11",
																"nodeType": "YulFunctionCall",
																"src": "7820:29:11"
															},
															"nativeSrc": "7820:29:11",
															"nodeType": "YulExpressionStatement",
															"src": "7820:29:11"
														}
													]
												},
												"name": "store_literal_in_memory_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d",
												"nativeSrc": "7635:221:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7733:6:11",
														"nodeType": "YulTypedName",
														"src": "7733:6:11",
														"type": ""
													}
												],
												"src": "7635:221:11"
											},
											{
												"body": {
													"nativeSrc": "8008:220:11",
													"nodeType": "YulBlock",
													"src": "8008:220:11",
													"statements": [
														{
															"nativeSrc": "8018:74:11",
															"nodeType": "YulAssignment",
															"src": "8018:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8084:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8089:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8089:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8025:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8025:58:11"
																},
																"nativeSrc": "8025:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8025:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8018:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8190:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8190:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d",
																	"nativeSrc": "8101:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8101:88:11"
																},
																"nativeSrc": "8101:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8101:93:11"
															},
															"nativeSrc": "8101:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8101:93:11"
														},
														{
															"nativeSrc": "8203:19:11",
															"nodeType": "YulAssignment",
															"src": "8203:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8214:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8214:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8219:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8219:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8210:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8210:3:11"
																},
																"nativeSrc": "8210:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8210:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8203:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8203:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7862:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7996:3:11",
														"nodeType": "YulTypedName",
														"src": "7996:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8004:3:11",
														"nodeType": "YulTypedName",
														"src": "8004:3:11",
														"type": ""
													}
												],
												"src": "7862:366:11"
											},
											{
												"body": {
													"nativeSrc": "8461:412:11",
													"nodeType": "YulBlock",
													"src": "8461:412:11",
													"statements": [
														{
															"nativeSrc": "8471:26:11",
															"nodeType": "YulAssignment",
															"src": "8471:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8483:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8483:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8494:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8494:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8479:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8479:3:11"
																},
																"nativeSrc": "8479:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8479:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8471:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8471:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8551:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8551:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8564:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8564:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8575:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8575:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8560:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:11"
																		},
																		"nativeSrc": "8560:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8560:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8507:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8507:43:11"
																},
																"nativeSrc": "8507:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8507:71:11"
															},
															"nativeSrc": "8507:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8507:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8632:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8632:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8645:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8645:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8656:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8656:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8641:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8641:3:11"
																		},
																		"nativeSrc": "8641:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8641:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8588:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8588:43:11"
																},
																"nativeSrc": "8588:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8588:72:11"
															},
															"nativeSrc": "8588:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8588:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8681:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8692:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8692:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8677:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8677:3:11"
																		},
																		"nativeSrc": "8677:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8677:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8701:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8701:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8707:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8697:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8697:3:11"
																		},
																		"nativeSrc": "8697:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8697:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8670:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:11"
																},
																"nativeSrc": "8670:48:11",
																"nodeType": "YulFunctionCall",
																"src": "8670:48:11"
															},
															"nativeSrc": "8670:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "8670:48:11"
														},
														{
															"nativeSrc": "8727:139:11",
															"nodeType": "YulAssignment",
															"src": "8727:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8861:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8861:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8735:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8735:124:11"
																},
																"nativeSrc": "8735:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8735:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8727:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8727:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8234:639:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8425:9:11",
														"nodeType": "YulTypedName",
														"src": "8425:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8437:6:11",
														"nodeType": "YulTypedName",
														"src": "8437:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8445:6:11",
														"nodeType": "YulTypedName",
														"src": "8445:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8456:4:11",
														"nodeType": "YulTypedName",
														"src": "8456:4:11",
														"type": ""
													}
												],
												"src": "8234:639:11"
											},
											{
												"body": {
													"nativeSrc": "8992:34:11",
													"nodeType": "YulBlock",
													"src": "8992:34:11",
													"statements": [
														{
															"nativeSrc": "9002:18:11",
															"nodeType": "YulAssignment",
															"src": "9002:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "9017:3:11",
																"nodeType": "YulIdentifier",
																"src": "9017:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9002:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "9002:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8879:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8964:3:11",
														"nodeType": "YulTypedName",
														"src": "8964:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8969:6:11",
														"nodeType": "YulTypedName",
														"src": "8969:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8980:11:11",
														"nodeType": "YulTypedName",
														"src": "8980:11:11",
														"type": ""
													}
												],
												"src": "8879:147:11"
											},
											{
												"body": {
													"nativeSrc": "9138:8:11",
													"nodeType": "YulBlock",
													"src": "9138:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "9032:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9130:6:11",
														"nodeType": "YulTypedName",
														"src": "9130:6:11",
														"type": ""
													}
												],
												"src": "9032:114:11"
											},
											{
												"body": {
													"nativeSrc": "9315:235:11",
													"nodeType": "YulBlock",
													"src": "9315:235:11",
													"statements": [
														{
															"nativeSrc": "9325:90:11",
															"nodeType": "YulAssignment",
															"src": "9325:90:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9408:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9408:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9413:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9332:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "9332:75:11"
																},
																"nativeSrc": "9332:83:11",
																"nodeType": "YulFunctionCall",
																"src": "9332:83:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9325:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9325:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9513:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9513:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "9424:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9424:88:11"
																},
																"nativeSrc": "9424:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9424:93:11"
															},
															"nativeSrc": "9424:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9424:93:11"
														},
														{
															"nativeSrc": "9526:18:11",
															"nodeType": "YulAssignment",
															"src": "9526:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9537:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9537:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9542:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9533:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9533:3:11"
																},
																"nativeSrc": "9533:11:11",
																"nodeType": "YulFunctionCall",
																"src": "9533:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9526:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9152:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9303:3:11",
														"nodeType": "YulTypedName",
														"src": "9303:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9311:3:11",
														"nodeType": "YulTypedName",
														"src": "9311:3:11",
														"type": ""
													}
												],
												"src": "9152:398:11"
											},
											{
												"body": {
													"nativeSrc": "9744:191:11",
													"nodeType": "YulBlock",
													"src": "9744:191:11",
													"statements": [
														{
															"nativeSrc": "9755:154:11",
															"nodeType": "YulAssignment",
															"src": "9755:154:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9905:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9905:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9762:141:11",
																	"nodeType": "YulIdentifier",
																	"src": "9762:141:11"
																},
																"nativeSrc": "9762:147:11",
																"nodeType": "YulFunctionCall",
																"src": "9762:147:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9755:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9755:3:11"
																}
															]
														},
														{
															"nativeSrc": "9919:10:11",
															"nodeType": "YulAssignment",
															"src": "9919:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "9926:3:11",
																"nodeType": "YulIdentifier",
																"src": "9926:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9919:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9919:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9556:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9731:3:11",
														"nodeType": "YulTypedName",
														"src": "9731:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9740:3:11",
														"nodeType": "YulTypedName",
														"src": "9740:3:11",
														"type": ""
													}
												],
												"src": "9556:379:11"
											},
											{
												"body": {
													"nativeSrc": "10047:61:11",
													"nodeType": "YulBlock",
													"src": "10047:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10069:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10069:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10077:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10077:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10065:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10065:3:11"
																		},
																		"nativeSrc": "10065:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10065:14:11"
																	},
																	{
																		"hexValue": "5769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "10081:19:11",
																		"nodeType": "YulLiteral",
																		"src": "10081:19:11",
																		"type": "",
																		"value": "Withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10058:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:11"
																},
																"nativeSrc": "10058:43:11",
																"nodeType": "YulFunctionCall",
																"src": "10058:43:11"
															},
															"nativeSrc": "10058:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "10058:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
												"nativeSrc": "9941:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10039:6:11",
														"nodeType": "YulTypedName",
														"src": "10039:6:11",
														"type": ""
													}
												],
												"src": "9941:167:11"
											},
											{
												"body": {
													"nativeSrc": "10260:220:11",
													"nodeType": "YulBlock",
													"src": "10260:220:11",
													"statements": [
														{
															"nativeSrc": "10270:74:11",
															"nodeType": "YulAssignment",
															"src": "10270:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10336:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10336:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10341:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10341:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10277:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10277:58:11"
																},
																"nativeSrc": "10277:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10277:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10270:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10270:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10442:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10442:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																	"nativeSrc": "10353:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10353:88:11"
																},
																"nativeSrc": "10353:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10353:93:11"
															},
															"nativeSrc": "10353:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10353:93:11"
														},
														{
															"nativeSrc": "10455:19:11",
															"nodeType": "YulAssignment",
															"src": "10455:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10466:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10466:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10471:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10471:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10462:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10462:3:11"
																},
																"nativeSrc": "10462:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10462:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10455:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10455:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10114:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10248:3:11",
														"nodeType": "YulTypedName",
														"src": "10248:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10256:3:11",
														"nodeType": "YulTypedName",
														"src": "10256:3:11",
														"type": ""
													}
												],
												"src": "10114:366:11"
											},
											{
												"body": {
													"nativeSrc": "10657:248:11",
													"nodeType": "YulBlock",
													"src": "10657:248:11",
													"statements": [
														{
															"nativeSrc": "10667:26:11",
															"nodeType": "YulAssignment",
															"src": "10667:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10679:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10679:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10690:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10690:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10675:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10675:3:11"
																},
																"nativeSrc": "10675:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10675:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10667:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10667:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10714:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10714:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10725:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10725:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10710:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10710:3:11"
																		},
																		"nativeSrc": "10710:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10710:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10733:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10733:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10739:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10739:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10729:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:11"
																		},
																		"nativeSrc": "10729:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10703:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10703:6:11"
																},
																"nativeSrc": "10703:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10703:47:11"
															},
															"nativeSrc": "10703:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10703:47:11"
														},
														{
															"nativeSrc": "10759:139:11",
															"nodeType": "YulAssignment",
															"src": "10759:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10893:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10893:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10767:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10767:124:11"
																},
																"nativeSrc": "10767:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10767:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10759:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10759:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10486:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10637:9:11",
														"nodeType": "YulTypedName",
														"src": "10637:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10652:4:11",
														"nodeType": "YulTypedName",
														"src": "10652:4:11",
														"type": ""
													}
												],
												"src": "10486:419:11"
											},
											{
												"body": {
													"nativeSrc": "11017:64:11",
													"nodeType": "YulBlock",
													"src": "11017:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11039:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11039:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11047:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11047:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11035:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11035:3:11"
																		},
																		"nativeSrc": "11035:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11035:14:11"
																	},
																	{
																		"hexValue": "476c6f62616c206c696d69742072656163686564",
																		"kind": "string",
																		"nativeSrc": "11051:22:11",
																		"nodeType": "YulLiteral",
																		"src": "11051:22:11",
																		"type": "",
																		"value": "Global limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11028:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11028:6:11"
																},
																"nativeSrc": "11028:46:11",
																"nodeType": "YulFunctionCall",
																"src": "11028:46:11"
															},
															"nativeSrc": "11028:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "11028:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51",
												"nativeSrc": "10911:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11009:6:11",
														"nodeType": "YulTypedName",
														"src": "11009:6:11",
														"type": ""
													}
												],
												"src": "10911:170:11"
											},
											{
												"body": {
													"nativeSrc": "11233:220:11",
													"nodeType": "YulBlock",
													"src": "11233:220:11",
													"statements": [
														{
															"nativeSrc": "11243:74:11",
															"nodeType": "YulAssignment",
															"src": "11243:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11309:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11309:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11314:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11314:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11250:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11250:58:11"
																},
																"nativeSrc": "11250:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11250:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11243:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11243:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11415:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11415:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51",
																	"nativeSrc": "11326:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11326:88:11"
																},
																"nativeSrc": "11326:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11326:93:11"
															},
															"nativeSrc": "11326:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11326:93:11"
														},
														{
															"nativeSrc": "11428:19:11",
															"nodeType": "YulAssignment",
															"src": "11428:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11439:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11439:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11444:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11444:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11435:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11435:3:11"
																},
																"nativeSrc": "11435:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11435:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11428:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11428:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11087:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11221:3:11",
														"nodeType": "YulTypedName",
														"src": "11221:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11229:3:11",
														"nodeType": "YulTypedName",
														"src": "11229:3:11",
														"type": ""
													}
												],
												"src": "11087:366:11"
											},
											{
												"body": {
													"nativeSrc": "11658:330:11",
													"nodeType": "YulBlock",
													"src": "11658:330:11",
													"statements": [
														{
															"nativeSrc": "11668:26:11",
															"nodeType": "YulAssignment",
															"src": "11668:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11680:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11680:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11691:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11691:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11676:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11676:3:11"
																},
																"nativeSrc": "11676:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11676:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11668:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11668:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11748:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11748:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11761:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11772:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11772:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11757:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11757:3:11"
																		},
																		"nativeSrc": "11757:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11757:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11704:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11704:43:11"
																},
																"nativeSrc": "11704:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11704:71:11"
															},
															"nativeSrc": "11704:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11704:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11796:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11796:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11807:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11807:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11792:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11792:3:11"
																		},
																		"nativeSrc": "11792:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11792:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11816:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11816:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11822:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11822:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11812:3:11"
																		},
																		"nativeSrc": "11812:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11812:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11785:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:11"
																},
																"nativeSrc": "11785:48:11",
																"nodeType": "YulFunctionCall",
																"src": "11785:48:11"
															},
															"nativeSrc": "11785:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "11785:48:11"
														},
														{
															"nativeSrc": "11842:139:11",
															"nodeType": "YulAssignment",
															"src": "11842:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11976:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11976:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11850:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11850:124:11"
																},
																"nativeSrc": "11850:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11850:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11842:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11842:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11459:529:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11630:9:11",
														"nodeType": "YulTypedName",
														"src": "11630:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11642:6:11",
														"nodeType": "YulTypedName",
														"src": "11642:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11653:4:11",
														"nodeType": "YulTypedName",
														"src": "11653:4:11",
														"type": ""
													}
												],
												"src": "11459:529:11"
											},
											{
												"body": {
													"nativeSrc": "12100:56:11",
													"nodeType": "YulBlock",
													"src": "12100:56:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12122:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12122:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12130:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12130:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12118:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12118:3:11"
																		},
																		"nativeSrc": "12118:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12118:14:11"
																	},
																	{
																		"hexValue": "5a65726f206465706f736974",
																		"kind": "string",
																		"nativeSrc": "12134:14:11",
																		"nodeType": "YulLiteral",
																		"src": "12134:14:11",
																		"type": "",
																		"value": "Zero deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12111:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12111:6:11"
																},
																"nativeSrc": "12111:38:11",
																"nodeType": "YulFunctionCall",
																"src": "12111:38:11"
															},
															"nativeSrc": "12111:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "12111:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
												"nativeSrc": "11994:162:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12092:6:11",
														"nodeType": "YulTypedName",
														"src": "12092:6:11",
														"type": ""
													}
												],
												"src": "11994:162:11"
											},
											{
												"body": {
													"nativeSrc": "12308:220:11",
													"nodeType": "YulBlock",
													"src": "12308:220:11",
													"statements": [
														{
															"nativeSrc": "12318:74:11",
															"nodeType": "YulAssignment",
															"src": "12318:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12384:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12384:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12389:2:11",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12325:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12325:58:11"
																},
																"nativeSrc": "12325:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12325:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12318:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12318:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12490:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12490:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																	"nativeSrc": "12401:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12401:88:11"
																},
																"nativeSrc": "12401:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12401:93:11"
															},
															"nativeSrc": "12401:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12401:93:11"
														},
														{
															"nativeSrc": "12503:19:11",
															"nodeType": "YulAssignment",
															"src": "12503:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12514:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12514:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12519:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12519:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12510:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12510:3:11"
																},
																"nativeSrc": "12510:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12510:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12503:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12503:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12162:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12296:3:11",
														"nodeType": "YulTypedName",
														"src": "12296:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12304:3:11",
														"nodeType": "YulTypedName",
														"src": "12304:3:11",
														"type": ""
													}
												],
												"src": "12162:366:11"
											},
											{
												"body": {
													"nativeSrc": "12705:248:11",
													"nodeType": "YulBlock",
													"src": "12705:248:11",
													"statements": [
														{
															"nativeSrc": "12715:26:11",
															"nodeType": "YulAssignment",
															"src": "12715:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12727:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12727:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12738:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12738:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12723:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12723:3:11"
																},
																"nativeSrc": "12723:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12723:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12715:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12715:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12762:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12762:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12773:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12773:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12758:3:11"
																		},
																		"nativeSrc": "12758:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12758:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12781:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12781:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12787:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12787:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12777:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12777:3:11"
																		},
																		"nativeSrc": "12777:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12777:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12751:6:11"
																},
																"nativeSrc": "12751:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12751:47:11"
															},
															"nativeSrc": "12751:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12751:47:11"
														},
														{
															"nativeSrc": "12807:139:11",
															"nodeType": "YulAssignment",
															"src": "12807:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12941:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12941:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12815:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12815:124:11"
																},
																"nativeSrc": "12815:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12815:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12807:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12807:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12534:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12685:9:11",
														"nodeType": "YulTypedName",
														"src": "12685:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12700:4:11",
														"nodeType": "YulTypedName",
														"src": "12700:4:11",
														"type": ""
													}
												],
												"src": "12534:419:11"
											},
											{
												"body": {
													"nativeSrc": "13113:288:11",
													"nodeType": "YulBlock",
													"src": "13113:288:11",
													"statements": [
														{
															"nativeSrc": "13123:26:11",
															"nodeType": "YulAssignment",
															"src": "13123:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13135:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13135:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13146:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13146:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13131:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13131:3:11"
																},
																"nativeSrc": "13131:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13131:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13123:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13123:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13203:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13203:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13216:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13216:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13227:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13227:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13212:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13212:3:11"
																		},
																		"nativeSrc": "13212:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13212:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13159:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13159:43:11"
																},
																"nativeSrc": "13159:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13159:71:11"
															},
															"nativeSrc": "13159:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13159:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13284:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13284:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13297:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13297:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13308:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13308:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13293:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:11"
																		},
																		"nativeSrc": "13293:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13240:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13240:43:11"
																},
																"nativeSrc": "13240:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13240:72:11"
															},
															"nativeSrc": "13240:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13240:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13366:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13366:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13379:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13379:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13390:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13390:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13375:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13375:3:11"
																		},
																		"nativeSrc": "13375:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13375:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13322:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13322:43:11"
																},
																"nativeSrc": "13322:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13322:72:11"
															},
															"nativeSrc": "13322:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13322:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12959:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13069:9:11",
														"nodeType": "YulTypedName",
														"src": "13069:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13081:6:11",
														"nodeType": "YulTypedName",
														"src": "13081:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13089:6:11",
														"nodeType": "YulTypedName",
														"src": "13089:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13097:6:11",
														"nodeType": "YulTypedName",
														"src": "13097:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13108:4:11",
														"nodeType": "YulTypedName",
														"src": "13108:4:11",
														"type": ""
													}
												],
												"src": "12959:442:11"
											},
											{
												"body": {
													"nativeSrc": "13455:362:11",
													"nodeType": "YulBlock",
													"src": "13455:362:11",
													"statements": [
														{
															"nativeSrc": "13465:25:11",
															"nodeType": "YulAssignment",
															"src": "13465:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13488:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13488:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13470:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13470:17:11"
																},
																"nativeSrc": "13470:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13470:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13465:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13465:1:11"
																}
															]
														},
														{
															"nativeSrc": "13499:25:11",
															"nodeType": "YulAssignment",
															"src": "13499:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13522:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13522:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13504:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13504:17:11"
																},
																"nativeSrc": "13504:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13504:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13499:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13499:1:11"
																}
															]
														},
														{
															"nativeSrc": "13533:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13533:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13556:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13556:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13559:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13559:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13552:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:11"
																},
																"nativeSrc": "13552:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13552:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13537:11:11",
																	"nodeType": "YulTypedName",
																	"src": "13537:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13570:41:11",
															"nodeType": "YulAssignment",
															"src": "13570:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13599:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "13599:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13581:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13581:17:11"
																},
																"nativeSrc": "13581:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13581:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13570:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "13570:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13788:22:11",
																"nodeType": "YulBlock",
																"src": "13788:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13790:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13790:16:11"
																			},
																			"nativeSrc": "13790:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13790:18:11"
																		},
																		"nativeSrc": "13790:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13790:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13721:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13721:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13714:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "13714:6:11"
																				},
																				"nativeSrc": "13714:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13714:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13744:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13744:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13751:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "13751:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13760:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "13760:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13747:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "13747:3:11"
																						},
																						"nativeSrc": "13747:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "13747:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13741:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "13741:2:11"
																				},
																				"nativeSrc": "13741:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13741:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13694:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13694:2:11"
																		},
																		"nativeSrc": "13694:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13694:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13674:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13674:6:11"
																},
																"nativeSrc": "13674:113:11",
																"nodeType": "YulFunctionCall",
																"src": "13674:113:11"
															},
															"nativeSrc": "13671:139:11",
															"nodeType": "YulIf",
															"src": "13671:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13407:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13438:1:11",
														"nodeType": "YulTypedName",
														"src": "13438:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13441:1:11",
														"nodeType": "YulTypedName",
														"src": "13441:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13447:7:11",
														"nodeType": "YulTypedName",
														"src": "13447:7:11",
														"type": ""
													}
												],
												"src": "13407:410:11"
											},
											{
												"body": {
													"nativeSrc": "13851:152:11",
													"nodeType": "YulBlock",
													"src": "13851:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13868:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13868:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:77:11",
																		"nodeType": "YulLiteral",
																		"src": "13871:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13861:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13861:6:11"
																},
																"nativeSrc": "13861:88:11",
																"nodeType": "YulFunctionCall",
																"src": "13861:88:11"
															},
															"nativeSrc": "13861:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "13861:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13965:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13965:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13968:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13968:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13958:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13958:6:11"
																},
																"nativeSrc": "13958:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13958:15:11"
															},
															"nativeSrc": "13958:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13958:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13989:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13989:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13992:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13992:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13982:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13982:6:11"
																},
																"nativeSrc": "13982:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13982:15:11"
															},
															"nativeSrc": "13982:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13982:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13823:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13823:180:11"
											},
											{
												"body": {
													"nativeSrc": "14051:143:11",
													"nodeType": "YulBlock",
													"src": "14051:143:11",
													"statements": [
														{
															"nativeSrc": "14061:25:11",
															"nodeType": "YulAssignment",
															"src": "14061:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14084:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14084:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14066:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14066:17:11"
																},
																"nativeSrc": "14066:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14066:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14061:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14061:1:11"
																}
															]
														},
														{
															"nativeSrc": "14095:25:11",
															"nodeType": "YulAssignment",
															"src": "14095:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14118:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14118:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14100:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14100:17:11"
																},
																"nativeSrc": "14100:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14100:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14095:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14095:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14142:22:11",
																"nodeType": "YulBlock",
																"src": "14142:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14144:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14144:16:11"
																			},
																			"nativeSrc": "14144:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14144:18:11"
																		},
																		"nativeSrc": "14144:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14144:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14139:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14139:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14132:6:11"
																},
																"nativeSrc": "14132:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14132:9:11"
															},
															"nativeSrc": "14129:35:11",
															"nodeType": "YulIf",
															"src": "14129:35:11"
														},
														{
															"nativeSrc": "14174:14:11",
															"nodeType": "YulAssignment",
															"src": "14174:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14183:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14183:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14186:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14186:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14179:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14179:3:11"
																},
																"nativeSrc": "14179:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14179:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14174:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14174:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14009:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14040:1:11",
														"nodeType": "YulTypedName",
														"src": "14040:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14043:1:11",
														"nodeType": "YulTypedName",
														"src": "14043:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14049:1:11",
														"nodeType": "YulTypedName",
														"src": "14049:1:11",
														"type": ""
													}
												],
												"src": "14009:185:11"
											},
											{
												"body": {
													"nativeSrc": "14306:75:11",
													"nodeType": "YulBlock",
													"src": "14306:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14328:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14328:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14336:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14336:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14324:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14324:3:11"
																		},
																		"nativeSrc": "14324:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14324:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14340:33:11",
																		"nodeType": "YulLiteral",
																		"src": "14340:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14317:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14317:6:11"
																},
																"nativeSrc": "14317:57:11",
																"nodeType": "YulFunctionCall",
																"src": "14317:57:11"
															},
															"nativeSrc": "14317:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "14317:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "14200:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14298:6:11",
														"nodeType": "YulTypedName",
														"src": "14298:6:11",
														"type": ""
													}
												],
												"src": "14200:181:11"
											},
											{
												"body": {
													"nativeSrc": "14533:220:11",
													"nodeType": "YulBlock",
													"src": "14533:220:11",
													"statements": [
														{
															"nativeSrc": "14543:74:11",
															"nodeType": "YulAssignment",
															"src": "14543:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14609:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14609:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14614:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14614:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14550:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14550:58:11"
																},
																"nativeSrc": "14550:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14550:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14543:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14543:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14715:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14715:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "14626:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14626:88:11"
																},
																"nativeSrc": "14626:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14626:93:11"
															},
															"nativeSrc": "14626:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14626:93:11"
														},
														{
															"nativeSrc": "14728:19:11",
															"nodeType": "YulAssignment",
															"src": "14728:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14739:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14739:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14744:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14744:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14735:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14735:3:11"
																},
																"nativeSrc": "14735:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14735:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14728:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14728:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14387:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14521:3:11",
														"nodeType": "YulTypedName",
														"src": "14521:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14529:3:11",
														"nodeType": "YulTypedName",
														"src": "14529:3:11",
														"type": ""
													}
												],
												"src": "14387:366:11"
											},
											{
												"body": {
													"nativeSrc": "14930:248:11",
													"nodeType": "YulBlock",
													"src": "14930:248:11",
													"statements": [
														{
															"nativeSrc": "14940:26:11",
															"nodeType": "YulAssignment",
															"src": "14940:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14952:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14952:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14963:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14963:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14948:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14948:3:11"
																},
																"nativeSrc": "14948:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14948:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14940:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14940:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14987:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14987:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14998:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14998:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14983:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:11"
																		},
																		"nativeSrc": "14983:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14983:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15006:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15006:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15012:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15012:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15002:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:11"
																		},
																		"nativeSrc": "15002:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14976:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14976:6:11"
																},
																"nativeSrc": "14976:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14976:47:11"
															},
															"nativeSrc": "14976:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14976:47:11"
														},
														{
															"nativeSrc": "15032:139:11",
															"nodeType": "YulAssignment",
															"src": "15032:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15166:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15166:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15040:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15040:124:11"
																},
																"nativeSrc": "15040:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15040:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15032:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15032:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14759:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14910:9:11",
														"nodeType": "YulTypedName",
														"src": "14910:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14925:4:11",
														"nodeType": "YulTypedName",
														"src": "14925:4:11",
														"type": ""
													}
												],
												"src": "14759:419:11"
											},
											{
												"body": {
													"nativeSrc": "15228:61:11",
													"nodeType": "YulBlock",
													"src": "15228:61:11",
													"statements": [
														{
															"nativeSrc": "15238:45:11",
															"nodeType": "YulAssignment",
															"src": "15238:45:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15253:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15253:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15260:22:11",
																		"nodeType": "YulLiteral",
																		"src": "15260:22:11",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15249:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15249:3:11"
																},
																"nativeSrc": "15249:34:11",
																"nodeType": "YulFunctionCall",
																"src": "15249:34:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15238:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15238:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "15184:105:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15210:5:11",
														"nodeType": "YulTypedName",
														"src": "15210:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15220:7:11",
														"nodeType": "YulTypedName",
														"src": "15220:7:11",
														"type": ""
													}
												],
												"src": "15184:105:11"
											},
											{
												"body": {
													"nativeSrc": "15337:78:11",
													"nodeType": "YulBlock",
													"src": "15337:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "15393:16:11",
																"nodeType": "YulBlock",
																"src": "15393:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15402:1:11",
																					"nodeType": "YulLiteral",
																					"src": "15402:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15405:1:11",
																					"nodeType": "YulLiteral",
																					"src": "15405:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15395:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15395:6:11"
																			},
																			"nativeSrc": "15395:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15395:12:11"
																		},
																		"nativeSrc": "15395:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "15395:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15360:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15360:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15384:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "15384:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "15367:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "15367:16:11"
																				},
																				"nativeSrc": "15367:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15367:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15357:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "15357:2:11"
																		},
																		"nativeSrc": "15357:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15357:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15350:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15350:6:11"
																},
																"nativeSrc": "15350:42:11",
																"nodeType": "YulFunctionCall",
																"src": "15350:42:11"
															},
															"nativeSrc": "15347:62:11",
															"nodeType": "YulIf",
															"src": "15347:62:11"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "15295:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15330:5:11",
														"nodeType": "YulTypedName",
														"src": "15330:5:11",
														"type": ""
													}
												],
												"src": "15295:120:11"
											},
											{
												"body": {
													"nativeSrc": "15483:79:11",
													"nodeType": "YulBlock",
													"src": "15483:79:11",
													"statements": [
														{
															"nativeSrc": "15493:22:11",
															"nodeType": "YulAssignment",
															"src": "15493:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15508:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15508:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15502:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15502:5:11"
																},
																"nativeSrc": "15502:13:11",
																"nodeType": "YulFunctionCall",
																"src": "15502:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15493:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15493:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15550:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "15524:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "15524:25:11"
																},
																"nativeSrc": "15524:32:11",
																"nodeType": "YulFunctionCall",
																"src": "15524:32:11"
															},
															"nativeSrc": "15524:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "15524:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "15421:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15461:6:11",
														"nodeType": "YulTypedName",
														"src": "15461:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15469:3:11",
														"nodeType": "YulTypedName",
														"src": "15469:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15477:5:11",
														"nodeType": "YulTypedName",
														"src": "15477:5:11",
														"type": ""
													}
												],
												"src": "15421:141:11"
											},
											{
												"body": {
													"nativeSrc": "15612:32:11",
													"nodeType": "YulBlock",
													"src": "15612:32:11",
													"statements": [
														{
															"nativeSrc": "15622:16:11",
															"nodeType": "YulAssignment",
															"src": "15622:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "15633:5:11",
																"nodeType": "YulIdentifier",
																"src": "15633:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15622:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15622:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "15568:76:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15594:5:11",
														"nodeType": "YulTypedName",
														"src": "15594:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15604:7:11",
														"nodeType": "YulTypedName",
														"src": "15604:7:11",
														"type": ""
													}
												],
												"src": "15568:76:11"
											},
											{
												"body": {
													"nativeSrc": "15692:78:11",
													"nodeType": "YulBlock",
													"src": "15692:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "15748:16:11",
																"nodeType": "YulBlock",
																"src": "15748:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15757:1:11",
																					"nodeType": "YulLiteral",
																					"src": "15757:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15760:1:11",
																					"nodeType": "YulLiteral",
																					"src": "15760:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15750:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15750:6:11"
																			},
																			"nativeSrc": "15750:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15750:12:11"
																		},
																		"nativeSrc": "15750:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "15750:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15715:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15715:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15739:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "15739:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "15722:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "15722:16:11"
																				},
																				"nativeSrc": "15722:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15722:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15712:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "15712:2:11"
																		},
																		"nativeSrc": "15712:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15712:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15705:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15705:6:11"
																},
																"nativeSrc": "15705:42:11",
																"nodeType": "YulFunctionCall",
																"src": "15705:42:11"
															},
															"nativeSrc": "15702:62:11",
															"nodeType": "YulIf",
															"src": "15702:62:11"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "15650:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15685:5:11",
														"nodeType": "YulTypedName",
														"src": "15685:5:11",
														"type": ""
													}
												],
												"src": "15650:120:11"
											},
											{
												"body": {
													"nativeSrc": "15838:79:11",
													"nodeType": "YulBlock",
													"src": "15838:79:11",
													"statements": [
														{
															"nativeSrc": "15848:22:11",
															"nodeType": "YulAssignment",
															"src": "15848:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15863:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15863:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15857:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15857:5:11"
																},
																"nativeSrc": "15857:13:11",
																"nodeType": "YulFunctionCall",
																"src": "15857:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15848:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15848:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15905:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15905:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "15879:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "15879:25:11"
																},
																"nativeSrc": "15879:32:11",
																"nodeType": "YulFunctionCall",
																"src": "15879:32:11"
															},
															"nativeSrc": "15879:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "15879:32:11"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "15776:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15816:6:11",
														"nodeType": "YulTypedName",
														"src": "15816:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15824:3:11",
														"nodeType": "YulTypedName",
														"src": "15824:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15832:5:11",
														"nodeType": "YulTypedName",
														"src": "15832:5:11",
														"type": ""
													}
												],
												"src": "15776:141:11"
											},
											{
												"body": {
													"nativeSrc": "16065:829:11",
													"nodeType": "YulBlock",
													"src": "16065:829:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "16112:83:11",
																"nodeType": "YulBlock",
																"src": "16112:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16114:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "16114:77:11"
																			},
																			"nativeSrc": "16114:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16114:79:11"
																		},
																		"nativeSrc": "16114:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "16114:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16086:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16086:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16095:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16095:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16082:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16082:3:11"
																		},
																		"nativeSrc": "16082:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16082:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16107:3:11",
																		"nodeType": "YulLiteral",
																		"src": "16107:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16078:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16078:3:11"
																},
																"nativeSrc": "16078:33:11",
																"nodeType": "YulFunctionCall",
																"src": "16078:33:11"
															},
															"nativeSrc": "16075:120:11",
															"nodeType": "YulIf",
															"src": "16075:120:11"
														},
														{
															"nativeSrc": "16205:127:11",
															"nodeType": "YulBlock",
															"src": "16205:127:11",
															"statements": [
																{
																	"nativeSrc": "16220:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16220:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16234:1:11",
																		"nodeType": "YulLiteral",
																		"src": "16234:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16224:6:11",
																			"nodeType": "YulTypedName",
																			"src": "16224:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16249:73:11",
																	"nodeType": "YulAssignment",
																	"src": "16249:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16294:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "16294:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16305:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "16305:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16290:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16290:3:11"
																				},
																				"nativeSrc": "16290:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16290:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16314:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16314:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16259:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "16259:30:11"
																		},
																		"nativeSrc": "16259:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16259:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16249:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "16249:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16342:128:11",
															"nodeType": "YulBlock",
															"src": "16342:128:11",
															"statements": [
																{
																	"nativeSrc": "16357:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16357:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16371:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16371:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16361:6:11",
																			"nodeType": "YulTypedName",
																			"src": "16361:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16387:73:11",
																	"nodeType": "YulAssignment",
																	"src": "16387:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16432:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "16432:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16443:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "16443:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16428:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16428:3:11"
																				},
																				"nativeSrc": "16428:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16428:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16452:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16452:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "16397:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "16397:30:11"
																		},
																		"nativeSrc": "16397:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16397:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16387:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "16387:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16480:129:11",
															"nodeType": "YulBlock",
															"src": "16480:129:11",
															"statements": [
																{
																	"nativeSrc": "16495:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16495:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16509:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16509:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16499:6:11",
																			"nodeType": "YulTypedName",
																			"src": "16499:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16525:74:11",
																	"nodeType": "YulAssignment",
																	"src": "16525:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16571:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "16571:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16582:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "16582:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16567:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16567:3:11"
																				},
																				"nativeSrc": "16567:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16567:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16591:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16591:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16535:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "16535:31:11"
																		},
																		"nativeSrc": "16535:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16535:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16525:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "16525:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16619:129:11",
															"nodeType": "YulBlock",
															"src": "16619:129:11",
															"statements": [
																{
																	"nativeSrc": "16634:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16634:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16648:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16648:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16638:6:11",
																			"nodeType": "YulTypedName",
																			"src": "16638:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16664:74:11",
																	"nodeType": "YulAssignment",
																	"src": "16664:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16710:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "16710:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16721:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "16721:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16706:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16706:3:11"
																				},
																				"nativeSrc": "16706:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16706:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16730:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16730:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16674:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "16674:31:11"
																		},
																		"nativeSrc": "16674:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16674:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16664:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "16664:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16758:129:11",
															"nodeType": "YulBlock",
															"src": "16758:129:11",
															"statements": [
																{
																	"nativeSrc": "16773:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16773:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16787:3:11",
																		"nodeType": "YulLiteral",
																		"src": "16787:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16777:6:11",
																			"nodeType": "YulTypedName",
																			"src": "16777:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16804:73:11",
																	"nodeType": "YulAssignment",
																	"src": "16804:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16849:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "16849:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16860:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "16860:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16845:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16845:3:11"
																				},
																				"nativeSrc": "16845:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16845:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16869:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16869:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "16814:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "16814:30:11"
																		},
																		"nativeSrc": "16814:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16814:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16804:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "16804:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "15923:971:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16003:9:11",
														"nodeType": "YulTypedName",
														"src": "16003:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16014:7:11",
														"nodeType": "YulTypedName",
														"src": "16014:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16026:6:11",
														"nodeType": "YulTypedName",
														"src": "16026:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16034:6:11",
														"nodeType": "YulTypedName",
														"src": "16034:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16042:6:11",
														"nodeType": "YulTypedName",
														"src": "16042:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16050:6:11",
														"nodeType": "YulTypedName",
														"src": "16050:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16058:6:11",
														"nodeType": "YulTypedName",
														"src": "16058:6:11",
														"type": ""
													}
												],
												"src": "15923:971:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$426_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$426_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$426_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$426__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$426_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw more than 0.01 E\")\n\n        mstore(add(memPtr, 32), \"TH\")\n\n    }\n\n    function abi_encode_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Global limit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"979": [
									{
										"length": 32,
										"start": 1199
									},
									{
										"length": 32,
										"start": 1590
									},
									{
										"length": 32,
										"start": 1878
									},
									{
										"length": 32,
										"start": 2101
									},
									{
										"length": 32,
										"start": 2240
									},
									{
										"length": 32,
										"start": 4200
									},
									{
										"length": 32,
										"start": 4317
									},
									{
										"length": 32,
										"start": 4421
									},
									{
										"length": 32,
										"start": 4528
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610129575f3560e01c8063a1eaa644116100aa578063f14210a61161006e578063f14210a6146103bd578063f2fde38b146103e5578063f6326fb31461040d578063f688bcfb14610417578063fc4577921461043f578063ff40e1d01461046957610129565b8063a1eaa644146102cb578063bdc8144b14610307578063cac2e25f1461032f578063db81f99b14610359578063dcd725a71461038157610129565b80637adbf973116100f15780637adbf973146101eb5780638c8bdae9146102135780638da5cb5b1461024f5780638eddc8f914610279578063a00cad48146102a157610129565b8063161235241461012d57806352963c2b146101575780636bec1ed014610181578063715018a6146101ab57806378234a3b146101c1575b5f5ffd5b348015610138575f5ffd5b50610141610493565b60405161014e9190611696565b60405180910390f35b348015610162575f5ffd5b5061016b610499565b6040516101789190611696565b60405180910390f35b34801561018c575f5ffd5b5061019561049f565b6040516101a29190611696565b60405180910390f35b3480156101b6575f5ffd5b506101bf61055a565b005b3480156101cc575f5ffd5b506101d561056d565b6040516101e29190611696565b60405180910390f35b3480156101f6575f5ffd5b50610211600480360381019061020c919061170d565b610573565b005b34801561021e575f5ffd5b506102396004803603810190610234919061170d565b6105f5565b6040516102469190611696565b60405180910390f35b34801561025a575f5ffd5b50610263610696565b6040516102709190611747565b60405180910390f35b348015610284575f5ffd5b5061029f600480360381019061029a919061178a565b6106bd565b005b3480156102ac575f5ffd5b506102b56106cf565b6040516102c29190611696565b60405180910390f35b3480156102d6575f5ffd5b506102f160048036038101906102ec91906117b5565b6106d5565b6040516102fe9190611696565b60405180910390f35b348015610312575f5ffd5b5061032d6004803603810190610328919061178a565b6106f5565b005b34801561033a575f5ffd5b50610343610707565b6040516103509190611696565b60405180910390f35b348015610364575f5ffd5b5061037f600480360381019061037a919061178a565b61070d565b005b34801561038c575f5ffd5b506103a760048036038101906103a2919061170d565b610948565b6040516103b49190611696565b60405180910390f35b3480156103c8575f5ffd5b506103e360048036038101906103de919061178a565b6109d1565b005b3480156103f0575f5ffd5b5061040b6004803603810190610406919061170d565b610c7a565b005b610415610cfe565b005b348015610422575f5ffd5b5061043d6004803603810190610438919061178a565b610f0b565b005b34801561044a575f5ffd5b50610453611189565b604051610460919061184e565b60405180910390f35b348015610474575f5ffd5b5061047d6111ae565b60405161048a9190611887565b60405180910390f35b60065481565b60055481565b5f5f6104aa476111d2565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105069190611747565b602060405180830381865afa158015610521573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054591906118b4565b90508082610553919061190c565b9250505090565b610562611201565b61056b5f611288565b565b60075481565b61057b611201565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394816040516105ea9190611747565b60405180910390a150565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106c5611201565b8060068190555050565b60045481565b6002602052815f5260405f20602052805f5260405f205f91509150505481565b6106fd611201565b8060048190555050565b60085481565b610715611349565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107f45780336040517f7c4f8b5d0000000000000000000000000000000000000000000000000000000081526004016107eb929190611999565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461089b91906119d3565b9250508190555060075f8154809291906108b490611a06565b919050555061090433827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113989092919063ffffffff16565b7f3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d8772893382604051610935929190611a4d565b60405180910390a1610945611417565b50565b5f6109ca60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546111d2565b9050919050565b6109d9611349565b80662386f26fc10000811115610a285780336040517f2183cae3000000000000000000000000000000000000000000000000000000008152600401610a1f929190611ae4565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610ae75780336040517f7c4f8b5d000000000000000000000000000000000000000000000000000000008152600401610ade929190611999565b60405180910390fd5b8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b6e91906119d3565b9250508190555060075f815480929190610b8790611a06565b91905055505f3373ffffffffffffffffffffffffffffffffffffffff1683604051610bb190611b4b565b5f6040518083038185875af1925050503d805f8114610beb576040519150601f19603f3d011682016040523d82523d5f602084013e610bf0565b606091505b5050905080610c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2b90611ba9565b60405180910390fd5b7f3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d8772893384604051610c65929190611a4d565b60405180910390a15050610c77611417565b50565b610c82611201565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ce99190611747565b60405180910390fd5b610cfb81611288565b50565b610d06611349565b610d0f346111d2565b610d1881611420565b15610d5a57806040517fa04dceba000000000000000000000000000000000000000000000000000000008152600401610d519190611c11565b60405180910390fd5b610d63346111d2565b60065481600554610d74919061190c565b1115610db9576006546040517f430b43df000000000000000000000000000000000000000000000000000000008152600401610db09190611696565b60405180910390fd5b5f3411610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290611c87565b60405180910390fd5b5f610e05346111d2565b905060085f815480929190610e1990611a06565b91905055508060055f828254610e2f919061190c565b925050819055503460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ebd919061190c565b925050819055507ee03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505335f34604051610ef693929190611ca5565b60405180910390a1505050610f09611417565b565b610f13611349565b80610f1d81611420565b15610f5f57806040517fa04dceba000000000000000000000000000000000000000000000000000000008152600401610f569190611c11565b60405180910390fd5b8160065481600554610f71919061190c565b1115610fb6576006546040517f430b43df000000000000000000000000000000000000000000000000000000008152600401610fad9190611696565b60405180910390fd5b5f8311610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef90611c87565b60405180910390fd5b60085f81548092919061100a90611a06565b91905055508260055f828254611020919061190c565b925050819055508260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110ce919061190c565b925050819055506111223330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661143a909392919063ffffffff16565b7ee03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505337f00000000000000000000000000000000000000000000000000000000000000008560405161117493929190611ca5565b60405180910390a15050611186611417565b50565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f68056bc75e2d631000006111e56114bc565b836111f09190611cda565b6111fa9190611d48565b9050919050565b6112096115dc565b73ffffffffffffffffffffffffffffffffffffffff16611227610696565b73ffffffffffffffffffffffffffffffffffffffff16146112865761124a6115dc565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161127d9190611747565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60026001540361138e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138590611dc2565b60405180910390fd5b6002600181905550565b611412838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016113cb929190611a4d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506115e3565b505050565b60018081905550565b5f60045482600554611432919061190c565b119050919050565b6114b6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161146f93929190611ca5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506115e3565b50505050565b5f5f5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611529573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154d9190611e52565b509350509250505f820361158d576040517f144c1d9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e10814261159c91906119d3565b11156115d4576040517f0b3126e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b819250505090565b5f33905090565b5f5f60205f8451602086015f885af180611602576040513d5f823e3d81fd5b3d92505f519150505f821461161b576001811415611636565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561167857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161166f9190611747565b60405180910390fd5b50505050565b5f819050919050565b6116908161167e565b82525050565b5f6020820190506116a95f830184611687565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116dc826116b3565b9050919050565b6116ec816116d2565b81146116f6575f5ffd5b50565b5f81359050611707816116e3565b92915050565b5f60208284031215611722576117216116af565b5b5f61172f848285016116f9565b91505092915050565b611741816116d2565b82525050565b5f60208201905061175a5f830184611738565b92915050565b6117698161167e565b8114611773575f5ffd5b50565b5f8135905061178481611760565b92915050565b5f6020828403121561179f5761179e6116af565b5b5f6117ac84828501611776565b91505092915050565b5f5f604083850312156117cb576117ca6116af565b5b5f6117d8858286016116f9565b92505060206117e9858286016116f9565b9150509250929050565b5f819050919050565b5f61181661181161180c846116b3565b6117f3565b6116b3565b9050919050565b5f611827826117fc565b9050919050565b5f6118388261181d565b9050919050565b6118488161182e565b82525050565b5f6020820190506118615f83018461183f565b92915050565b5f6118718261181d565b9050919050565b61188181611867565b82525050565b5f60208201905061189a5f830184611878565b92915050565b5f815190506118ae81611760565b92915050565b5f602082840312156118c9576118c86116af565b5b5f6118d6848285016118a0565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119168261167e565b91506119218361167e565b9250828201905080821115611939576119386118df565b5b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61198360148361193f565b915061198e8261194f565b602082019050919050565b5f6060820190506119ac5f830185611687565b6119b96020830184611738565b81810360408301526119ca81611977565b90509392505050565b5f6119dd8261167e565b91506119e88361167e565b9250828203905081811115611a00576119ff6118df565b5b92915050565b5f611a108261167e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a4257611a416118df565b5b600182019050919050565b5f604082019050611a605f830185611738565b611a6d6020830184611687565b9392505050565b7f43616e6e6f74207769746864726177206d6f7265207468616e20302e303120455f8201527f5448000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ace60228361193f565b9150611ad982611a74565b604082019050919050565b5f606082019050611af75f830185611687565b611b046020830184611738565b8181036040830152611b1581611ac2565b90509392505050565b5f81905092915050565b50565b5f611b365f83611b1e565b9150611b4182611b28565b5f82019050919050565b5f611b5582611b2b565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f611b9360118361193f565b9150611b9e82611b5f565b602082019050919050565b5f6020820190508181035f830152611bc081611b87565b9050919050565b7f476c6f62616c206c696d697420726561636865640000000000000000000000005f82015250565b5f611bfb60148361193f565b9150611c0682611bc7565b602082019050919050565b5f604082019050611c245f830184611687565b8181036020830152611c3581611bef565b905092915050565b7f5a65726f206465706f73697400000000000000000000000000000000000000005f82015250565b5f611c71600c8361193f565b9150611c7c82611c3d565b602082019050919050565b5f6020820190508181035f830152611c9e81611c65565b9050919050565b5f606082019050611cb85f830186611738565b611cc56020830185611738565b611cd26040830184611687565b949350505050565b5f611ce48261167e565b9150611cef8361167e565b9250828202611cfd8161167e565b91508282048414831517611d1457611d136118df565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d528261167e565b9150611d5d8361167e565b925082611d6d57611d6c611d1b565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611dac601f8361193f565b9150611db782611d78565b602082019050919050565b5f6020820190508181035f830152611dd981611da0565b9050919050565b5f69ffffffffffffffffffff82169050919050565b611dfe81611de0565b8114611e08575f5ffd5b50565b5f81519050611e1981611df5565b92915050565b5f819050919050565b611e3181611e1f565b8114611e3b575f5ffd5b50565b5f81519050611e4c81611e28565b92915050565b5f5f5f5f5f60a08688031215611e6b57611e6a6116af565b5b5f611e7888828901611e0b565b9550506020611e8988828901611e3e565b9450506040611e9a888289016118a0565b9350506060611eab888289016118a0565b9250506080611ebc88828901611e0b565b915050929550929590935056fea2646970667358221220dd68a378efbd5b40385c2790ad532137a67607c7083100fc38fea5f37c7f974b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1EAA644 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xF688BCFB EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xFC457792 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xFF40E1D0 EQ PUSH2 0x469 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0xA1EAA644 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xBDC8144B EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xCAC2E25F EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xDB81F99B EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xDCD725A7 EQ PUSH2 0x381 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x7ADBF973 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8C8BDAE9 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8EDDC8F9 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xA00CAD48 EQ PUSH2 0x2A1 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x16123524 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x52963C2B EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x6BEC1ED0 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x78234A3B EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x343 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x453 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x47D PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AA SELFBALANCE PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x56B PUSH0 PUSH2 0x1288 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x57B PUSH2 0x1201 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x1201 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x1201 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7F4 JUMPI DUP1 CALLER PUSH1 0x40 MLOAD PUSH32 0x7C4F8B5D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EB SWAP3 SWAP2 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x8B4 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x904 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1398 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x3F8F630C8B146486A33AFC98F55BD1FDD5D4717DEAB161C649B6FE758D877289 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x935 SWAP3 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x945 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x9CA PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D9 PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH7 0x2386F26FC10000 DUP2 GT ISZERO PUSH2 0xA28 JUMPI DUP1 CALLER PUSH1 0x40 MLOAD PUSH32 0x2183CAE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP3 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAE7 JUMPI DUP1 CALLER PUSH1 0x40 MLOAD PUSH32 0x7C4F8B5D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADE SWAP3 SWAP2 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB87 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xBB1 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2B SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3F8F630C8B146486A33AFC98F55BD1FDD5D4717DEAB161C649B6FE758D877289 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0xC65 SWAP3 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xC77 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC82 PUSH2 0x1201 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0x1288 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD06 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xD0F CALLVALUE PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0x1420 JUMP JUMPDEST ISZERO PUSH2 0xD5A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xA04DCEBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD63 CALLVALUE PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH1 0x5 SLOAD PUSH2 0xD74 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST GT ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x430B43DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE05 CALLVALUE PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE19 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH31 0xE03F32AE5DCDD1E3D7D441BE59E1650006AEB02C24FAA7EF36785183D5C505 CALLER PUSH0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xEF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0xF09 PUSH2 0x1417 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF13 PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH2 0xF1D DUP2 PUSH2 0x1420 JUMP JUMPDEST ISZERO PUSH2 0xF5F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xA04DCEBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 SLOAD DUP2 PUSH1 0x5 SLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x430B43DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x100A SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP3 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1122 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x143A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH31 0xE03F32AE5DCDD1E3D7D441BE59E1650006AEB02C24FAA7EF36785183D5C505 CALLER PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x1186 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 PUSH2 0x11E5 PUSH2 0x14BC JUMP JUMPDEST DUP4 PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1209 PUSH2 0x15DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1227 PUSH2 0x696 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1286 JUMPI PUSH2 0x124A PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1385 SWAP1 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1412 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13CB SWAP3 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x15E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP3 PUSH1 0x5 SLOAD PUSH2 0x1432 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x146F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x15E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1529 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154D SWAP2 SWAP1 PUSH2 0x1E52 JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SUB PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x144C1D9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 TIMESTAMP PUSH2 0x159C SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST GT ISZERO PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3126E600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1602 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x161B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1636 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1678 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP2 SWAP1 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1690 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16DC DUP3 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x16D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1707 DUP2 PUSH2 0x16E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172F DUP5 DUP3 DUP6 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1741 DUP2 PUSH2 0x16D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175A PUSH0 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1769 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x1773 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1784 DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH2 0x179E PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17AC DUP5 DUP3 DUP6 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D8 DUP6 DUP3 DUP7 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E9 DUP6 DUP3 DUP7 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1816 PUSH2 0x1811 PUSH2 0x180C DUP5 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1827 DUP3 PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1838 DUP3 PUSH2 0x181D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1848 DUP2 PUSH2 0x182E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1861 PUSH0 DUP4 ADD DUP5 PUSH2 0x183F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1871 DUP3 PUSH2 0x181D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x1867 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18AE DUP2 PUSH2 0x1760 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C9 JUMPI PUSH2 0x18C8 PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D6 DUP5 DUP3 DUP6 ADD PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1916 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x1921 DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1983 PUSH1 0x14 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x198E DUP3 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x19B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19CA DUP2 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19DD DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x19E8 DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x19FF PUSH2 0x18DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A10 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A42 JUMPI PUSH2 0x1A41 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A60 PUSH0 DUP4 ADD DUP6 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1A6D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207769746864726177206D6F7265207468616E20302E30312045 PUSH0 DUP3 ADD MSTORE PUSH32 0x5448000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACE PUSH1 0x22 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD9 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x1B04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1738 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B15 DUP2 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1B36 PUSH0 DUP4 PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B41 DUP3 PUSH2 0x1B28 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B55 DUP3 PUSH2 0x1B2B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B93 PUSH1 0x11 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9E DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BC0 DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476C6F62616C206C696D69742072656163686564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFB PUSH1 0x14 DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C06 DUP3 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C24 PUSH0 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C35 DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A65726F206465706F7369740000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C71 PUSH1 0xC DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7C DUP3 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9E DUP2 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CB8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1CC5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1CD2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1687 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE4 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEF DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1CFD DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D52 DUP3 PUSH2 0x167E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5D DUP4 PUSH2 0x167E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D6D JUMPI PUSH2 0x1D6C PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAC PUSH1 0x1F DUP4 PUSH2 0x193F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD9 DUP2 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFE DUP2 PUSH2 0x1DE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E08 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E19 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E31 DUP2 PUSH2 0x1E1F JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E4C DUP2 PUSH2 0x1E28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x16AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E78 DUP9 DUP3 DUP10 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E89 DUP9 DUP3 DUP10 ADD PUSH2 0x1E3E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E9A DUP9 DUP3 DUP10 ADD PUSH2 0x18A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1EAB DUP9 DUP3 DUP10 ADD PUSH2 0x18A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1EBC DUP9 DUP3 DUP10 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH9 0xA378EFBD5B40385C27 SWAP1 0xAD MSTORE8 0x21 CALLDATACOPY 0xA6 PUSH23 0x7C7083100FC38FEA5F37C7F974B64736F6C634300081E STOP CALLER ",
							"sourceMap": "789:10658:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1876:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7152:264;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;2155:30:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10765:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7721:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11074:108:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1777:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1143:80;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11339:106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2191:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9965:442;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7508:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8193:417;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8693:492:10;;;:::i;:::-;;9326:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1303:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1968:28;;;;:::o;1876:30::-;;;;:::o;7152:264::-;7206:20;7238:17;7258:40;7276:21;7258:17;:40::i;:::-;7238:60;;7308:19;7330:6;:16;;;7355:4;7330:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7308:53;;7398:11;7386:9;:23;;;;:::i;:::-;7371:38;;7228:188;;7152:264;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2155:30:10:-;;;;:::o;10765:159::-;1531:13:1;:11;:13::i;:::-;10866:10:10::1;10833:8;;:44;;;;;;;;;;;;;;;;;;10892:25;10906:10;10892:25;;;;;;:::i;:::-;;;;;;;;10765:159:::0;:::o;7721:125::-;7783:7;7809;:13;7817:4;7809:13;;;;;;;;;;;;;;;:30;7831:6;7809:30;;;;;;;;;;;;;;;;7802:37;;7721:125;;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;11074:108:10:-;1531:13:1;:11;:13::i;:::-;11164:11:10::1;11148:13;:27;;;;11074:108:::0;:::o;1777:29::-;;;;:::o;1143:80::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11339:106::-;1531:13:1;:11;:13::i;:::-;11429:9:10::1;11412:14;:26;;;;11339:106:::0;:::o;2191:29::-;;;;:::o;9965:442::-;2261:21:5;:19;:21::i;:::-;10083:11:10::1;10044:7;:19;10052:10;10044:19;;;;;;;;;;;;;;;:36;10072:6;10044:36;;;;;;;;;;;;;;;;:50;10040:156;;;10137:11;10150:10;10117:68;;;;;;;;;;;;:::i;:::-;;;;;;;;10040:156;10246:11;10206:7;:19;10214:10;10206:19;;;;;;;;;;;;;;;:36;10234:6;10206:36;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;10267:15;;:17;;;;;;;;;:::i;:::-;;;;;;10295:44;10315:10;10327:11;10295:6;:19;;;;:44;;;;;:::i;:::-;10355:45;10376:10;10388:11;10355:45;;;;;;;:::i;:::-;;;;;;;;2303:20:5::0;:18;:20::i;:::-;9965:442:10;:::o;7508:138::-;7569:7;7595:44;7613:7;:13;7621:4;7613:13;;;;;;;;;;;;;;;:25;7635:1;7613:25;;;;;;;;;;;;;;;;7595:17;:44::i;:::-;7588:51;;7508:138;;;:::o;8193:417::-;2261:21:5;:19;:21::i;:::-;8301:15:10::1;2095:10;4251:7;:24;4247:280;;;4309:7;4318:10;4298:69;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:280;4422:7;4388;:19;4396:10;4388:19;;;;;;;;;;;;;;;:31;4416:1;4388:31;;;;;;;;;;;;;;;;:41;4384:143;;;4472:7;4481:10;4452:64;;;;;;;;;;;;:::i;:::-;;;;;;;;4384:143;8367:15:::2;8332:7;:19;8340:10;8332:19;;;;;;;;;;;;;;;:31;8360:1;8332:31;;;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;;;;;8392:15;;:17;;;;;;;;;:::i;:::-;;;;;;8421:12;8447:10;8439:24;;8471:15;8439:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8420:71;;;8509:7;8501:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;8554:49;8575:10;8587:15;8554:49;;;;;;;:::i;:::-;;;;;;;;8322:288;2292:1:5::1;2303:20:::0;:18;:20::i;:::-;8193:417:10;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8693:492:10:-;2261:21:5;:19;:21::i;:::-;8795:28:10::1;8813:9;8795:17;:28::i;:::-;3553:33;3574:11;3553:20;:33::i;:::-;3549:119;;;3621:11;3609:48;;;;;;;;;;;:::i;:::-;;;;;;;;3549:119;8851:28:::2;8869:9;8851:17;:28::i;:::-;3933:13;;3919:11;3901:15;;:29;;;;:::i;:::-;:45;3897:114;;;3986:13;;3969:31;;;;;;;;;;;:::i;:::-;;;;;;;;3897:114;8915:1:::3;8903:9;:13;8895:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;8944:17;8964:28;8982:9;8964:17;:28::i;:::-;8944:48;;9002:14;;:16;;;;;;;;;:::i;:::-;;;;;;9047:9;9028:15;;:28;;;;;;;:::i;:::-;;;;;;;;9101:9;9066:7;:19;9074:10;9066:19;;;;;;;;;;;;;;;:31;9094:1;9066:31;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;9126:52;9144:10;9164:1;9168:9;9126:52;;;;;;;;:::i;:::-;;;;;;;;8885:300;3677:1:::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;8693:492:10:o;9326:496::-;2261:21:5;:19;:21::i;:::-;9432:11:10::1;3553:33;3574:11;3553:20;:33::i;:::-;3549:119;;;3621:11;3609:48;;;;;;;;;;;:::i;:::-;;;;;;;;3549:119;9471:11:::2;3933:13;;3919:11;3901:15;;:29;;;;:::i;:::-;:45;3897:114;;;3986:13;;3969:31;;;;;;;;;;;:::i;:::-;;;;;;;;3897:114;9520:1:::3;9506:11;:15;9498:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;9549:14;;:16;;;;;;;;;:::i;:::-;;;;;;9594:11;9575:15;;:30;;;;;;;:::i;:::-;;;;;;;;9655:11;9615:7;:19;9623:10;9615:19;;;;;;;;;;;;;;;:36;9643:6;9615:36;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;9677:63;9701:10;9721:4;9728:11;9677:6;:23;;;;:63;;;;;;:::i;:::-;9756:59;9774:10;9794:6;9803:11;9756:59;;;;;;;;:::i;:::-;;;;;;;;3677:1:::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;9326:496:10;:::o;1303:37::-;;;;;;;;;;;;;:::o;1662:30::-;;;:::o;6354:207::-;6448:23;1593:12;6519:17;:15;:17::i;:::-;6506:10;:30;;;;:::i;:::-;6505:49;;;;:::i;:::-;6487:67;;6354:207;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;6702:149:10:-;6774:4;6830:14;;6816:10;6798:15;;:28;;;;:::i;:::-;6797:47;6790:54;;6702:149;;;:::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;5820:333:10:-;5870:19;5904:12;5920:17;5943:8;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5901:68;;;;;;;5993:1;5984:5;:10;5980:42;;6003:19;;;;;;;;;;;;;;5980:42;1466:4;6054:9;6036:15;:27;;;;:::i;:::-;:46;6032:75;;;6091:16;;;;;;;;;;;;;;6032:75;6140:5;6118:28;;5891:262;;5820:333;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:77:11:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:60::-;3079:3;3100:5;3093:12;;3051:60;;;:::o;3117:142::-;3167:9;3200:53;3218:34;3227:24;3245:5;3227:24;:::i;:::-;3218:34;:::i;:::-;3200:53;:::i;:::-;3187:66;;3117:142;;;:::o;3265:126::-;3315:9;3348:37;3379:5;3348:37;:::i;:::-;3335:50;;3265:126;;;:::o;3397:154::-;3475:9;3508:37;3539:5;3508:37;:::i;:::-;3495:50;;3397:154;;;:::o;3557:187::-;3672:65;3731:5;3672:65;:::i;:::-;3667:3;3660:78;3557:187;;:::o;3750:278::-;3871:4;3909:2;3898:9;3894:18;3886:26;;3922:99;4018:1;4007:9;4003:17;3994:6;3922:99;:::i;:::-;3750:278;;;;:::o;4034:140::-;4098:9;4131:37;4162:5;4131:37;:::i;:::-;4118:50;;4034:140;;;:::o;4180:159::-;4281:51;4326:5;4281:51;:::i;:::-;4276:3;4269:64;4180:159;;:::o;4345:250::-;4452:4;4490:2;4479:9;4475:18;4467:26;;4503:85;4585:1;4574:9;4570:17;4561:6;4503:85;:::i;:::-;4345:250;;;;:::o;4601:143::-;4658:5;4689:6;4683:13;4674:22;;4705:33;4732:5;4705:33;:::i;:::-;4601:143;;;;:::o;4750:351::-;4820:6;4869:2;4857:9;4848:7;4844:23;4840:32;4837:119;;;4875:79;;:::i;:::-;4837:119;4995:1;5020:64;5076:7;5067:6;5056:9;5052:22;5020:64;:::i;:::-;5010:74;;4966:128;4750:351;;;;:::o;5107:180::-;5155:77;5152:1;5145:88;5252:4;5249:1;5242:15;5276:4;5273:1;5266:15;5293:191;5333:3;5352:20;5370:1;5352:20;:::i;:::-;5347:25;;5386:20;5404:1;5386:20;:::i;:::-;5381:25;;5429:1;5426;5422:9;5415:16;;5450:3;5447:1;5444:10;5441:36;;;5457:18;;:::i;:::-;5441:36;5293:191;;;;:::o;5490:169::-;5574:11;5608:6;5603:3;5596:19;5648:4;5643:3;5639:14;5624:29;;5490:169;;;;:::o;5665:170::-;5805:22;5801:1;5793:6;5789:14;5782:46;5665:170;:::o;5841:366::-;5983:3;6004:67;6068:2;6063:3;6004:67;:::i;:::-;5997:74;;6080:93;6169:3;6080:93;:::i;:::-;6198:2;6193:3;6189:12;6182:19;;5841:366;;;:::o;6213:639::-;6435:4;6473:2;6462:9;6458:18;6450:26;;6486:71;6554:1;6543:9;6539:17;6530:6;6486:71;:::i;:::-;6567:72;6635:2;6624:9;6620:18;6611:6;6567:72;:::i;:::-;6686:9;6680:4;6676:20;6671:2;6660:9;6656:18;6649:48;6714:131;6840:4;6714:131;:::i;:::-;6706:139;;6213:639;;;;;:::o;6858:194::-;6898:4;6918:20;6936:1;6918:20;:::i;:::-;6913:25;;6952:20;6970:1;6952:20;:::i;:::-;6947:25;;6996:1;6993;6989:9;6981:17;;7020:1;7014:4;7011:11;7008:37;;;7025:18;;:::i;:::-;7008:37;6858:194;;;;:::o;7058:233::-;7097:3;7120:24;7138:5;7120:24;:::i;:::-;7111:33;;7166:66;7159:5;7156:77;7153:103;;7236:18;;:::i;:::-;7153:103;7283:1;7276:5;7272:13;7265:20;;7058:233;;;:::o;7297:332::-;7418:4;7456:2;7445:9;7441:18;7433:26;;7469:71;7537:1;7526:9;7522:17;7513:6;7469:71;:::i;:::-;7550:72;7618:2;7607:9;7603:18;7594:6;7550:72;:::i;:::-;7297:332;;;;;:::o;7635:221::-;7775:34;7771:1;7763:6;7759:14;7752:58;7844:4;7839:2;7831:6;7827:15;7820:29;7635:221;:::o;7862:366::-;8004:3;8025:67;8089:2;8084:3;8025:67;:::i;:::-;8018:74;;8101:93;8190:3;8101:93;:::i;:::-;8219:2;8214:3;8210:12;8203:19;;7862:366;;;:::o;8234:639::-;8456:4;8494:2;8483:9;8479:18;8471:26;;8507:71;8575:1;8564:9;8560:17;8551:6;8507:71;:::i;:::-;8588:72;8656:2;8645:9;8641:18;8632:6;8588:72;:::i;:::-;8707:9;8701:4;8697:20;8692:2;8681:9;8677:18;8670:48;8735:131;8861:4;8735:131;:::i;:::-;8727:139;;8234:639;;;;;:::o;8879:147::-;8980:11;9017:3;9002:18;;8879:147;;;;:::o;9032:114::-;;:::o;9152:398::-;9311:3;9332:83;9413:1;9408:3;9332:83;:::i;:::-;9325:90;;9424:93;9513:3;9424:93;:::i;:::-;9542:1;9537:3;9533:11;9526:18;;9152:398;;;:::o;9556:379::-;9740:3;9762:147;9905:3;9762:147;:::i;:::-;9755:154;;9926:3;9919:10;;9556:379;;;:::o;9941:167::-;10081:19;10077:1;10069:6;10065:14;10058:43;9941:167;:::o;10114:366::-;10256:3;10277:67;10341:2;10336:3;10277:67;:::i;:::-;10270:74;;10353:93;10442:3;10353:93;:::i;:::-;10471:2;10466:3;10462:12;10455:19;;10114:366;;;:::o;10486:419::-;10652:4;10690:2;10679:9;10675:18;10667:26;;10739:9;10733:4;10729:20;10725:1;10714:9;10710:17;10703:47;10767:131;10893:4;10767:131;:::i;:::-;10759:139;;10486:419;;;:::o;10911:170::-;11051:22;11047:1;11039:6;11035:14;11028:46;10911:170;:::o;11087:366::-;11229:3;11250:67;11314:2;11309:3;11250:67;:::i;:::-;11243:74;;11326:93;11415:3;11326:93;:::i;:::-;11444:2;11439:3;11435:12;11428:19;;11087:366;;;:::o;11459:529::-;11653:4;11691:2;11680:9;11676:18;11668:26;;11704:71;11772:1;11761:9;11757:17;11748:6;11704:71;:::i;:::-;11822:9;11816:4;11812:20;11807:2;11796:9;11792:18;11785:48;11850:131;11976:4;11850:131;:::i;:::-;11842:139;;11459:529;;;;:::o;11994:162::-;12134:14;12130:1;12122:6;12118:14;12111:38;11994:162;:::o;12162:366::-;12304:3;12325:67;12389:2;12384:3;12325:67;:::i;:::-;12318:74;;12401:93;12490:3;12401:93;:::i;:::-;12519:2;12514:3;12510:12;12503:19;;12162:366;;;:::o;12534:419::-;12700:4;12738:2;12727:9;12723:18;12715:26;;12787:9;12781:4;12777:20;12773:1;12762:9;12758:17;12751:47;12815:131;12941:4;12815:131;:::i;:::-;12807:139;;12534:419;;;:::o;12959:442::-;13108:4;13146:2;13135:9;13131:18;13123:26;;13159:71;13227:1;13216:9;13212:17;13203:6;13159:71;:::i;:::-;13240:72;13308:2;13297:9;13293:18;13284:6;13240:72;:::i;:::-;13322;13390:2;13379:9;13375:18;13366:6;13322:72;:::i;:::-;12959:442;;;;;;:::o;13407:410::-;13447:7;13470:20;13488:1;13470:20;:::i;:::-;13465:25;;13504:20;13522:1;13504:20;:::i;:::-;13499:25;;13559:1;13556;13552:9;13581:30;13599:11;13581:30;:::i;:::-;13570:41;;13760:1;13751:7;13747:15;13744:1;13741:22;13721:1;13714:9;13694:83;13671:139;;13790:18;;:::i;:::-;13671:139;13455:362;13407:410;;;;:::o;13823:180::-;13871:77;13868:1;13861:88;13968:4;13965:1;13958:15;13992:4;13989:1;13982:15;14009:185;14049:1;14066:20;14084:1;14066:20;:::i;:::-;14061:25;;14100:20;14118:1;14100:20;:::i;:::-;14095:25;;14139:1;14129:35;;14144:18;;:::i;:::-;14129:35;14186:1;14183;14179:9;14174:14;;14009:185;;;;:::o;14200:181::-;14340:33;14336:1;14328:6;14324:14;14317:57;14200:181;:::o;14387:366::-;14529:3;14550:67;14614:2;14609:3;14550:67;:::i;:::-;14543:74;;14626:93;14715:3;14626:93;:::i;:::-;14744:2;14739:3;14735:12;14728:19;;14387:366;;;:::o;14759:419::-;14925:4;14963:2;14952:9;14948:18;14940:26;;15012:9;15006:4;15002:20;14998:1;14987:9;14983:17;14976:47;15040:131;15166:4;15040:131;:::i;:::-;15032:139;;14759:419;;;:::o;15184:105::-;15220:7;15260:22;15253:5;15249:34;15238:45;;15184:105;;;:::o;15295:120::-;15367:23;15384:5;15367:23;:::i;:::-;15360:5;15357:34;15347:62;;15405:1;15402;15395:12;15347:62;15295:120;:::o;15421:141::-;15477:5;15508:6;15502:13;15493:22;;15524:32;15550:5;15524:32;:::i;:::-;15421:141;;;;:::o;15568:76::-;15604:7;15633:5;15622:16;;15568:76;;;:::o;15650:120::-;15722:23;15739:5;15722:23;:::i;:::-;15715:5;15712:34;15702:62;;15760:1;15757;15750:12;15702:62;15650:120;:::o;15776:141::-;15832:5;15863:6;15857:13;15848:22;;15879:32;15905:5;15879:32;:::i;:::-;15776:141;;;;:::o;15923:971::-;16026:6;16034;16042;16050;16058;16107:3;16095:9;16086:7;16082:23;16078:33;16075:120;;;16114:79;;:::i;:::-;16075:120;16234:1;16259:63;16314:7;16305:6;16294:9;16290:22;16259:63;:::i;:::-;16249:73;;16205:127;16371:2;16397:63;16452:7;16443:6;16432:9;16428:22;16397:63;:::i;:::-;16387:73;;16342:128;16509:2;16535:64;16591:7;16582:6;16571:9;16567:22;16535:64;:::i;:::-;16525:74;;16480:129;16648:2;16674:64;16730:7;16721:6;16710:9;16706:22;16674:64;:::i;:::-;16664:74;;16619:129;16787:3;16814:63;16869:7;16860:6;16849:9;16845:22;16814:63;:::i;:::-;16804:73;;16758:129;15923:971;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1587000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"contractBalanceInUSDC()": "infinite",
								"depositETH()": "infinite",
								"depositUSDC(uint256)": "infinite",
								"i_usdc()": "infinite",
								"owner()": "2581",
								"renounceOwnership()": "infinite",
								"s_bankCapital()": "2449",
								"s_depositCount()": "2492",
								"s_depositLimit()": "2536",
								"s_oracle()": "infinite",
								"s_totalDeposits()": "2471",
								"s_vault(address,address)": "infinite",
								"s_withdrawCount()": "2537",
								"setBankCapital(uint256)": "infinite",
								"setDepositLimit(uint256)": "infinite",
								"setOracle(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"viewETHBalance(address)": "infinite",
								"viewUSDCBalance(address)": "infinite",
								"withdrawETH(uint256)": "infinite",
								"withdrawUSDC(uint256)": "infinite"
							},
							"internal": {
								"_convertETHtoUSDC(uint256)": "infinite",
								"_exceedsDepositLimit(uint256)": "infinite",
								"_getETHUSDPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 5115,
									"end": 5458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5278,
									"end": 5284,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5329,
									"end": 5336,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5304,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 5296,
									"end": 5304,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5337,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5363,
									"end": 5368,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5369,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5395,
									"end": 5407,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5379,
									"end": 5392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 5379,
									"end": 5407,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5379,
									"end": 5407,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5379,
									"end": 5407,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5379,
									"end": 5407,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5434,
									"end": 5451,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5417,
									"end": 5431,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5417,
									"end": 5451,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5417,
									"end": 5451,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5417,
									"end": 5451,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5417,
									"end": 5451,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5115,
									"end": 5458,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2293,
									"end": 2298,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2275,
									"end": 2299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2270,
									"end": 2273,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2263,
									"end": 2300,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2405,
									"end": 2409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2428,
									"end": 2446,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2456,
									"end": 2527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "979"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 11447,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd68a378efbd5b40385c2790ad532137a67607c7083100fc38fea5f37c7f974b64736f6c634300081e0033",
									".code": [
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "A1EAA644"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "F14210A6"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "F14210A6"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "F6326FB3"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "F688BCFB"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "FC457792"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "FF40E1D0"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "A1EAA644"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "BDC8144B"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "CAC2E25F"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "DB81F99B"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "DCD725A7"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "7ADBF973"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "7ADBF973"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "8C8BDAE9"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "8EDDC8F9"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "A00CAD48"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "16123524"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "52963C2B"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "6BEC1ED0"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "78234A3B"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 11447,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1968,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1968,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1876,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1876,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 7152,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7152,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2155,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2155,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10765,
											"end": 10924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10765,
											"end": 10924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 7721,
											"end": 7846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 7721,
											"end": 7846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7721,
											"end": 7846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11074,
											"end": 11182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 11074,
											"end": 11182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1777,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1777,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1143,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1143,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1143,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11339,
											"end": 11445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 11339,
											"end": 11445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2191,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2191,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9965,
											"end": 10407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 9965,
											"end": 10407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 7508,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7508,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7508,
											"end": 7646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8193,
											"end": 8610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8193,
											"end": 8610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 8693,
											"end": 9185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9326,
											"end": 9822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 9326,
											"end": 9822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1303,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1303,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1662,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1662,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 1996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 7276,
											"end": 7297,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 7258,
											"end": 7298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7298,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 7258,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7298,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7330,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 7330,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 7330,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7398,
											"end": 7409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 7386,
											"end": 7409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7409,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 10876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 10833,
											"end": 10841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10833,
											"end": 10877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394"
										},
										{
											"begin": 10906,
											"end": 10916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10892,
											"end": 10917,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10917,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7783,
											"end": 7790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7822,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11175,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 11148,
											"end": 11175,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11175,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11175,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11412,
											"end": 11426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11412,
											"end": 11438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11412,
											"end": 11438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11412,
											"end": 11438,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11412,
											"end": 11438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10083,
											"end": 10094,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10063,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10072,
											"end": 10078,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10080,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10094,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10196,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 10040,
											"end": 10196,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 10148,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10150,
											"end": 10160,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7C4F8B5D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 10117,
											"end": 10185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10185,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 10040,
											"end": 10196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10246,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10224,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10225,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10240,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 10206,
											"end": 10257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 10267,
											"end": 10282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 10267,
											"end": 10284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 10315,
											"end": 10325,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10338,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10301,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 10295,
											"end": 10314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10295,
											"end": 10314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 10295,
											"end": 10314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 10295,
											"end": 10339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F8F630C8B146486A33AFC98F55BD1FDD5D4717DEAB161C649B6FE758D877289"
										},
										{
											"begin": 10376,
											"end": 10386,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10399,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 10355,
											"end": 10400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10400,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9965,
											"end": 10407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7625,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7626,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7638,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 7595,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7639,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7595,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8301,
											"end": 8316,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 4251,
											"end": 4258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4275,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4247,
											"end": 4527,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4316,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4328,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2183CAE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4298,
											"end": 4367,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4367,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4247,
											"end": 4527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4429,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4396,
											"end": 4406,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4407,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4419,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4429,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4384,
											"end": 4527,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4491,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7C4F8B5D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 4452,
											"end": 4516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4516,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4384,
											"end": 4527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8367,
											"end": 8382,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8339,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8350,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8351,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 8332,
											"end": 8382,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8332,
											"end": 8382,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8392,
											"end": 8407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 8392,
											"end": 8409,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8409,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8433,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8457,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8439,
											"end": 8463,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8486,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 8439,
											"end": 8491,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8491,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 8501,
											"end": 8538,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 8501,
											"end": 8538,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3F8F630C8B146486A33AFC98F55BD1FDD5D4717DEAB161C649B6FE758D877289"
										},
										{
											"begin": 8575,
											"end": 8585,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8587,
											"end": 8602,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 8554,
											"end": 8603,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8554,
											"end": 8603,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8610,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8193,
											"end": 8610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 8693,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8795,
											"end": 8823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 8813,
											"end": 8822,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8795,
											"end": 8823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 8795,
											"end": 8823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3574,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3553,
											"end": 3586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3553,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A04DCEBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3609,
											"end": 3657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8869,
											"end": 8878,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8851,
											"end": 8879,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8851,
											"end": 8879,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8851,
											"end": 8879,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3933,
											"end": 3946,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3916,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3901,
											"end": 3930,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3946,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3986,
											"end": 3999,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "430B43DF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3969,
											"end": 4000,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 8916,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8903,
											"end": 8912,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8903,
											"end": 8916,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 8895,
											"end": 8933,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 8895,
											"end": 8933,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8961,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8992,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 8982,
											"end": 8991,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8964,
											"end": 8981,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8964,
											"end": 8992,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8964,
											"end": 8992,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 8964,
											"end": 8992,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8992,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8992,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9016,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 9002,
											"end": 9016,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9002,
											"end": 9018,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9002,
											"end": 9018,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9056,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9043,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9028,
											"end": 9043,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 9028,
											"end": 9056,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9056,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9110,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9073,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9084,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9085,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9094,
											"end": 9095,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9097,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 9066,
											"end": 9110,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9110,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "E03F32AE5DCDD1E3D7D441BE59E1650006AEB02C24FAA7EF36785183D5C505"
										},
										{
											"begin": 9144,
											"end": 9154,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9165,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9177,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9126,
											"end": 9178,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9178,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 9185,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3678,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8693,
											"end": 9185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9432,
											"end": 9443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3574,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3553,
											"end": 3586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3553,
											"end": 3586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A04DCEBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3609,
											"end": 3657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3657,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3549,
											"end": 3668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9471,
											"end": 9482,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3933,
											"end": 3946,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3916,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3901,
											"end": 3930,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3901,
											"end": 3930,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3946,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3986,
											"end": 3999,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "430B43DF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3969,
											"end": 4000,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 4000,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3897,
											"end": 4011,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9520,
											"end": 9521,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9517,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9506,
											"end": 9521,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 9498,
											"end": 9538,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9498,
											"end": 9538,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9563,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 9549,
											"end": 9563,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9549,
											"end": 9565,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9565,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9605,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9590,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9575,
											"end": 9590,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 9575,
											"end": 9605,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9605,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9655,
											"end": 9666,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9622,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9623,
											"end": 9633,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9634,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9649,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9651,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 9615,
											"end": 9666,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9666,
											"modifierDepth": 3,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 9701,
											"end": 9711,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9721,
											"end": 9725,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9728,
											"end": 9739,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9683,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 9677,
											"end": 9700,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9677,
											"end": 9700,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9700,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 9677,
											"end": 9700,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 9677,
											"end": 9740,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "E03F32AE5DCDD1E3D7D441BE59E1650006AEB02C24FAA7EF36785183D5C505"
										},
										{
											"begin": 9774,
											"end": 9784,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9800,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 9803,
											"end": 9814,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9756,
											"end": 9815,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9815,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3678,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9326,
											"end": 9822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "979"
										},
										{
											"begin": 1662,
											"end": 1692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6561,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 6354,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6448,
											"end": 6471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 6519,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 6519,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6519,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6536,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 6519,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6506,
											"end": 6536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6506,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6536,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6506,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6505,
											"end": 6554,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6505,
											"end": 6554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6554,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6505,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6561,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6702,
											"end": 6851,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 6702,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 6778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6844,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6830,
											"end": 6844,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6816,
											"end": 6826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6813,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6798,
											"end": 6813,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6798,
											"end": 6826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 6798,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6798,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6844,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 6153,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5820,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 5889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 5916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5943,
											"end": 5951,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5943,
											"end": 5967,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "FEAF968C"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5943,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 5994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5984,
											"end": 5989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5994,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5980,
											"end": 6022,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "PUSH",
											"source": 10,
											"value": "144C1D9500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6022,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6022,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5980,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 6054,
											"end": 6063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6051,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6036,
											"end": 6063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 6036,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6063,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6036,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6082,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6107,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6032,
											"end": 6107,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "B3126E600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6107,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6107,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6032,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 6153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 6153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 6153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2702,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 2847,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2793,
											"end": 2910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3227,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3227,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3218,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3218,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3200,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3200,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3348,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3348,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3551,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3397,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3508,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3508,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3545,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3744,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3557,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3672,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3731,
											"end": 3736,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3672,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3672,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3672,
											"end": 3737,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3672,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3667,
											"end": 3670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3738,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3744,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3744,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 4028,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 3750,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3871,
											"end": 3875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3911,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3894,
											"end": 3912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3886,
											"end": 3912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3886,
											"end": 3912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3922,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3922,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3922,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3922,
											"end": 4021,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3922,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 4028,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 4028,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 4028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 4028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 4028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 4162,
											"end": 4167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4131,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4339,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4180,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 4326,
											"end": 4331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 4281,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4332,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 4281,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4595,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4345,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4492,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4467,
											"end": 4493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4467,
											"end": 4493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4583,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4570,
											"end": 4587,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4503,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4588,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 4503,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4595,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4345,
											"end": 4595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4744,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4601,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4696,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4674,
											"end": 4696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4674,
											"end": 4696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 4732,
											"end": 4737,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4705,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4738,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 4705,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4744,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4744,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4744,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4744,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 5101,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4750,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4820,
											"end": 4826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4866,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 4855,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4844,
											"end": 4867,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4872,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4875,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4875,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4875,
											"end": 4954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4875,
											"end": 4954,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4875,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 5076,
											"end": 5083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5073,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5065,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 5020,
											"end": 5084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5084,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 5020,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5084,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5084,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4966,
											"end": 5094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 5101,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 5101,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 5101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 5101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 5101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5107,
											"end": 5287,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 5107,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5232,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5256,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5242,
											"end": 5257,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5280,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5273,
											"end": 5274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5281,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5484,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 5293,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5333,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5352,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5372,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5372,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5386,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 5404,
											"end": 5405,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5386,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5386,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5386,
											"end": 5406,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 5386,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5406,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5415,
											"end": 5431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5415,
											"end": 5431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5454,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5441,
											"end": 5477,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5441,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 5441,
											"end": 5477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 5457,
											"end": 5475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5441,
											"end": 5477,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 5441,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5484,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5484,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5659,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 5490,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5603,
											"end": 5606,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5643,
											"end": 5646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5659,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5659,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5835,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 5665,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5827,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5789,
											"end": 5803,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 6207,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 5841,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 6068,
											"end": 6070,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 6004,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6071,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 6004,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5997,
											"end": 6071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5997,
											"end": 6071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6080,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6080,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 6080,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6080,
											"end": 6173,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 6080,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6198,
											"end": 6200,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6193,
											"end": 6196,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6201,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 6207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 6207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 6207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 6207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6462,
											"end": 6471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6552,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6539,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 6486,
											"end": 6557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6557,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 6486,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 6635,
											"end": 6637,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6611,
											"end": 6617,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6567,
											"end": 6639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6639,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 6567,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6686,
											"end": 6695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 6696,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6660,
											"end": 6669,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6697,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6714,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6714,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 6714,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6714,
											"end": 6845,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 6714,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6706,
											"end": 6845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6706,
											"end": 6845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 7052,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 6858,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 6918,
											"end": 6938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6938,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 6918,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 6938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 6938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 6952,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6972,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 6952,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 6972,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6947,
											"end": 6972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6996,
											"end": 6997,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 6994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6989,
											"end": 6998,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6981,
											"end": 6998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6981,
											"end": 6998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7018,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7011,
											"end": 7022,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7008,
											"end": 7045,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7008,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 7008,
											"end": 7045,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7025,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7008,
											"end": 7045,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 7008,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 7052,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 7052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 7052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 7052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 7052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7291,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 7058,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7120,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 7138,
											"end": 7143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 7120,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7120,
											"end": 7144,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 7120,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7166,
											"end": 7232,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7159,
											"end": 7164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7156,
											"end": 7233,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 7153,
											"end": 7256,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7236,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7256,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 7153,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7283,
											"end": 7284,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7276,
											"end": 7281,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7272,
											"end": 7285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7291,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7291,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7522,
											"end": 7539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7513,
											"end": 7519,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 7469,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 7469,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 7618,
											"end": 7620,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7616,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7603,
											"end": 7621,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7594,
											"end": 7600,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 7550,
											"end": 7622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7622,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 7550,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7856,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7635,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7775,
											"end": 7809,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74207769746864726177206D6F7265207468616E20302E30312045"
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7759,
											"end": 7773,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7752,
											"end": 7810,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7844,
											"end": 7848,
											"name": "PUSH",
											"source": 11,
											"value": "5448000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7839,
											"end": 7841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7827,
											"end": 7842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 8228,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 7862,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8004,
											"end": 8007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 8089,
											"end": 8091,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 8025,
											"end": 8092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8092,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 8025,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8018,
											"end": 8092,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8018,
											"end": 8092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8101,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 8190,
											"end": 8193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8101,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 8101,
											"end": 8194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8101,
											"end": 8194,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 8101,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8219,
											"end": 8221,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8210,
											"end": 8222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8203,
											"end": 8222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8203,
											"end": 8222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 8228,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 8228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 8228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7862,
											"end": 8228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8471,
											"end": 8497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8471,
											"end": 8497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 8575,
											"end": 8576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8560,
											"end": 8577,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8551,
											"end": 8557,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 8507,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 8507,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 8656,
											"end": 8658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 8588,
											"end": 8660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 8588,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8707,
											"end": 8716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 8717,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8692,
											"end": 8694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8681,
											"end": 8690,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8718,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 8861,
											"end": 8865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 8735,
											"end": 8866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8866,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 8735,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8727,
											"end": 8866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8234,
											"end": 8873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 9026,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 8879,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 9026,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 9026,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 9026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 9026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8879,
											"end": 9026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9032,
											"end": 9146,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 9032,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9032,
											"end": 9146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9032,
											"end": 9146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9550,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 9152,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9332,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9413,
											"end": 9414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9408,
											"end": 9411,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 9332,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9415,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9332,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9325,
											"end": 9415,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9325,
											"end": 9415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9513,
											"end": 9516,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 9424,
											"end": 9517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9424,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9533,
											"end": 9544,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9550,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9550,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9556,
											"end": 9935,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 9556,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9740,
											"end": 9743,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9762,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 9762,
											"end": 9909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9762,
											"end": 9909,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9762,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9755,
											"end": 9909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9755,
											"end": 9909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9926,
											"end": 9929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9919,
											"end": 9929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9919,
											"end": 9929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9556,
											"end": 9935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9556,
											"end": 9935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9556,
											"end": 9935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9556,
											"end": 9935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9941,
											"end": 10108,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 9941,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "PUSH",
											"source": 11,
											"value": "5769746864726177616C206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10075,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10065,
											"end": 10079,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10058,
											"end": 10101,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9941,
											"end": 10108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9941,
											"end": 10108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10480,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10114,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10277,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10336,
											"end": 10339,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10277,
											"end": 10344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 10277,
											"end": 10344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10277,
											"end": 10344,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 10277,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10270,
											"end": 10344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10270,
											"end": 10344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10442,
											"end": 10445,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 10353,
											"end": 10446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10446,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 10353,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10474,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10905,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 10486,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10652,
											"end": 10656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10690,
											"end": 10692,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10679,
											"end": 10688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10739,
											"end": 10748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10733,
											"end": 10737,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10729,
											"end": 10749,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10725,
											"end": 10726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10727,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10750,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10767,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10893,
											"end": 10897,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10767,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10767,
											"end": 10898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10767,
											"end": 10898,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10767,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10759,
											"end": 10898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10759,
											"end": 10898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10905,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10905,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10911,
											"end": 11081,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 10911,
											"end": 11081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11051,
											"end": 11073,
											"name": "PUSH",
											"source": 11,
											"value": "476C6F62616C206C696D69742072656163686564000000000000000000000000"
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11039,
											"end": 11045,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11035,
											"end": 11049,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11028,
											"end": 11074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10911,
											"end": 11081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10911,
											"end": 11081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11453,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 11087,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11229,
											"end": 11232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 11314,
											"end": 11316,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11250,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 11250,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11250,
											"end": 11317,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 11250,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11243,
											"end": 11317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11243,
											"end": 11317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 11415,
											"end": 11418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 11326,
											"end": 11419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11419,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 11326,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11444,
											"end": 11446,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11442,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11435,
											"end": 11447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11428,
											"end": 11447,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11428,
											"end": 11447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11988,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 11459,
											"end": 11988,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11693,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11680,
											"end": 11689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11757,
											"end": 11774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11748,
											"end": 11754,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 11704,
											"end": 11775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11775,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 11704,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11822,
											"end": 11831,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11816,
											"end": 11820,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11812,
											"end": 11832,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11807,
											"end": 11809,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11796,
											"end": 11805,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11792,
											"end": 11810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11785,
											"end": 11833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 11976,
											"end": 11980,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 11850,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 11981,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 11850,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11988,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11988,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11988,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11994,
											"end": 12156,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 11994,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12134,
											"end": 12148,
											"name": "PUSH",
											"source": 11,
											"value": "5A65726F206465706F7369740000000000000000000000000000000000000000"
										},
										{
											"begin": 12130,
											"end": 12131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12111,
											"end": 12149,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11994,
											"end": 12156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11994,
											"end": 12156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12528,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12162,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12304,
											"end": 12307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 12389,
											"end": 12391,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 12384,
											"end": 12387,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12325,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 12325,
											"end": 12392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12325,
											"end": 12392,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 12325,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12318,
											"end": 12392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12318,
											"end": 12392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12401,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 12490,
											"end": 12493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12401,
											"end": 12494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12401,
											"end": 12494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12401,
											"end": 12494,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 12401,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12519,
											"end": 12521,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12514,
											"end": 12517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12510,
											"end": 12522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12503,
											"end": 12522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12503,
											"end": 12522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12953,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 12534,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12700,
											"end": 12704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12738,
											"end": 12740,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12727,
											"end": 12736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12723,
											"end": 12741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12741,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12787,
											"end": 12796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12781,
											"end": 12785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12777,
											"end": 12797,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12773,
											"end": 12774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12771,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12751,
											"end": 12798,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 12941,
											"end": 12945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12815,
											"end": 12946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12946,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 12815,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12807,
											"end": 12946,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12807,
											"end": 12946,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12953,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12534,
											"end": 12953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13108,
											"end": 13112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13146,
											"end": 13148,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13135,
											"end": 13144,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13123,
											"end": 13149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13159,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 13227,
											"end": 13228,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13216,
											"end": 13225,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13212,
											"end": 13229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13203,
											"end": 13209,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13159,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 13159,
											"end": 13230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13159,
											"end": 13230,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 13159,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 13308,
											"end": 13310,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13297,
											"end": 13306,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13293,
											"end": 13311,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13284,
											"end": 13290,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 13240,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13240,
											"end": 13312,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 13240,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13390,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13379,
											"end": 13388,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13366,
											"end": 13372,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 13322,
											"end": 13394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13322,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12959,
											"end": 13401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13817,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 13407,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13447,
											"end": 13454,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 13488,
											"end": 13489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13470,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 13470,
											"end": 13490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13470,
											"end": 13490,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 13470,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13465,
											"end": 13490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13465,
											"end": 13490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13504,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13522,
											"end": 13523,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13504,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 13504,
											"end": 13524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13504,
											"end": 13524,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13504,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13499,
											"end": 13524,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13499,
											"end": 13524,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13559,
											"end": 13560,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13556,
											"end": 13557,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13552,
											"end": 13561,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13581,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 13599,
											"end": 13610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13581,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 13581,
											"end": 13611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13581,
											"end": 13611,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 13581,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13570,
											"end": 13611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13570,
											"end": 13611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13751,
											"end": 13758,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13747,
											"end": 13762,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13744,
											"end": 13745,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13741,
											"end": 13763,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13721,
											"end": 13722,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13714,
											"end": 13723,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13694,
											"end": 13777,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13671,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 13671,
											"end": 13810,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 13790,
											"end": 13808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13671,
											"end": 13810,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 13671,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13455,
											"end": 13817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13817,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13407,
											"end": 13817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13823,
											"end": 14003,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 13823,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13871,
											"end": 13948,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13868,
											"end": 13869,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13861,
											"end": 13949,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13968,
											"end": 13972,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 13965,
											"end": 13966,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13958,
											"end": 13973,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13992,
											"end": 13996,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13989,
											"end": 13990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13997,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14194,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 14009,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14049,
											"end": 14050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14066,
											"end": 14086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14084,
											"end": 14085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14066,
											"end": 14086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 14066,
											"end": 14086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14066,
											"end": 14086,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14066,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14061,
											"end": 14086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14061,
											"end": 14086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 14118,
											"end": 14119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 14100,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 14100,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14095,
											"end": 14120,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14095,
											"end": 14120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14139,
											"end": 14140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14129,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14129,
											"end": 14164,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 14144,
											"end": 14162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14129,
											"end": 14164,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14129,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14183,
											"end": 14184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14179,
											"end": 14188,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14174,
											"end": 14188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14174,
											"end": 14188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14194,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14194,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14200,
											"end": 14381,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 14200,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14340,
											"end": 14373,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14336,
											"end": 14337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14324,
											"end": 14338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14317,
											"end": 14374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14200,
											"end": 14381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14200,
											"end": 14381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14529,
											"end": 14532,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 14614,
											"end": 14616,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14550,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14543,
											"end": 14617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14543,
											"end": 14617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 14715,
											"end": 14718,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 14626,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14744,
											"end": 14746,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14739,
											"end": 14742,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14735,
											"end": 14747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14728,
											"end": 14747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14728,
											"end": 14747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 14929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 14965,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14952,
											"end": 14961,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14940,
											"end": 14966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14940,
											"end": 14966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15012,
											"end": 15021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15006,
											"end": 15010,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15002,
											"end": 15022,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14998,
											"end": 14999,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 14996,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14983,
											"end": 15000,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14976,
											"end": 15023,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15166,
											"end": 15170,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 15040,
											"end": 15171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15032,
											"end": 15171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15032,
											"end": 15171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 15178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15184,
											"end": 15289,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 15184,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15220,
											"end": 15227,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15260,
											"end": 15282,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15253,
											"end": 15258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15249,
											"end": 15283,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15238,
											"end": 15283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15238,
											"end": 15283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15184,
											"end": 15289,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15184,
											"end": 15289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15184,
											"end": 15289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15184,
											"end": 15289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15295,
											"end": 15415,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 15295,
											"end": 15415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 15384,
											"end": 15389,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 15367,
											"end": 15390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15367,
											"end": 15390,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 15367,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15360,
											"end": 15365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15357,
											"end": 15391,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15347,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 15347,
											"end": 15409,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15405,
											"end": 15406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15402,
											"end": 15403,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15395,
											"end": 15407,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15347,
											"end": 15409,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 15347,
											"end": 15409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15295,
											"end": 15415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15295,
											"end": 15415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15562,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 15421,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15477,
											"end": 15482,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15508,
											"end": 15514,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15502,
											"end": 15515,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15524,
											"end": 15556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 15550,
											"end": 15555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15524,
											"end": 15556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 15524,
											"end": 15556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15524,
											"end": 15556,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 15524,
											"end": 15556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15562,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15568,
											"end": 15644,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 15568,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15604,
											"end": 15611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15633,
											"end": 15638,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15622,
											"end": 15638,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15622,
											"end": 15638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15568,
											"end": 15644,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15568,
											"end": 15644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15568,
											"end": 15644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15568,
											"end": 15644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15770,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 15650,
											"end": 15770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15722,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 15739,
											"end": 15744,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15722,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 15722,
											"end": 15745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15722,
											"end": 15745,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 15722,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15720,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15712,
											"end": 15746,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15702,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 15702,
											"end": 15764,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15757,
											"end": 15758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15750,
											"end": 15762,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15702,
											"end": 15764,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 15702,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15917,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 15776,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15832,
											"end": 15837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15863,
											"end": 15869,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15857,
											"end": 15870,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15848,
											"end": 15870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15848,
											"end": 15870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15879,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 15905,
											"end": 15910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15879,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 15879,
											"end": 15911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15879,
											"end": 15911,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 15879,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16026,
											"end": 16032,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16042,
											"end": 16048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16058,
											"end": 16064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16107,
											"end": 16110,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 16095,
											"end": 16104,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16086,
											"end": 16093,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16082,
											"end": 16105,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16078,
											"end": 16111,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 16075,
											"end": 16195,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16075,
											"end": 16195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 16075,
											"end": 16195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16114,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 16114,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 16114,
											"end": 16193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16114,
											"end": 16193,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 16114,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16075,
											"end": 16195,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 16075,
											"end": 16195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16259,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 16314,
											"end": 16321,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16305,
											"end": 16311,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16294,
											"end": 16303,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16290,
											"end": 16312,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 16259,
											"end": 16322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16322,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 16259,
											"end": 16322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16249,
											"end": 16322,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 16249,
											"end": 16322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16205,
											"end": 16332,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16397,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 16452,
											"end": 16459,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16443,
											"end": 16449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16432,
											"end": 16441,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16428,
											"end": 16450,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16397,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 16397,
											"end": 16460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16397,
											"end": 16460,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 16397,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16387,
											"end": 16460,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16387,
											"end": 16460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16342,
											"end": 16470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16509,
											"end": 16511,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 16591,
											"end": 16598,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16582,
											"end": 16588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16571,
											"end": 16580,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16567,
											"end": 16589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16535,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 16535,
											"end": 16599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16535,
											"end": 16599,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 16535,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16525,
											"end": 16599,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16525,
											"end": 16599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16480,
											"end": 16609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16648,
											"end": 16650,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16674,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 16730,
											"end": 16737,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16721,
											"end": 16727,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16710,
											"end": 16719,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16706,
											"end": 16728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16674,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 16674,
											"end": 16738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16674,
											"end": 16738,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 16674,
											"end": 16738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16738,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16664,
											"end": 16738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16619,
											"end": 16748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16787,
											"end": 16790,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16814,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 16869,
											"end": 16876,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 16860,
											"end": 16866,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16849,
											"end": 16858,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 16845,
											"end": 16867,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 16814,
											"end": 16877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16814,
											"end": 16877,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 16814,
											"end": 16877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16804,
											"end": 16877,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16804,
											"end": 16877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16758,
											"end": 16887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15923,
											"end": 16894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"contractBalanceInUSDC()": "6bec1ed0",
							"depositETH()": "f6326fb3",
							"depositUSDC(uint256)": "f688bcfb",
							"i_usdc()": "ff40e1d0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"s_bankCapital()": "16123524",
							"s_depositCount()": "cac2e25f",
							"s_depositLimit()": "a00cad48",
							"s_oracle()": "fc457792",
							"s_totalDeposits()": "52963c2b",
							"s_vault(address,address)": "a1eaa644",
							"s_withdrawCount()": "78234a3b",
							"setBankCapital(uint256)": "8eddc8f9",
							"setDepositLimit(uint256)": "bdc8144b",
							"setOracle(address)": "7adbf973",
							"transferOwnership(address)": "f2fde38b",
							"viewETHBalance(address)": "dcd725a7",
							"viewUSDCBalance(address)": "8c8bdae9",
							"withdrawETH(uint256)": "f14210a6",
							"withdrawUSDC(uint256)": "db81f99b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bankCapital\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositLimitUSDC\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bankLimit\",\"type\":\"uint256\"}],\"name\":\"BankLimitReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"detail\",\"type\":\"string\"}],\"name\":\"GlobalLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"detail\",\"type\":\"string\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"detail\",\"type\":\"string\"}],\"name\":\"MoneyLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OracleCompromised\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OracleOutdated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SuccessfulDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SuccessfulWithdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractBalanceInUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdcAmount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_bankCapital\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_depositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_oracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"s_vault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_withdrawCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newCapital\",\"type\":\"uint256\"}],\"name\":\"setBankCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"setDepositLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"viewETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"viewUSDCBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdcAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Antony Arguello\",\"details\":\"Implementa seguridad contra reentradas y permisos de propietario.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_bankCapital\":\"L\\u00edmite m\\u00e1ximo de capital del banco (en USDC-units).\",\"_depositLimitUSDC\":\"L\\u00edmite global de dep\\u00f3sitos (en USDC-units).\",\"_oracle\":\"Direcci\\u00f3n del or\\u00e1culo de Chainlink (ETH/USD).\",\"_owner\":\"Direcci\\u00f3n del propietario del contrato.\",\"_usdc\":\"Direcci\\u00f3n del contrato del token USDC.\"}},\"depositUSDC(uint256)\":{\"params\":{\"_usdcAmount\":\"Cantidad en unidades USDC (6 decimales).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBankCapital(uint256)\":{\"params\":{\"_newCapital\":\"L\\u00edmite en unidades USDC.\"}},\"setDepositLimit(uint256)\":{\"params\":{\"_newLimit\":\"Nuevo l\\u00edmite en unidades USDC.\"}},\"setOracle(address)\":{\"params\":{\"_newOracle\":\"Nueva direcci\\u00f3n del or\\u00e1culo Chainlink.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETH(uint256)\":{\"params\":{\"_withdrawAmount\":\"Cantidad a retirar en wei.\"}},\"withdrawUSDC(uint256)\":{\"params\":{\"_usdcAmount\":\"Cantidad en USDC (6 decimales).\"}}},\"title\":\"Banco Kipu (KipuBankV2)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractBalanceInUSDC()\":{\"notice\":\"Retorna el balance total del contrato en unidades USDC.\"},\"depositETH()\":{\"notice\":\"Permite depositar ETH en la b\\u00f3veda personal.\"},\"depositUSDC(uint256)\":{\"notice\":\"Permite depositar USDC directamente.\"},\"i_usdc()\":{\"notice\":\"Token USDC usado por el contrato.\"},\"s_bankCapital()\":{\"notice\":\"Capital m\\u00e1ximo permitido en el banco.\"},\"s_depositLimit()\":{\"notice\":\"L\\u00edmite global de dep\\u00f3sitos (en unidades USDC, 6 decimales).\"},\"s_oracle()\":{\"notice\":\"Or\\u00e1culo de precios (por ejemplo, ETH/USD de Chainlink).\"},\"s_totalDeposits()\":{\"notice\":\"Total acumulado de dep\\u00f3sitos (en USDC-units).\"},\"s_vault(address,address)\":{\"notice\":\"B\\u00f3veda: mapea usuario => token => cantidad.\"},\"s_withdrawCount()\":{\"notice\":\"Contadores de operaciones.\"},\"setBankCapital(uint256)\":{\"notice\":\"Permite al propietario ajustar el capital m\\u00e1ximo del banco.\"},\"setDepositLimit(uint256)\":{\"notice\":\"Permite al propietario ajustar el l\\u00edmite global de dep\\u00f3sitos.\"},\"setOracle(address)\":{\"notice\":\"Permite actualizar el or\\u00e1culo de precios.\"},\"viewETHBalance(address)\":{\"notice\":\"Retorna el saldo del usuario en ETH convertido a USDC.\"},\"viewUSDCBalance(address)\":{\"notice\":\"Retorna el saldo del usuario en USDC.\"},\"withdrawETH(uint256)\":{\"notice\":\"Permite al usuario retirar ETH de su b\\u00f3veda.\"},\"withdrawUSDC(uint256)\":{\"notice\":\"Permite retirar USDC desde la b\\u00f3veda personal.\"}},\"notice\":\"Contrato bancario descentralizado que permite dep\\u00f3sitos y retiros en ETH y USDC.         Utiliza Chainlink como or\\u00e1culo de precios y controla l\\u00edmites globales y de capital.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KipuBankV2.sol\":\"KipuBankV2\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/KipuBankV2.sol\":{\"keccak256\":\"0xd831584b2578251f19eb936d285a8f44c3f80e5ae18e65e2ca1e74619ce360c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fad73c273b8f66f25493eed528ea69a71e33971c9b6b3df4d96414ce2d571b3\",\"dweb:/ipfs/QmeWENE8UL7ETYbMMVpb9pFHoRiXCLBGKP4hqbfnhkMjon\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 294,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_vault",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 963,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_oracle",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 982,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_depositLimit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 985,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_totalDeposits",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 988,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_bankCapital",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 995,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_withdrawCount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 997,
								"contract": "contracts/KipuBankV2.sol:KipuBankV2",
								"label": "s_depositCount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"contractBalanceInUSDC()": {
								"notice": "Retorna el balance total del contrato en unidades USDC."
							},
							"depositETH()": {
								"notice": "Permite depositar ETH en la bóveda personal."
							},
							"depositUSDC(uint256)": {
								"notice": "Permite depositar USDC directamente."
							},
							"i_usdc()": {
								"notice": "Token USDC usado por el contrato."
							},
							"s_bankCapital()": {
								"notice": "Capital máximo permitido en el banco."
							},
							"s_depositLimit()": {
								"notice": "Límite global de depósitos (en unidades USDC, 6 decimales)."
							},
							"s_oracle()": {
								"notice": "Oráculo de precios (por ejemplo, ETH/USD de Chainlink)."
							},
							"s_totalDeposits()": {
								"notice": "Total acumulado de depósitos (en USDC-units)."
							},
							"s_vault(address,address)": {
								"notice": "Bóveda: mapea usuario => token => cantidad."
							},
							"s_withdrawCount()": {
								"notice": "Contadores de operaciones."
							},
							"setBankCapital(uint256)": {
								"notice": "Permite al propietario ajustar el capital máximo del banco."
							},
							"setDepositLimit(uint256)": {
								"notice": "Permite al propietario ajustar el límite global de depósitos."
							},
							"setOracle(address)": {
								"notice": "Permite actualizar el oráculo de precios."
							},
							"viewETHBalance(address)": {
								"notice": "Retorna el saldo del usuario en ETH convertido a USDC."
							},
							"viewUSDCBalance(address)": {
								"notice": "Retorna el saldo del usuario en USDC."
							},
							"withdrawETH(uint256)": {
								"notice": "Permite al usuario retirar ETH de su bóveda."
							},
							"withdrawUSDC(uint256)": {
								"notice": "Permite retirar USDC desde la bóveda personal."
							}
						},
						"notice": "Contrato bancario descentralizado que permite depósitos y retiros en ETH y USDC.         Utiliza Chainlink como oráculo de precios y controla límites globales y de capital.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "189:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:0"
									},
									"scope": 45,
									"src": "146:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:0"
									},
									"scope": 45,
									"src": "200:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:0"
									},
									"scope": 45,
									"src": "265:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:0"
									},
									"scope": 45,
									"src": "320:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "618:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:0"
									},
									"scope": 45,
									"src": "487:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "110:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							920
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 921,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 920,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 920,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								920
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC165": [
							932
						],
						"IERC20": [
							426
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 284,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 280,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 932,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 426,
										"src": "590:6:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "598:7:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								932,
								426
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 275,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 275,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 275,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 275,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 275,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 275,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								360,
								369
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							932
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 933,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 932,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							426
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 427,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							348
						]
					},
					"id": 349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 348,
							"linearizedBaseContracts": [
								348
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 289,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 348,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 287,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 292,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 348,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 348,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 348,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 305,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 308,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 313,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 318,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 324,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 348,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 348,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 343,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 348,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 349,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							426
						]
					},
					"id": 427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 350,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 351,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 426,
							"linearizedBaseContracts": [
								426
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 360,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 369,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 426,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 426,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 426,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 426,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 426,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 426,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 427,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								360,
								369
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC20": [
							426
						],
						"SafeERC20": [
							890
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 430,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 427,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 429,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 276,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 431,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 890,
							"linearizedBaseContracts": [
								890
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 438,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 447,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 462,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 464,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 465,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 466,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 460,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 458,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 449,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 426,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 890,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 488,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 490,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 491,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 492,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 484,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 426,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 890,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 515,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 517,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 519,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 513,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 511,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 510,
												"id": 522,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 501,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 500,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 426,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 890,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 543,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 545,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 546,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 548,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 541,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 539,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 538,
												"id": 551,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 526,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 426,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 890,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 570,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$890",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$890",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 566,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 579,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 555,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 426,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 890,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 625,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															596
														],
														"declarations": [
															{
																"constant": false,
																"id": 596,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 605,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 601,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$890",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$890",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 599,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 597,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 403,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 607,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 616,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 615,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 610,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 611,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 596,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 612,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 609,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 614,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 618,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 619,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 620,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 621,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 617,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 624,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 426,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 890,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 638,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 642,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 413,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 644,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 646,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 640,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 650,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 651,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 649,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 671,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 655,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 658,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$426",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 660,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 633,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 661,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 656,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 654,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 665,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 667,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 668,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 666,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 629,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 426,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 890,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 687,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 703,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 226,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 714,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 713,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 709,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 707,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 706,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 712,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 715,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 692,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 275,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 890,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 732,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 747,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 748,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 749,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 750,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 761,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 760,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 756,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 754,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 753,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 759,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 739,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 740,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 737,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 720,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 719,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 275,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 890,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 777,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 791,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 792,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 793,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 789,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 804,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 803,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 799,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 768,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 797,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 796,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 802,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 783,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 784,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 785,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 782,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 766,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 275,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 890,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 813,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 813,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 811,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 823,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 834,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$426",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$426",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 826,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 841,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$426",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$426",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 838,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 810,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 809,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 426,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 812,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 890,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 859,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 854,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 854,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 863,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 866,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 852,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 868,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 869,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 870,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 875,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 852,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$426",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$426",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 873,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 858,
												"id": 887,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 850,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 426,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 890,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 891,
							"src": "698:9376:7",
							"usedErrors": [
								438,
								447
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							920
						]
					},
					"id": 921,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 920,
							"linearizedBaseContracts": [
								920
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 898,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 897,
												"id": 900,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 920,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 906,
												"id": 909,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 920,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 915,
												"id": 917,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 920,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 921,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							932
						]
					},
					"id": 933,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 922,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 923,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 932,
							"linearizedBaseContracts": [
								932
							],
							"name": "IERC165",
							"nameLocation": "433:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "819:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 925,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:9"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 928,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:9"
									},
									"scope": 932,
									"src": "792:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 933,
							"src": "423:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:9"
				},
				"id": 9
			},
			"contracts/KipuBankV2.sol": {
				"ast": {
					"absolutePath": "contracts/KipuBankV2.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"IERC20": [
							426
						],
						"KipuBankV2": [
							1587
						],
						"Ownable": [
							193
						],
						"ReentrancyGuard": [
							348
						],
						"SafeERC20": [
							890
						]
					},
					"id": 1588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 934,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 349,
							"src": "57:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 46,
							"src": "120:112:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "128:21:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 194,
							"src": "233:67:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 193,
										"src": "241:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 891,
							"src": "301:82:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 940,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 890,
										"src": "309:9:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 427,
							"src": "384:70:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 942,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "392:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 945,
										"name": "Ownable",
										"nameLocations": [
											"812:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "812:7:10"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "812:7:10"
								},
								{
									"baseName": {
										"id": 947,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"821:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 348,
										"src": "821:15:10"
									},
									"id": 948,
									"nodeType": "InheritanceSpecifier",
									"src": "821:15:10"
								}
							],
							"canonicalName": "KipuBankV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 944,
								"nodeType": "StructuredDocumentation",
								"src": "456:332:10",
								"text": " @title Banco Kipu (KipuBankV2)\n @author Antony Arguello\n @notice Contrato bancario descentralizado que permite depósitos y retiros en ETH y USDC.\n         Utiliza Chainlink como oráculo de precios y controla límites globales y de capital.\n @dev Implementa seguridad contra reentradas y permisos de propietario."
							},
							"fullyImplemented": true,
							"id": 1587,
							"linearizedBaseContracts": [
								1587,
								348,
								193,
								920
							],
							"name": "KipuBankV2",
							"nameLocation": "798:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 952,
									"libraryName": {
										"id": 949,
										"name": "SafeERC20",
										"nameLocations": [
											"849:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "849:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "843:27:10",
									"typeName": {
										"id": 951,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 950,
											"name": "IERC20",
											"nameLocations": [
												"863:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 426,
											"src": "863:6:10"
										},
										"referencedDeclaration": 426,
										"src": "863:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$426",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1082:56:10",
										"text": "@notice Bóveda: mapea usuario => token => cantidad."
									},
									"functionSelector": "a1eaa644",
									"id": 959,
									"mutability": "mutable",
									"name": "s_vault",
									"nameLocation": "1216:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1143:80:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 958,
										"keyName": "user",
										"keyNameLocation": "1159:4:10",
										"keyType": {
											"id": 954,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1151:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1143:65:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 957,
											"keyName": "token",
											"keyNameLocation": "1183:5:10",
											"keyType": {
												"id": 955,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1175:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1167:40:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "amount",
											"valueNameLocation": "1200:6:10",
											"valueType": {
												"id": 956,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1192:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "1230:68:10",
										"text": "@notice Oráculo de precios (por ejemplo, ETH/USD de Chainlink)."
									},
									"functionSelector": "fc457792",
									"id": 963,
									"mutability": "mutable",
									"name": "s_oracle",
									"nameLocation": "1332:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1303:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 962,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 961,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1303:21:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1303:21:10"
										},
										"referencedDeclaration": 45,
										"src": "1303:21:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "1347:78:10",
										"text": "@notice Tiempo máximo permitido sin actualización del oráculo (1 hora)."
									},
									"id": 967,
									"mutability": "constant",
									"name": "ORACLE_HEARTBEAT",
									"nameLocation": "1447:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1430:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 965,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1430:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 966,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1466:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "1477:77:10",
										"text": "@notice Factor de conversión entre ETH (wei), precio (1e8) y USDC (1e6)."
									},
									"id": 975,
									"mutability": "constant",
									"name": "DECIMAL_FACTOR",
									"nameLocation": "1576:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1559:46:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1559:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 974,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 970,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1593:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_100000000000000000000_by_1",
												"typeString": "int_const 100000000000000000000"
											},
											"id": 973,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 971,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1597:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3230",
												"id": 972,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1603:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_20_by_1",
													"typeString": "int_const 20"
												},
												"value": "20"
											},
											"src": "1597:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000000000000000_by_1",
												"typeString": "int_const 100000000000000000000"
											}
										},
										"src": "1593:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "1612:45:10",
										"text": "@notice Token USDC usado por el contrato."
									},
									"functionSelector": "ff40e1d0",
									"id": 979,
									"mutability": "immutable",
									"name": "i_usdc",
									"nameLocation": "1686:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1662:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$426",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 978,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 977,
											"name": "IERC20",
											"nameLocations": [
												"1662:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 426,
											"src": "1662:6:10"
										},
										"referencedDeclaration": 426,
										"src": "1662:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$426",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "1699:73:10",
										"text": "@notice Límite global de depósitos (en unidades USDC, 6 decimales)."
									},
									"functionSelector": "a00cad48",
									"id": 982,
									"mutability": "mutable",
									"name": "s_depositLimit",
									"nameLocation": "1792:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1777:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1777:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1813:58:10",
										"text": "@notice Total acumulado de depósitos (en USDC-units)."
									},
									"functionSelector": "52963c2b",
									"id": 985,
									"mutability": "mutable",
									"name": "s_totalDeposits",
									"nameLocation": "1891:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1876:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1876:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "1913:50:10",
										"text": "@notice Capital máximo permitido en el banco."
									},
									"functionSelector": "16123524",
									"id": 988,
									"mutability": "mutable",
									"name": "s_bankCapital",
									"nameLocation": "1983:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "1968:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 987,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1968:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "2003:45:10",
										"text": "@notice Límite máximo de retiro en ETH."
									},
									"id": 992,
									"mutability": "constant",
									"name": "WITHDRAW_LIMIT",
									"nameLocation": "2078:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "2053:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2053:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3031",
										"id": 991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2095:10:10",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "0.01"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "2112:38:10",
										"text": "@notice Contadores de operaciones."
									},
									"functionSelector": "78234a3b",
									"id": 995,
									"mutability": "mutable",
									"name": "s_withdrawCount",
									"nameLocation": "2170:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "2155:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 994,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2155:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cac2e25f",
									"id": 997,
									"mutability": "mutable",
									"name": "s_depositCount",
									"nameLocation": "2206:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "2191:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 996,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2191:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3f8f630c8b146486a33afc98f55bd1fdd5d4717deab161c649b6fe758d877289",
									"id": 1003,
									"name": "SuccessfulWithdrawal",
									"nameLocation": "2427:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2456:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2448:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2470:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2462:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:30:10"
									},
									"src": "2421:57:10"
								},
								{
									"anonymous": false,
									"eventSelector": "00e03f32ae5dcdd1e3d7d441be59e1650006aeb02c24faa7ef36785183d5c505",
									"id": 1011,
									"name": "SuccessfulDeposit",
									"nameLocation": "2489:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2515:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "2507:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2529:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "2521:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2521:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2547:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "2539:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:48:10"
									},
									"src": "2483:72:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394",
									"id": 1015,
									"name": "OracleUpdated",
									"nameLocation": "2566:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOracle",
												"nameLocation": "2588:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2580:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2579:19:10"
									},
									"src": "2560:39:10"
								},
								{
									"errorSelector": "2183cae3",
									"id": 1023,
									"name": "MoneyLimit",
									"nameLocation": "2820:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2839:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2831:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2855:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2847:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "detail",
												"nameLocation": "2868:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2861:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1020,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2861:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:45:10"
									},
									"src": "2814:62:10"
								},
								{
									"errorSelector": "7c4f8b5d",
									"id": 1031,
									"name": "InsufficientBalance",
									"nameLocation": "2887:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2915:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2907:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2931:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2923:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2923:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "detail",
												"nameLocation": "2944:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2937:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2937:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:45:10"
									},
									"src": "2881:71:10"
								},
								{
									"errorSelector": "a04dceba",
									"id": 1037,
									"name": "GlobalLimit",
									"nameLocation": "2963:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2983:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2975:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "detail",
												"nameLocation": "2998:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2991:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2991:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:31:10"
									},
									"src": "2957:49:10"
								},
								{
									"errorSelector": "144c1d95",
									"id": 1039,
									"name": "OracleCompromised",
									"nameLocation": "3017:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3034:2:10"
									},
									"src": "3011:26:10"
								},
								{
									"errorSelector": "0b3126e6",
									"id": 1041,
									"name": "OracleOutdated",
									"nameLocation": "3048:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3062:2:10"
									},
									"src": "3042:23:10"
								},
								{
									"errorSelector": "430b43df",
									"id": 1045,
									"name": "BankLimitReached",
									"nameLocation": "3076:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "bankLimit",
												"nameLocation": "3101:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3093:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:19:10"
									},
									"src": "3070:42:10"
								},
								{
									"errorSelector": "27fcd9d1",
									"id": 1047,
									"name": "WithdrawalFailed",
									"nameLocation": "3123:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:2:10"
									},
									"src": "3117:25:10"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "3539:146:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1053,
															"name": "_usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "3574:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "_exceedsDepositLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "3553:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3553:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1061,
												"nodeType": "IfStatement",
												"src": "3549:119:10",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "3588:80:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1056,
																		"name": "_usdcAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "3621:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "476c6f62616c206c696d69742072656163686564",
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3634:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51",
																			"typeString": "literal_string \"Global limit reached\""
																		},
																		"value": "Global limit reached"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f2351299a05548badd5a889ecb33d5b3ab632b9ea59a73947e8c53a30bf38e51",
																			"typeString": "literal_string \"Global limit reached\""
																		}
																	],
																	"id": 1055,
																	"name": "GlobalLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "3609:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (uint256,string memory) pure returns (error)"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3609:48:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1059,
															"nodeType": "RevertStatement",
															"src": "3602:55:10"
														}
													]
												}
											},
											{
												"id": 1062,
												"nodeType": "PlaceholderStatement",
												"src": "3677:1:10"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "3348:138:10",
										"text": " @dev Verifica que el monto no exceda el límite global de depósitos.\n @param _usdcAmount Monto en unidades USDC."
									},
									"id": 1064,
									"name": "withinGlobalLimit",
									"nameLocation": "3500:17:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_usdcAmount",
												"nameLocation": "3526:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "3518:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:21:10"
									},
									"src": "3491:194:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "3887:141:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1069,
															"name": "s_totalDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3901:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1070,
															"name": "_usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3919:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3901:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1072,
														"name": "s_bankCapital",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3933:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3901:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "3897:114:10",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "3948:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1075,
																		"name": "s_bankCapital",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "3986:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1074,
																	"name": "BankLimitReached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3969:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3969:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1077,
															"nodeType": "RevertStatement",
															"src": "3962:38:10"
														}
													]
												}
											},
											{
												"id": 1080,
												"nodeType": "PlaceholderStatement",
												"src": "4020:1:10"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "3691:143:10",
										"text": " @dev Verifica que el monto no exceda el capital total permitido del banco.\n @param _usdcAmount Monto en unidades USDC."
									},
									"id": 1082,
									"name": "withinBankCapital",
									"nameLocation": "3848:17:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_usdcAmount",
												"nameLocation": "3874:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "3866:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:21:10"
									},
									"src": "3839:189:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "4237:307:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "4251:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1088,
														"name": "WITHDRAW_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "4261:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4251:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1098,
																	"name": "s_vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "4388:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1101,
																"indexExpression": {
																	"expression": {
																		"id": 1099,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4396:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4400:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4396:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4388:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1106,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4416:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4408:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4408:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4408:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4388:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1107,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "4422:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4388:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1117,
													"nodeType": "IfStatement",
													"src": "4384:143:10",
													"trueBody": {
														"id": 1116,
														"nodeType": "Block",
														"src": "4431:96:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1110,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "4472:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1111,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4481:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4485:6:10",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4481:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"hexValue": "496e73756666696369656e742062616c616e6365",
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4493:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																				"typeString": "literal_string \"Insufficient balance\""
																			},
																			"value": "Insufficient balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																				"typeString": "literal_string \"Insufficient balance\""
																			}
																		],
																		"id": 1109,
																		"name": "InsufficientBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "4452:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																			"typeString": "function (uint256,address,string memory) pure returns (error)"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4452:64:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1115,
																"nodeType": "RevertStatement",
																"src": "4445:71:10"
															}
														]
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "4247:280:10",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "4277:101:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1091,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "4309:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1092,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4318:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4322:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4318:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20302e303120455448",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4330:36:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d",
																			"typeString": "literal_string \"Cannot withdraw more than 0.01 ETH\""
																		},
																		"value": "Cannot withdraw more than 0.01 ETH"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c00ac08c82586486db7afa6c710bac0152495169ee33f0be731b7a69a3895a2d",
																			"typeString": "literal_string \"Cannot withdraw more than 0.01 ETH\""
																		}
																	],
																	"id": 1090,
																	"name": "MoneyLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "4298:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (uint256,address,string memory) pure returns (error)"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4298:69:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1096,
															"nodeType": "RevertStatement",
															"src": "4291:76:10"
														}
													]
												}
											},
											{
												"id": 1119,
												"nodeType": "PlaceholderStatement",
												"src": "4536:1:10"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "4034:156:10",
										"text": " @dev Verifica que el monto de retiro sea válido y que el usuario tenga saldo suficiente.\n @param _amount Monto a retirar (en wei)."
									},
									"id": 1121,
									"name": "validWithdrawal",
									"nameLocation": "4204:15:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4228:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4220:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4219:17:10"
									},
									"src": "4195:349:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "5286:172:10",
										"statements": [
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1138,
														"name": "s_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5296:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1140,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "5329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1139,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "5307:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5307:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "5296:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "5296:41:10"
											},
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1144,
														"name": "i_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "5347:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$426",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1146,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "5363:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1145,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "5356:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5356:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$426",
															"typeString": "contract IERC20"
														}
													},
													"src": "5347:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "5347:22:10"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1150,
														"name": "s_bankCapital",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "5379:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1151,
														"name": "_bankCapital",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "5395:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5379:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "5379:28:10"
											},
											{
												"expression": {
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1154,
														"name": "s_depositLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "5417:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1155,
														"name": "_depositLimitUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5434:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5417:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "5417:34:10"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "4748:362:10",
										"text": " @param _bankCapital Límite máximo de capital del banco (en USDC-units).\n @param _depositLimitUSDC Límite global de depósitos (en USDC-units).\n @param _oracle Dirección del oráculo de Chainlink (ETH/USD).\n @param _usdc Dirección del contrato del token USDC.\n @param _owner Dirección del propietario del contrato."
									},
									"id": 1159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1135,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1132,
													"src": "5278:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1136,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1134,
												"name": "Ownable",
												"nameLocations": [
													"5270:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "5270:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5270:15:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "_bankCapital",
												"nameLocation": "5144:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5136:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5136:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_depositLimitUSDC",
												"nameLocation": "5174:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5166:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5166:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "5209:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5201:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "_usdc",
												"nameLocation": "5234:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5226:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5226:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5257:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "5249:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5126:143:10"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:10"
									},
									"scope": 1587,
									"src": "5115:343:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "5891:262:10",
										"statements": [
											{
												"assignments": [
													null,
													1166,
													null,
													1168,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5911:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "5904:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1165,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5904:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "5928:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "5920:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5920:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1172,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1169,
															"name": "s_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5943:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5952:15:10",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "5943:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5943:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5901:68:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "5984:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5993:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5984:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1179,
												"nodeType": "IfStatement",
												"src": "5980:42:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1176,
															"name": "OracleCompromised",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "6003:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6003:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1178,
													"nodeType": "RevertStatement",
													"src": "5996:26:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1180,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6036:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6042:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6036:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1182,
															"name": "updatedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "6054:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6036:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1184,
														"name": "ORACLE_HEARTBEAT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "6066:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6036:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "IfStatement",
												"src": "6032:75:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1186,
															"name": "OracleOutdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "6091:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6091:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1188,
													"nodeType": "RevertStatement",
													"src": "6084:23:10"
												}
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1190,
														"name": "ethUSDPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "6118:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1193,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "6140:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6132:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1191,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6132:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6132:14:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6118:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "6118:28:10"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "5669:146:10",
										"text": " @notice Obtiene el precio ETH/USD desde el oráculo Chainlink.\n @return ethUSDPrice Precio de ETH en USD con 8 decimales."
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getETHUSDPrice",
									"nameLocation": "5829:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5844:2:10"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "ethUSDPrice",
												"nameLocation": "5878:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "5870:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5869:21:10"
									},
									"scope": 1587,
									"src": "5820:333:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "6477:84:10",
										"statements": [
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1206,
														"name": "convertedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "6487:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1207,
																		"name": "_ethAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "6506:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1208,
																			"name": "_getETHUSDPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "6519:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6519:17:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6506:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1211,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6505:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1212,
															"name": "DECIMAL_FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "6540:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6505:49:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6487:67:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "6487:67:10"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "6159:190:10",
										"text": " @notice Convierte una cantidad en ETH a su equivalente en USDC.\n @param _ethAmount Cantidad en wei.\n @return convertedAmount Equivalente en USDC (6 decimales)."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertETHtoUSDC",
									"nameLocation": "6363:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "_ethAmount",
												"nameLocation": "6389:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6381:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6380:20:10"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "convertedAmount",
												"nameLocation": "6456:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6448:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6447:25:10"
									},
									"scope": 1587,
									"src": "6354:207:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "6780:71:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1225,
																	"name": "s_totalDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "6798:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1226,
																	"name": "amountUSDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "6816:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6798:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6797:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1229,
														"name": "s_depositLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "6830:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6797:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1231,
												"nodeType": "Return",
												"src": "6790:54:10"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "6567:130:10",
										"text": " @notice Verifica si se excede el límite global de depósitos.\n @param amountUSDC Monto en unidades USDC."
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exceedsDepositLimit",
									"nameLocation": "6711:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amountUSDC",
												"nameLocation": "6740:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "6732:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6732:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6731:20:10"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "6774:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6774:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6773:6:10"
									},
									"scope": 1587,
									"src": "6702:149:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "7228:188:10",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "ethInUSDC",
														"nameLocation": "7246:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "7238:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7238:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1244,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7284:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_KipuBankV2_$1587",
																			"typeString": "contract KipuBankV2"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_KipuBankV2_$1587",
																			"typeString": "contract KipuBankV2"
																		}
																	],
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7276:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1242,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7276:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7276:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7290:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7276:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_convertETHtoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "7258:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7258:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7238:60:10"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "usdcBalance",
														"nameLocation": "7316:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "7308:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7308:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1258,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7355:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV2_$1587",
																		"typeString": "contract KipuBankV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV2_$1587",
																		"typeString": "contract KipuBankV2"
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7347:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7347:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7347:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1251,
															"name": "i_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "7330:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7337:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "7330:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7308:53:10"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "7371:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1260,
															"name": "ethInUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "7386:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1261,
															"name": "usdcBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "7398:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7386:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7371:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "7371:38:10"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "7065:82:10",
										"text": " @notice Retorna el balance total del contrato en unidades USDC."
									},
									"functionSelector": "6bec1ed0",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractBalanceInUSDC",
									"nameLocation": "7161:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7182:2:10"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "totalBalance",
												"nameLocation": "7214:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "7206:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:22:10"
									},
									"scope": 1587,
									"src": "7152:264:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "7578:68:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "s_vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "7613:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1277,
																"indexExpression": {
																	"id": 1276,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "7621:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7613:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1282,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7635:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7627:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7627:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7627:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7613:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1274,
														"name": "_convertETHtoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "7595:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7595:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1284,
												"nodeType": "Return",
												"src": "7588:51:10"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "7422:81:10",
										"text": " @notice Retorna el saldo del usuario en ETH convertido a USDC."
									},
									"functionSelector": "dcd725a7",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewETHBalance",
									"nameLocation": "7517:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7540:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "7532:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7532:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7531:14:10"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "7569:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7568:9:10"
									},
									"scope": 1587,
									"src": "7508:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "7792:54:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1294,
															"name": "s_vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "7809:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1296,
														"indexExpression": {
															"id": 1295,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "7817:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7809:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1301,
													"indexExpression": {
														"arguments": [
															{
																"id": 1299,
																"name": "i_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "7831:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7823:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1297,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7823:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7823:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7809:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1293,
												"id": 1302,
												"nodeType": "Return",
												"src": "7802:37:10"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "7652:64:10",
										"text": " @notice Retorna el saldo del usuario en USDC."
									},
									"functionSelector": "8c8bdae9",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewUSDCBalance",
									"nameLocation": "7730:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7754:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "7746:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:14:10"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "7783:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7782:9:10"
									},
									"scope": 1587,
									"src": "7721:125:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "8322:288:10",
										"statements": [
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1315,
																"name": "s_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "8332:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1322,
															"indexExpression": {
																"expression": {
																	"id": 1316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8340:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8344:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8340:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8332:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1323,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8360:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8352:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1318,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8352:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8352:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8332:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1324,
														"name": "_withdrawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "8367:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8332:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "8332:50:10"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8392:17:10",
													"subExpression": {
														"id": 1327,
														"name": "s_withdrawCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "8392:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "8392:17:10"
											},
											{
												"assignments": [
													1331,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1331,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8426:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "8421:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1330,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8488:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1334,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8447:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8451:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8447:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8439:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1332,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8439:8:10",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8439:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8459:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8439:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1338,
																"name": "_withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "8471:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8439:48:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8439:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8420:71:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "8509:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8518:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8501:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8501:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "8501:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8575:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8579:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8575:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "_withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "8587:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "SuccessfulWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "8554:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8554:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "EmitStatement",
												"src": "8549:54:10"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "8059:129:10",
										"text": " @notice Permite al usuario retirar ETH de su bóveda.\n @param _withdrawAmount Cantidad a retirar en wei."
									},
									"functionSelector": "f14210a6",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1309,
												"name": "nonReentrant",
												"nameLocations": [
													"8264:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "8264:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8264:12:10"
										},
										{
											"arguments": [
												{
													"id": 1312,
													"name": "_withdrawAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "8301:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1313,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1311,
												"name": "validWithdrawal",
												"nameLocations": [
													"8285:15:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1121,
												"src": "8285:15:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8285:32:10"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "8202:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "_withdrawAmount",
												"nameLocation": "8222:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "8214:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8214:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8213:25:10"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8322:0:10"
									},
									"scope": 1587,
									"src": "8193:417:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "8885:300:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1374,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8903:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8907:5:10",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "8903:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8915:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8903:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206465706f736974",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8918:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																"typeString": "literal_string \"Zero deposit\""
															},
															"value": "Zero deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																"typeString": "literal_string \"Zero deposit\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8895:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8895:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "8895:38:10"
											},
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "usdAmount",
														"nameLocation": "8952:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "8944:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8944:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8982:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8986:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8982:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"name": "_convertETHtoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "8964:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8944:48:10"
											},
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9002:16:10",
													"subExpression": {
														"id": 1388,
														"name": "s_depositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "9002:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "9002:16:10"
											},
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1391,
														"name": "s_totalDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "9028:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1392,
														"name": "usdAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "9047:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9028:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "9028:28:10"
											},
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1395,
																"name": "s_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "9066:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1402,
															"indexExpression": {
																"expression": {
																	"id": 1396,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9074:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9078:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9074:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9066:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1403,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9094:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9086:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9086:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9086:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9066:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1404,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9101:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9105:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9101:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9066:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "9066:44:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9144:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9148:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9144:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9164:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9156:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9156:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9156:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9168:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9172:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "9168:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1408,
														"name": "SuccessfulDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "9126:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9126:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "EmitStatement",
												"src": "9121:57:10"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "8616:72:10",
										"text": " @notice Permite depositar ETH en la bóveda personal."
									},
									"functionSelector": "f6326fb3",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1359,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1358,
												"name": "nonReentrant",
												"nameLocations": [
													"8756:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "8756:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8756:12:10"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"expression": {
																"id": 1362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8813:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8817:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8813:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1361,
														"name": "_convertETHtoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "8795:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8795:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1365,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1360,
												"name": "withinGlobalLimit",
												"nameLocations": [
													"8777:17:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1064,
												"src": "8777:17:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8777:47:10"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"expression": {
																"id": 1368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8869:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8873:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8869:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1367,
														"name": "_convertETHtoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "8851:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1366,
												"name": "withinBankCapital",
												"nameLocations": [
													"8833:17:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1082,
												"src": "8833:17:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8833:47:10"
										}
									],
									"name": "depositETH",
									"nameLocation": "8702:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8712:2:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8885:0:10"
									},
									"scope": 1587,
									"src": "8693:492:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "9488:334:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1435,
																"name": "_usdcAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "9506:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9520:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9506:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206465706f736974",
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9523:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																"typeString": "literal_string \"Zero deposit\""
															},
															"value": "Zero deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d951e8ac07dde84a43735e497d67ee4c524b854e2264cceeaaa6d903de9357f",
																"typeString": "literal_string \"Zero deposit\""
															}
														],
														"id": 1434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9498:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9498:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "9498:40:10"
											},
											{
												"expression": {
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9549:16:10",
													"subExpression": {
														"id": 1441,
														"name": "s_depositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "9549:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "9549:16:10"
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "s_totalDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "9575:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1445,
														"name": "_usdcAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "9594:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9575:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "9575:30:10"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1448,
																"name": "s_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "9615:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1455,
															"indexExpression": {
																"expression": {
																	"id": 1449,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9623:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9627:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9623:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9615:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1456,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1453,
																	"name": "i_usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "9643:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9635:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1451,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9635:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9635:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9615:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1457,
														"name": "_usdcAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "9655:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9615:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "9615:51:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1463,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9701:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9705:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9701:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1467,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9721:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV2_$1587",
																		"typeString": "contract KipuBankV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV2_$1587",
																		"typeString": "contract KipuBankV2"
																	}
																],
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9713:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9713:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9713:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1469,
															"name": "_usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "9728:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1460,
															"name": "i_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "9677:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9684:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 498,
														"src": "9677:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$426_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9677:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "9677:63:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9774:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9778:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9774:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1477,
																	"name": "i_usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "9794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9786:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9786:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9786:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "_usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "9803:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1472,
														"name": "SuccessfulDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "9756:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9756:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "EmitStatement",
												"src": "9751:64:10"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "9191:130:10",
										"text": " @notice Permite depositar USDC directamente.\n @param _usdcAmount Cantidad en unidades USDC (6 decimales)."
									},
									"functionSelector": "f688bcfb",
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1425,
												"name": "nonReentrant",
												"nameLocations": [
													"9393:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "9393:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9393:12:10"
										},
										{
											"arguments": [
												{
													"id": 1428,
													"name": "_usdcAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1423,
													"src": "9432:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1427,
												"name": "withinGlobalLimit",
												"nameLocations": [
													"9414:17:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1064,
												"src": "9414:17:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9414:30:10"
										},
										{
											"arguments": [
												{
													"id": 1431,
													"name": "_usdcAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1423,
													"src": "9471:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1432,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1430,
												"name": "withinBankCapital",
												"nameLocations": [
													"9453:17:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1082,
												"src": "9453:17:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9453:30:10"
										}
									],
									"name": "depositUSDC",
									"nameLocation": "9335:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_usdcAmount",
												"nameLocation": "9355:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "9347:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9347:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9346:21:10"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9488:0:10"
									},
									"scope": 1587,
									"src": "9326:496:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "10030:377:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1491,
																"name": "s_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "10044:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1494,
															"indexExpression": {
																"expression": {
																	"id": 1492,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10052:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10056:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10052:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10044:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1499,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1497,
																	"name": "i_usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "10072:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10064:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10064:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10064:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10044:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1500,
														"name": "_usdcAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "10083:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10044:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "10040:156:10",
												"trueBody": {
													"id": 1509,
													"nodeType": "Block",
													"src": "10096:100:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1503,
																		"name": "_usdcAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "10137:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1504,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10150:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10154:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10150:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10162:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																			"typeString": "literal_string \"Insufficient balance\""
																		},
																		"value": "Insufficient balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																			"typeString": "literal_string \"Insufficient balance\""
																		}
																	],
																	"id": 1502,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "10117:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (uint256,address,string memory) pure returns (error)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10117:68:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1508,
															"nodeType": "RevertStatement",
															"src": "10110:75:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1511,
																"name": "s_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "10206:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1518,
															"indexExpression": {
																"expression": {
																	"id": 1512,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10214:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10218:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10214:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10206:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1519,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1516,
																	"name": "i_usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "10234:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10226:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10226:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10226:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10206:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1520,
														"name": "_usdcAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "10246:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10206:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "10206:51:10"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "10267:17:10",
													"subExpression": {
														"id": 1523,
														"name": "s_withdrawCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "10267:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "10267:17:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10315:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10319:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10315:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "_usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "10327:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1526,
															"name": "i_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10295:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10302:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 471,
														"src": "10295:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$426_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10295:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "10295:44:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10376:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10380:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10376:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "_usdcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "10388:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1534,
														"name": "SuccessfulWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "10355:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10355:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "EmitStatement",
												"src": "10350:50:10"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "9828:132:10",
										"text": " @notice Permite retirar USDC desde la bóveda personal.\n @param _usdcAmount Cantidad en USDC (6 decimales)."
									},
									"functionSelector": "db81f99b",
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1488,
												"name": "nonReentrant",
												"nameLocations": [
													"10017:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "10017:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10017:12:10"
										}
									],
									"name": "withdrawUSDC",
									"nameLocation": "9974:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "_usdcAmount",
												"nameLocation": "9995:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "9987:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9987:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9986:21:10"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10030:0:10"
									},
									"scope": 1587,
									"src": "9965:442:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "10823:101:10",
										"statements": [
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1549,
														"name": "s_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "10833:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1551,
																"name": "_newOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "10866:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1550,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "10844:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10844:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "10833:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "10833:44:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1556,
															"name": "_newOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "10906:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1555,
														"name": "OracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "10892:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10892:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "EmitStatement",
												"src": "10887:30:10"
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "10625:135:10",
										"text": " @notice Permite actualizar el oráculo de precios.\n @param _newOracle Nueva dirección del oráculo Chainlink."
									},
									"functionSelector": "7adbf973",
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1546,
												"name": "onlyOwner",
												"nameLocations": [
													"10813:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "10813:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10813:9:10"
										}
									],
									"name": "setOracle",
									"nameLocation": "10774:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_newOracle",
												"nameLocation": "10792:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "10784:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10784:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10783:20:10"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10823:0:10"
									},
									"scope": 1587,
									"src": "10765:159:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "11138:44:10",
										"statements": [
											{
												"expression": {
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1568,
														"name": "s_bankCapital",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "11148:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1569,
														"name": "_newCapital",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "11164:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11148:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "11148:27:10"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "10930:139:10",
										"text": " @notice Permite al propietario ajustar el capital máximo del banco.\n @param _newCapital Límite en unidades USDC."
									},
									"functionSelector": "8eddc8f9",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1565,
												"name": "onlyOwner",
												"nameLocations": [
													"11128:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "11128:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11128:9:10"
										}
									],
									"name": "setBankCapital",
									"nameLocation": "11083:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_newCapital",
												"nameLocation": "11106:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "11098:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11098:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:21:10"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11138:0:10"
									},
									"scope": 1587,
									"src": "11074:108:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "11402:43:10",
										"statements": [
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "s_depositLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "11412:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1582,
														"name": "_newLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "11429:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11412:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "11412:26:10"
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "11188:146:10",
										"text": " @notice Permite al propietario ajustar el límite global de depósitos.\n @param _newLimit Nuevo límite en unidades USDC."
									},
									"functionSelector": "bdc8144b",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1579,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1578,
												"name": "onlyOwner",
												"nameLocations": [
													"11392:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "11392:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11392:9:10"
										}
									],
									"name": "setDepositLimit",
									"nameLocation": "11348:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "_newLimit",
												"nameLocation": "11372:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "11364:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11364:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11363:19:10"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11402:0:10"
									},
									"scope": 1587,
									"src": "11339:106:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1588,
							"src": "789:10658:10",
							"usedErrors": [
								59,
								64,
								438,
								1023,
								1031,
								1037,
								1039,
								1041,
								1045,
								1047
							],
							"usedEvents": [
								70,
								1003,
								1011,
								1015
							]
						}
					],
					"src": "32:11416:10"
				},
				"id": 10
			}
		}
	}
}